{"version":3,"file":"js/app.38e46a30.js","mappings":"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","sources":["webpack://long-term-care-web-taichung/./src/App.vue","webpack://long-term-care-web-taichung/./src/App.vue?7ccd","webpack://long-term-care-web-taichung/./src/views/HomeView.vue","webpack://long-term-care-web-taichung/./src/utils/dataProcessor.js","webpack://long-term-care-web-taichung/./src/stores/dataStore.js","webpack://long-term-care-web-taichung/./src/components/LoadingOverlay.vue","webpack://long-term-care-web-taichung/./src/components/LoadingOverlay.vue?68e9","webpack://long-term-care-web-taichung/./src/views/LeftView.vue","webpack://long-term-care-web-taichung/./src/tabs/DateLayersTab.vue","webpack://long-term-care-web-taichung/./src/utils/utils.js","webpack://long-term-care-web-taichung/./src/components/DatePicker.vue","webpack://long-term-care-web-taichung/./src/components/DatePicker.vue?92d3","webpack://long-term-care-web-taichung/./src/tabs/DateLayersTab.vue?f625","webpack://long-term-care-web-taichung/./src/tabs/ServerLayersTab.vue","webpack://long-term-care-web-taichung/./src/components/ServiceProviderPicker.vue","webpack://long-term-care-web-taichung/./src/components/ServiceProviderPicker.vue?a1df","webpack://long-term-care-web-taichung/./src/tabs/ServerLayersTab.vue?1b26","webpack://long-term-care-web-taichung/./src/views/LeftView.vue?577f","webpack://long-term-care-web-taichung/./src/views/RightView.vue","webpack://long-term-care-web-taichung/./src/tabs/PropertiesTab.vue","webpack://long-term-care-web-taichung/./src/components/DetailItem.vue","webpack://long-term-care-web-taichung/./src/components/DetailItem.vue?6bde","webpack://long-term-care-web-taichung/./src/tabs/PropertiesTab.vue?57c5","webpack://long-term-care-web-taichung/./src/views/RightView.vue?c29a","webpack://long-term-care-web-taichung/./src/views/UpperView.vue","webpack://long-term-care-web-taichung/./src/tabs/MapTab.vue","webpack://long-term-care-web-taichung/./src/stores/defineStore.js","webpack://long-term-care-web-taichung/./src/tabs/MapTab.vue?15ab","webpack://long-term-care-web-taichung/./src/tabs/DashboardTab.vue","webpack://long-term-care-web-taichung/./src/tabs/DashboardTab.vue?3301","webpack://long-term-care-web-taichung/./src/views/UpperView.vue?e2e7","webpack://long-term-care-web-taichung/./src/views/BottomView.vue","webpack://long-term-care-web-taichung/./src/tabs/DataTableTab.vue","webpack://long-term-care-web-taichung/./src/tabs/DataTableTab.vue?e5ab","webpack://long-term-care-web-taichung/./src/views/BottomView.vue?8dbb","webpack://long-term-care-web-taichung/./src/views/MiddleView.vue","webpack://long-term-care-web-taichung/./src/views/MiddleView.vue?3897","webpack://long-term-care-web-taichung/./src/views/ResponsiveLowerView.vue","webpack://long-term-care-web-taichung/./src/views/ResponsiveLowerView.vue?21f9","webpack://long-term-care-web-taichung/./src/views/HomeView.vue?1da1","webpack://long-term-care-web-taichung/./src/router/index.js","webpack://long-term-care-web-taichung/./src/main.js","webpack://long-term-care-web-taichung/webpack/bootstrap","webpack://long-term-care-web-taichung/webpack/runtime/chunk loaded","webpack://long-term-care-web-taichung/webpack/runtime/compat get default export","webpack://long-term-care-web-taichung/webpack/runtime/define property getters","webpack://long-term-care-web-taichung/webpack/runtime/global","webpack://long-term-care-web-taichung/webpack/runtime/hasOwnProperty shorthand","webpack://long-term-care-web-taichung/webpack/runtime/jsonp chunk loading","webpack://long-term-care-web-taichung/webpack/startup"],"sourcesContent":["<script>\n  /**\n   * 🏠 App.vue - 應用程式主組件\n   *\n   * 功能說明：\n   * 1. 🏗️ 提供應用程式整體框架和佈局結構\n   * 2. ⏳ 管理全域載入狀態和進度顯示\n   * 3. 🦶 提供應用程式頁腳，包含版權和技術資訊\n   * 4. 🚀 管理 Vue Router 的路由導航系統\n   * 5. 📱 實現響應式滿版佈局，無邊距和空隙\n   *\n   * 架構說明：\n   * - 內容層：路由視圖容器，動態顯示不同頁面組件\n   *\n   * 設計理念：\n   * - 滿版無邊距佈局設計\n   * - 模組化組件架構\n   */\n\n  // 🔧 Vue Composition API 引入\n  import { ref } from 'vue';\n\n  export default {\n    name: 'App',\n\n    /**\n     * 🧩 組件註冊 (Component Registration)\n     * 註冊應用程式層級使用的組件\n     */\n    components: {},\n\n    /**\n     * 🔧 組件設定函數 (Component Setup)\n     * 使用 Composition API 設定應用程式層級的狀態管理\n     */\n    setup() {\n      // ⏳ 全域載入狀態管理 (Global Loading State Management)\n      /** ⏳ 是否顯示載入覆蓋層 */\n      const isLoading = ref(false);\n      /** 📝 載入文字提示 */\n      const loadingText = ref('載入中...');\n      /** 📊 載入進度百分比 (0-100) */\n      const loadingProgress = ref(0);\n      /** 📊 是否顯示進度條 */\n      const showLoadingProgress = ref(false);\n      /** 📝 載入子文字說明 */\n      const loadingSubText = ref('');\n\n      // 📤 返回響應式數據和函數給模板使用 (Return Reactive Data and Functions)\n      return {\n        // ⏳ 載入狀態\n        isLoading, // 載入狀態開關\n        loadingText, // 載入主要文字\n        loadingProgress, // 載入進度\n        showLoadingProgress, // 是否顯示進度條\n        loadingSubText, // 載入輔助文字\n      };\n    },\n  };\n</script>\n\n<template>\n  <!-- 🏠 App.vue - 主應用程式組件 (Main Application Component) -->\n  <!-- 提供應用程式整體框架，使用 Bootstrap 實現滿版無空隙佈局 -->\n  <div id=\"app\" class=\"d-flex flex-column vh-100\">\n    <!-- 📱 主要內容區域 (Main Content Area) -->\n    <div class=\"d-flex flex-column overflow-hidden\">\n      <router-view />\n    </div>\n  </div>\n</template>\n\n<style>\n  /**\n * 🎨 應用程式全域樣式 (Application Global Styles)\n *\n * 引入共用 CSS 並定義應用程式層級的樣式\n * 注意：大部分樣式已移至 common.css 中統一管理\n */\n\n  /* 📦 引入共用樣式表 (Import Common Stylesheets) */\n  @import './assets/css/common.css';\n\n  /* 📱 應用程式特定樣式 (App-Specific Styles) */\n  /* 其他樣式已整合至 common.css 中，避免重複定義 */\n</style>\n","import { render } from \"./App.vue?vue&type=template&id=591c7e93\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=591c7e93&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<script>\n  import { ref, onMounted, onUnmounted, computed, nextTick, watch } from 'vue';\n  import { useDataStore } from '@/stores/dataStore';\n\n  // 🧩 組件引入\n  import LoadingOverlay from '../components/LoadingOverlay.vue';\n  import LeftView from './LeftView.vue';\n  import RightView from './RightView.vue';\n  import MiddleView from './MiddleView.vue';\n  import UpperView from './UpperView.vue';\n  import ResponsiveLowerView from './ResponsiveLowerView.vue';\n\n  export default {\n    name: 'HomeView',\n\n    /**\n     * 🧩 組件註冊 (Component Registration)\n     * 註冊首頁使用的所有子組件\n     */\n    components: {\n      LoadingOverlay, // 載入覆蓋層組件\n      LeftView, // 左側控制面板組件\n      RightView, // 右側面板組件\n      MiddleView, // 中間主要內容面板組件\n      UpperView, // 上半部區域組件\n      ResponsiveLowerView, // 下半部區域組件\n    },\n\n    /**\n     * 🔧 組件設定函數 (Component Setup)\n     * 使用 Composition API 設定組件邏輯和狀態管理\n     */\n    setup() {\n      // 📦 取得 Pinia 數據存儲實例\n      const dataStore = useDataStore();\n\n      // 📊 本地資料狀態 (Local Data State)\n      /** 📋 表格資料暫存 */\n      const tableData = ref([]);\n\n      // 📚 組件引用 (Component References)\n      /** 🌟 中間面板組件引用 */\n      const middlePanelRef = ref(null);\n      /** 📱 響應式上半部面板組件引用 */\n      const mobileUpperViewRef = ref(null);\n      /** 🦶 頁腳元素引用 */\n      const appFooterRef = ref(null);\n\n      // 📑 分頁狀態 (Tab States)\n      /** 🗺️ 主要分頁狀態（地圖/儀表板） */\n      const activeUpperTab = ref('map');\n      /** 📋 底部分頁狀態（表格/樣式） */\n      const activeBottomTab = ref('table');\n      /** 📊 右側分頁狀態（屬性/分析） */\n      const activeRightTab = ref('properties');\n      /** 📱 響應式下半部分頁狀態（行動版/平板版） */\n      const activeLowerTab = ref('layers');\n\n      // 📏 面板大小狀態 (Panel Size States)\n      // 使用百分比系統實現響應式佈局\n      const MIN_LEFT_PANEL_WIDTH_PERCENT = 5; // 左側面板最小寬度百分比\n      /** 📏 左側面板寬度百分比 (0-100%) */\n      const leftViewWidth = ref(20);\n      /** 📏 右側面板寬度百分比 (0-100%) */\n      const rightViewWidth = ref(20);\n      /** 📏 瀏覽器視窗寬度 */\n      const windowWidth = ref(window.innerWidth);\n      /** 📏 瀏覽器視窗高度 */\n      const windowHeight = ref(window.innerHeight);\n      /** 📏 頁腳高度 */\n      const footerHeight = ref(0);\n\n      // 🧮 計算屬性 - 面板尺寸 (Computed Properties - Panel Dimensions)\n      /** 📏 左側面板像素寬度 */\n      const leftViewWidthPx = computed(() => `${leftViewWidth.value}%`);\n      /** 📏 右側面板像素寬度 */\n      const rightViewWidthPx = computed(() => `${rightViewWidth.value}%`);\n      /** 📏 中間面板寬度百分比 */\n      const mainPanelWidth = computed(() => 100 - leftViewWidth.value - rightViewWidth.value);\n      /** 📏 中間面板像素寬度 */\n      const mainPanelWidthPx = computed(() => `${mainPanelWidth.value}%`);\n\n      /** 📏 中間面板計算高度 */\n      const calculatedMiddleViewHeight = computed(() => {\n        return windowHeight.value - footerHeight.value;\n      });\n\n      // ⏳ 載入狀態 (Loading States)\n      // 由 Pinia store 驅動的載入狀態管理\n      /** 📝 載入文字提示 */\n      const loadingText = ref('載入中...');\n      /** 📊 載入進度百分比 */\n      const loadingProgress = ref(0);\n      /** 📊 是否顯示進度條 */\n      const showLoadingProgress = ref(false);\n      /** 📝 載入子文字說明 */\n      const loadingSubText = ref('');\n\n      /** ⏳ 是否有任何圖層正在載入 */\n      const isAnyLayerLoading = computed(() =>\n        dataStore.getAllLayers().some((layer) => layer.isLoading)\n      );\n\n      /**\n       * 👀 監聽載入狀態變化 (Watch Loading State Changes)\n       * 根據 Pinia store 中的圖層載入狀態更新 UI 提示\n       */\n      watch(\n        isAnyLayerLoading,\n        (loading) => {\n          if (loading) {\n            const loadingLayer = dataStore.getAllLayers().find((l) => l.isLoading);\n            loadingText.value = `載入 ${loadingLayer.layerName} 數據中...`;\n            loadingSubText.value = '正在處理地理資訊...';\n          } else {\n            loadingText.value = '載入完成';\n            loadingSubText.value = `數據已更新`;\n          }\n        },\n        { deep: true }\n      );\n\n      // 🗺️ 地圖和圖層狀態 (Map and Layer States)\n      // 大部分狀態由 Pinia store 管理，此處保留 UI 控制相關狀態\n      /** 🗺️ 台南圖層顯示狀態（從 store 計算） */\n      const showTainanLayer = computed(() => dataStore.findLayerById('tainan')?.visible || false);\n      /** 🔍 選定的資料篩選器 */\n      const selectedFilter = ref(null);\n      /** 🔍 地圖縮放等級 */\n      const zoomLevel = ref(11);\n      /** 📍 當前地圖座標 */\n      const currentCoords = ref({ lat: 25.033, lng: 121.5654 });\n      /** 📍 作用中的地圖標記數量 */\n      const activeMarkers = ref(0);\n\n      // 📋 服務點詳細資訊狀態 (Service Point Detail State)\n      /** 📋 當前選中的服務點詳細資訊 */\n      const selectedServicePoint = ref(null);\n\n      // 🔧 拖曳狀態 (Dragging States)\n      /** 🖱️ 側邊面板拖曳進行中狀態 */\n      const isSidePanelDragging = ref(false);\n\n      // 🗺️ 地圖互動函數 (Map Interaction Functions)\n\n      /**\n       * 🔄 重設地圖視圖 (Reset Map View)\n       * 將地圖恢復到初始狀態\n       */\n      const resetView = () => {\n        if (middlePanelRef.value) {\n          middlePanelRef.value.resetMapTab();\n        }\n      };\n\n      // 🔧 拖拽調整功能 (Drag Resize Functions)\n\n      /**\n       * 🔧 開始調整面板大小 (Start Panel Resize)\n       * 改進版本的拖曳系統，提供更流暢的體驗\n       *\n       * @param {string} direction - 拖曳方向（'left' 或 'right'）\n       * @param {MouseEvent} event - 滑鼠事件對象\n       */\n      const startResize = (direction, event) => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        // 設定拖曳狀態和防止文字選取\n        isSidePanelDragging.value = true;\n        document.body.classList.add('my-no-select');\n\n        // 記錄初始位置和面板尺寸\n        const startX = event.clientX;\n        const startLeftWidth = leftViewWidth.value;\n        const startRightWidth = rightViewWidth.value;\n\n        // 獲取窗口尺寸以計算百分比\n        const currentWindowWidth = windowWidth.value;\n\n        console.log(`🔧 開始調整 ${direction} 方向，初始值:`, {\n          leftWidth: startLeftWidth,\n          rightWidth: startRightWidth,\n        });\n\n        /**\n         * 🖱️ 處理滑鼠移動事件 (Handle Mouse Move)\n         */\n        const handleMouseMove = (moveEvent) => {\n          moveEvent.preventDefault();\n\n          const deltaX = moveEvent.clientX - startX;\n          const deltaXPercent = (deltaX / currentWindowWidth) * 100;\n\n          if (direction === 'left') {\n            // 調整左側面板寬度\n            let newWidth = startLeftWidth + deltaXPercent;\n            // 限制寬度：最小值為 MIN_LEFT_PANEL_WIDTH_PERCENT，最大值確保主面板不為負\n            newWidth = Math.max(\n              MIN_LEFT_PANEL_WIDTH_PERCENT,\n              Math.min(100 - rightViewWidth.value, newWidth)\n            );\n            leftViewWidth.value = newWidth;\n          } else if (direction === 'right') {\n            // 調整右側面板寬度\n            let newWidth = startRightWidth - deltaXPercent;\n            // 限制寬度：最小值為 0，最大值確保主面板不為負\n            newWidth = Math.max(0, Math.min(100 - leftViewWidth.value, newWidth));\n            rightViewWidth.value = newWidth;\n          }\n        };\n\n        /**\n         * 🖱️ 處理滑鼠放開事件 (Handle Mouse Up)\n         */\n        const handleMouseUp = () => {\n          // 清除拖曳狀態\n          isSidePanelDragging.value = false;\n          document.body.classList.remove('my-no-select');\n          document.removeEventListener('mousemove', handleMouseMove);\n          document.removeEventListener('mouseup', handleMouseUp);\n\n          // 驗證最終尺寸\n          validatePanelSizes();\n\n          console.log('✅ 拖曳調整完成，最終值:', {\n            leftWidth: leftViewWidth.value,\n            rightWidth: rightViewWidth.value,\n            mainWidth: mainPanelWidth.value,\n          });\n        };\n\n        // 註冊事件監聽器\n        document.addEventListener('mousemove', handleMouseMove);\n        document.addEventListener('mouseup', handleMouseUp);\n      };\n\n      /**\n       * ✅ 驗證面板尺寸 (Validate Panel Sizes)\n       * 確保面板尺寸在合理範圍內 (0-100%)\n       */\n      const validatePanelSizes = () => {\n        // 確保各面板在合理範圍內\n        leftViewWidth.value = Math.max(\n          MIN_LEFT_PANEL_WIDTH_PERCENT,\n          Math.min(100, leftViewWidth.value)\n        );\n        rightViewWidth.value = Math.max(0, Math.min(100, rightViewWidth.value));\n\n        // 四捨五入到一位小數\n        leftViewWidth.value = Math.round(leftViewWidth.value * 10) / 10;\n        rightViewWidth.value = Math.round(rightViewWidth.value * 10) / 10;\n      };\n\n      // 📏 視窗大小變化處理 (Window Resize Handler)\n      /**\n       * 📏 處理瀏覽器視窗大小變化 (Handle Browser Window Resize)\n       */\n      const handleResize = () => {\n        const prevWidth = windowWidth.value;\n        const prevIsDesktop = prevWidth >= 1200;\n\n        windowWidth.value = window.innerWidth;\n        windowHeight.value = window.innerHeight;\n\n        const currentIsDesktop = window.innerWidth >= 1200;\n\n        // 檢查是否跨越了響應式斷點\n        if (prevIsDesktop !== currentIsDesktop) {\n          console.log(\n            `🔄 HomeView: 響應式斷點切換 ${prevIsDesktop ? '桌面版→響應式' : '響應式→桌面版'}`\n          );\n          handleScreenSizeChange();\n        } else {\n          // 同樣佈局模式下的大小變化，通知地圖重新計算尺寸\n          nextTick(() => {\n            setTimeout(() => {\n              if (currentIsDesktop && middlePanelRef.value) {\n                // 桌面版地圖尺寸調整\n                if (middlePanelRef.value.invalidateMapSize) {\n                  middlePanelRef.value.invalidateMapSize();\n                }\n              } else if (!currentIsDesktop && mobileUpperViewRef.value) {\n                // 響應式版本地圖尺寸調整\n                if (mobileUpperViewRef.value.invalidateMapSize) {\n                  mobileUpperViewRef.value.invalidateMapSize();\n                }\n              }\n            }, 100);\n          });\n        }\n\n        nextTick(() => {\n          // 只在 xl breakpoint 以上才計算 footer 高度\n          if (appFooterRef.value && window.innerWidth >= 1200) {\n            footerHeight.value = appFooterRef.value.offsetHeight;\n          } else {\n            footerHeight.value = 0;\n          }\n\n          // 檢查響應式底部面板高度是否仍然符合最小要求\n          if (!currentIsDesktop) {\n            const minHeight = calculateMinBottomHeight();\n            if (mobileBottomViewHeight.value < minHeight) {\n              mobileBottomViewHeight.value = Math.round(minHeight);\n              console.log(\n                `🔧 HomeView: 視窗大小變化，調整底部面板最小高度至 ${mobileBottomViewHeight.value}vh`\n              );\n            }\n          }\n        });\n      };\n\n      /**\n       * 🚀 組件掛載事件 (Component Mounted Event)\n       * 初始化組件和事件監聽器\n       */\n      onMounted(() => {\n        console.log('🚀 空間分析平台已初始化');\n\n        // 添加視窗調整事件監聽\n        window.addEventListener('resize', handleResize);\n\n        // 初始化計算頁腳高度\n        nextTick(() => {\n          // 只在 xl breakpoint 以上才計算 footer 高度\n          if (appFooterRef.value && window.innerWidth >= 1200) {\n            footerHeight.value = appFooterRef.value.offsetHeight;\n          } else {\n            footerHeight.value = 0;\n          }\n        });\n\n        // 設置螢幕尺寸觀察器\n        if (window.ResizeObserver) {\n          screenSizeObserver = new ResizeObserver((entries) => {\n            for (let entry of entries) {\n              const { width } = entry.contentRect;\n              // 檢測是否跨越 xl breakpoint (1200px)\n              const isXlAndAbove = width >= 1200;\n              const wasXlAndAbove = entry.target.classList.contains('xl-and-above');\n\n              if (isXlAndAbove !== wasXlAndAbove) {\n                // 螢幕尺寸跨越了 xl breakpoint\n                entry.target.classList.toggle('xl-and-above', isXlAndAbove);\n                handleScreenSizeChange();\n              }\n            }\n          });\n\n          screenSizeObserver.observe(document.body);\n        }\n      });\n\n      // 📍 座標和標記更新函數 (Coordinate and Marker Update Functions)\n\n      /**\n       * 📍 更新作用中標記數量 (Update Active Markers Count)\n       * @param {number} count - 標記數量\n       */\n      const updateActiveMarkers = (count) => {\n        activeMarkers.value = count;\n      };\n\n      /**\n       * 🔄 重試地圖初始化 (Retry Map Initialization)\n       * 當地圖初始化失敗時手動重試\n       */\n      const retryMapInitialization = () => {\n        if (middlePanelRef.value) {\n          middlePanelRef.value.retryMapInitialization();\n        }\n      };\n\n      /**\n       * 📊 獲取地圖初始化狀態 (Get Map Initialization Status)\n       * 返回當前地圖的初始化狀態\n       */\n      const getMapInitStatus = () => {\n        if (middlePanelRef.value) {\n          return middlePanelRef.value.getMapInitStatus();\n        }\n        return 'not-available';\n      };\n\n      /**\n       * 🎯 處理高亮顯示事件 (Handle Highlight Event)\n       * 在地圖上高亮顯示指定的特徵\n       * @param {Object} highlightData - 包含 layerId 和 id 的物件\n       */\n      const handleHighlight = (highlightData) => {\n        console.log('🎯 HomeView 處理高亮顯示:', highlightData);\n\n        // 如果當前不在地圖視圖，先切換到地圖\n        if (activeUpperTab.value !== 'map') {\n          activeUpperTab.value = 'map';\n        }\n\n        // 使用 nextTick 確保地圖組件已渲染完成\n        nextTick(() => {\n          // 檢查當前是桌面版還是響應式版本\n          const isDesktop = window.innerWidth >= 1200; // xl breakpoint\n\n          if (isDesktop) {\n            // 桌面版：使用 MiddleView\n            if (middlePanelRef.value) {\n              middlePanelRef.value.highlightFeature(highlightData);\n            } else {\n              console.error('❌ 無法高亮顯示: middlePanelRef 不可用');\n            }\n          } else {\n            // 響應式版本：使用 UpperView\n            if (mobileUpperViewRef.value) {\n              mobileUpperViewRef.value.highlightFeature(highlightData);\n            } else {\n              console.error('❌ 無法高亮顯示: mobileUpperViewRef 不可用');\n            }\n          }\n        });\n      };\n\n      /**\n       * 📋 處理服務點詳細資訊顯示事件 (Handle Service Point Detail Event)\n       * 當用戶點擊 service_points 時，在左側面板顯示詳細資訊，或在右側面板顯示 service_items\n       * @param {Object} servicePointData - 服務點詳細資料\n       */\n      const handleShowServicePointDetail = (servicePointData) => {\n        console.log('📋 [3] HomeView: 開始處理 service point detail', servicePointData);\n\n        if (servicePointData.type === 'service-items') {\n          console.log('>> [3a] HomeView: 檢測到 `service-items` 類型');\n\n          // 創建一個統一的 feature 物件來包含 service_items 資料\n          // 這是確保無論來源如何，狀態都是一致的關鍵\n          const serviceItemsFeature = {\n            type: 'Feature',\n            properties: {\n              ...servicePointData.servicePoint,\n              serviceItems: servicePointData.serviceItems, // 確保使用 `serviceItems` (camelCase)\n              servicePointInfo: servicePointData.servicePointInfo,\n              type: 'service-items', // 最重要的類型標識\n              layerId: servicePointData.layerId,\n              layerName: servicePointData.layerName,\n            },\n          };\n\n          console.log('>> [4] HomeView: 創建的 serviceItemsFeature', serviceItemsFeature);\n          // 設定選中的 feature 到 Pinia store，這是觸發 UI 更新的核心\n          dataStore.setSelectedFeature(serviceItemsFeature);\n          console.log('>> [5] HomeView: 已在 dataStore 中設定 selectedFeature');\n\n          // 根據設備類型顯示對應的面板\n          const isDesktop = window.innerWidth >= 1200;\n          if (isDesktop) {\n            activeRightTab.value = 'properties';\n            if (rightViewWidth.value === 0) {\n              rightViewWidth.value = 20;\n            }\n            console.log('>> [6] HomeView: 已切換到桌面版右側屬性面板');\n          } else {\n            activeLowerTab.value = 'properties';\n            if (mobileBottomViewHeight.value < 30) {\n              mobileBottomViewHeight.value = 40;\n            }\n            console.log('>> [6] HomeView: 已切換到行動版下方屬性面板');\n          }\n        } else {\n          // 處理其他類型的點擊事件（例如在左側面板顯示詳細資訊）\n          console.log('>> [3b] HomeView: 處理非 `service-items` 類型');\n          selectedServicePoint.value = servicePointData;\n          if (leftViewWidth.value === 0) {\n            leftViewWidth.value = 20;\n          }\n        }\n      };\n\n      /**\n       * 📋 處理清除服務點詳細資訊事件 (Handle Clear Service Point Detail Event)\n       */\n      const handleClearServicePointDetail = () => {\n        console.log('📋 HomeView 清除服務點詳細資訊');\n        selectedServicePoint.value = null;\n      };\n\n      // 📏 響應式垂直調整狀態\n      /**\n       * 📏 計算底部面板最小高度百分比 (Calculate Minimum Bottom Panel Height Percentage)\n       * 確保底部導航按鈕始終可見\n       */\n      const calculateMinBottomHeight = () => {\n        const minNavigationHeight = 100; // px (基本高度 80px + 安全區域 20px)\n        const currentWindowHeight = window.innerHeight;\n        return Math.max(10, (minNavigationHeight / currentWindowHeight) * 100); // 最小 10vh，確保基本可用性\n      };\n\n      const mobileBottomViewHeight = ref(Math.max(40, calculateMinBottomHeight())); // vh 單位，確保不小於最小高度\n      const isVerticalDragging = ref(false);\n      const mobileMapKey = ref(0); // 強制重新渲染地圖的 key\n\n      /**\n       * 🔧 開始垂直調整大小 (Start Vertical Resize)\n       * 響應式布局中的垂直拖曳調整功能，支援滑鼠和觸控操作\n       * @param {MouseEvent|TouchEvent} event - 滑鼠或觸控事件對象\n       */\n      const startVerticalResize = (event) => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        // 設定拖曳狀態\n        isVerticalDragging.value = true;\n        document.body.classList.add('my-no-select');\n\n        // 判斷是觸控還是滑鼠事件\n        const isTouch = event.type.startsWith('touch');\n        const clientY = isTouch ? event.touches[0].clientY : event.clientY;\n\n        // 記錄初始位置和狀態\n        const startY = clientY;\n        const startBottomHeight = mobileBottomViewHeight.value;\n        const windowHeight = window.innerHeight;\n\n        console.log('🔧 HomeView - 開始垂直調整', {\n          startY,\n          startBottomHeight,\n          windowHeight,\n          isTouch,\n        });\n\n        /**\n         * 🖱️ 處理移動事件（滑鼠或觸控）\n         */\n        const handleMove = (moveEvent) => {\n          moveEvent.preventDefault();\n\n          const currentY = moveEvent.type.startsWith('touch')\n            ? moveEvent.touches[0].clientY\n            : moveEvent.clientY;\n\n          const deltaY = currentY - startY;\n\n          // 計算新的底部高度百分比\n          const deltaPercent = (deltaY / windowHeight) * 100;\n          let newHeight = startBottomHeight - deltaPercent;\n\n          // 使用動態計算的最小高度，確保底部按鈕始終可見\n          const minHeightPercent = calculateMinBottomHeight();\n\n          // 限制在最小高度到100vh範圍內，確保底部按鈕始終可見\n          newHeight = Math.max(minHeightPercent, Math.min(100, newHeight));\n\n          mobileBottomViewHeight.value = Math.round(newHeight);\n        };\n\n        /**\n         * 🖱️ 處理結束事件（滑鼠放開或觸控結束）\n         */\n        const handleEnd = () => {\n          isVerticalDragging.value = false;\n          document.body.classList.remove('my-no-select');\n\n          // 移除滑鼠事件監聽器\n          document.removeEventListener('mousemove', handleMove);\n          document.removeEventListener('mouseup', handleEnd);\n\n          // 移除觸控事件監聽器\n          document.removeEventListener('touchmove', handleMove);\n          document.removeEventListener('touchend', handleEnd);\n          document.removeEventListener('touchcancel', handleEnd);\n\n          console.log('🔧 HomeView - 垂直調整結束', {\n            finalHeight: mobileBottomViewHeight.value,\n          });\n        };\n\n        // 註冊事件監聽器（同時支援滑鼠和觸控）\n        if (isTouch) {\n          document.addEventListener('touchmove', handleMove, { passive: false });\n          document.addEventListener('touchend', handleEnd);\n          document.addEventListener('touchcancel', handleEnd);\n        } else {\n          document.addEventListener('mousemove', handleMove);\n          document.addEventListener('mouseup', handleEnd);\n        }\n      };\n\n      // 🔄 監聽窗口大小變化並強制重新渲染響應式地圖\n      watch(windowHeight, () => {\n        // 延遲一點更新 key 來強制重新渲染地圖\n        setTimeout(() => {\n          mobileMapKey.value += 1;\n        }, 100);\n      });\n\n      // 🔄 監聽螢幕大小變化，在桌面版和響應式版本切換時重新渲染地圖\n      const handleScreenSizeChange = () => {\n        console.log('🔄 HomeView: 螢幕尺寸跨越斷點，重新初始化地圖');\n\n        // 強制重新渲染響應式地圖\n        mobileMapKey.value += 1;\n\n        // 延遲處理地圖尺寸重新計算，確保DOM完全更新\n        nextTick(() => {\n          setTimeout(() => {\n            const isDesktop = window.innerWidth >= 1200;\n\n            if (isDesktop) {\n              // 桌面版：處理 MiddleView 中的地圖\n              if (middlePanelRef.value) {\n                console.log('🖥️ HomeView: 切換到桌面版，處理 MiddleView 地圖');\n                // 通過 MiddleView 調用 UpperView 的地圖尺寸重新計算\n                if (middlePanelRef.value.invalidateMapSize) {\n                  middlePanelRef.value.invalidateMapSize();\n                }\n                // 觸發全域 resize 事件作為備用方案\n                setTimeout(() => {\n                  const event = new Event('resize');\n                  window.dispatchEvent(event);\n                }, 100);\n              }\n            } else {\n              // 響應式版本：處理 mobileUpperViewRef 中的地圖\n              if (mobileUpperViewRef.value) {\n                console.log('📱 HomeView: 切換到響應式版本，處理 UpperView 地圖');\n                // 直接調用 UpperView 的地圖尺寸重新計算\n                if (mobileUpperViewRef.value.invalidateMapSize) {\n                  mobileUpperViewRef.value.invalidateMapSize();\n                }\n              }\n            }\n          }, 300); // 增加延遲時間，確保佈局切換完成\n        });\n      };\n\n      // 🔄 使用 ResizeObserver 監聽螢幕尺寸變化\n      let screenSizeObserver = null;\n\n      onUnmounted(() => {\n        // 清理事件監聽器\n        window.removeEventListener('resize', handleResize);\n\n        // 清理螢幕尺寸觀察器\n        if (screenSizeObserver) {\n          screenSizeObserver.disconnect();\n        }\n      });\n\n      // 📤 返回響應式數據和函數給模板使用 (Return Reactive Data and Functions)\n      return {\n        // 📚 組件引用\n        middlePanelRef, // 中間面板引用\n\n        // 📑 分頁狀態\n        activeUpperTab, // 主要分頁狀態\n        activeBottomTab, // 底部分頁狀態\n        activeRightTab, // 右側分頁狀態\n        activeLowerTab, // 響應式下半部分頁狀態\n\n        // ⏳ 載入狀態\n        isAnyLayerLoading, // 是否有圖層正在載入\n        loadingText, // 載入文字\n        loadingProgress, // 載入進度\n        showLoadingProgress, // 是否顯示進度條\n        loadingSubText, // 載入子文字\n\n        // 🗺️ 圖層狀態\n        showTainanLayer, // 台南圖層顯示狀態\n        selectedFilter, // 選定篩選器\n\n        // 🗺️ 地圖狀態\n        zoomLevel, // 地圖縮放等級\n        currentCoords, // 當前地圖座標\n\n        // 📊 統計數據\n        activeMarkers, // 作用中標記數量\n\n        // 📏 面板尺寸（百分比系統）\n        leftViewWidth, // 左側面板寬度百分比\n        rightViewWidth, // 右側面板寬度百分比\n        leftViewWidthPx, // 左側面板像素寬度\n        rightViewWidthPx, // 右側面板像素寬度\n        mainPanelWidth, // 中間面板寬度百分比\n        mainPanelWidthPx, // 中間面板像素寬度\n\n        tableData, // 表格資料\n\n        // 📥 數據管理功能\n        resetView, // 重設視圖\n\n        // 🔧 拖拽調整功能\n        startResize, // 開始調整大小\n        startVerticalResize, // 開始垂直調整大小\n        isSidePanelDragging, // 側邊面板拖曳狀態\n        isVerticalDragging, // 垂直拖曳狀態\n        mobileBottomViewHeight, // 響應式底部面板高度\n        mobileMapKey, // 響應式地圖重新渲染 key\n        validatePanelSizes, // 驗證面板尺寸\n\n        // 🛠️ 工具函數\n        appFooterRef, // 頁腳引用\n        mobileUpperViewRef, // 響應式上半部面板引用\n        calculatedMiddleViewHeight, // 計算的中間面板高度\n        handleHighlight, // 處理高亮顯示\n        handleShowServicePointDetail, // 處理服務點詳細資訊顯示\n        handleClearServicePointDetail, // 處理清除服務點詳細資訊\n        selectedServicePoint, // 選中的服務點資訊\n\n        // 🎯 互動函數\n        updateActiveMarkers, // 更新作用中標記\n\n        // 🗺️ 地圖相關函數\n        retryMapInitialization, // 重試地圖初始化\n        getMapInitStatus, // 獲取地圖初始化狀態\n      };\n    },\n  };\n</script>\n\n<template>\n  <!-- 🏠 HomeView.vue - 首頁視圖組件 (Home View Component) -->\n  <!-- 提供長照資訊系統的主要用戶界面，包含響應式三面板佈局系統 -->\n  <div id=\"app\" class=\"d-flex flex-column vh-100\">\n    <!-- 📥 載入覆蓋層 (Loading Overlay) -->\n    <!-- 在資料載入時顯示，提供視覺化的載入進度回饋 -->\n    <LoadingOverlay\n      :isVisible=\"isAnyLayerLoading\"\n      :loadingText=\"loadingText\"\n      :progress=\"loadingProgress\"\n      :showProgress=\"showLoadingProgress\"\n      :subText=\"loadingSubText\"\n    />\n\n    <!-- 📱 主要內容區域 (Main Content Area) -->\n    <!-- 使用計算高度為 footer 留出空間，避免擋住滾動條 -->\n    <div class=\"d-flex flex-column overflow-hidden\">\n      <!-- 🚀 路由視圖區域 (Router View Area) -->\n      <!-- 顯示非首頁的路由組件內容 -->\n      <div v-if=\"$route.path !== '/'\" class=\"h-100\">\n        <router-view />\n      </div>\n\n      <!-- 🏠 首頁內容區域 (Home Page Content Area) -->\n      <!-- 空間分析平台的主要功能界面，使用響應式三面板佈局 -->\n      <div v-if=\"$route.path === '/'\" class=\"h-100 d-flex flex-column overflow-hidden\">\n        <!-- 🖥️ 桌面版佈局 (Desktop Layout - xl and above) -->\n        <div class=\"d-none d-xl-flex flex-row overflow-hidden h-100\">\n          <!-- 🎛️ 左側控制面板容器 (Left Control Panel Container) -->\n          <!-- 包含圖層控制、資料載入等功能，支援動態寬度調整 -->\n          <div\n            class=\"h-100 overflow-y-auto overflow-x-hidden my-left-panel\"\n            :style=\"{ width: leftViewWidthPx }\"\n            v-if=\"leftViewWidth > 0\"\n          >\n            <LeftView\n              :selectedServicePoint=\"selectedServicePoint\"\n              @clear-service-point-detail=\"handleClearServicePointDetail\"\n            />\n          </div>\n\n          <!-- 🔧 左側拖曳調整器 (Left Panel Resizer) -->\n          <!-- 提供滑鼠拖曳功能，動態調整左側面板寬度 -->\n          <div\n            class=\"my-resizer my-resizer-vertical my-resizer-left\"\n            :class=\"{ 'my-dragging': isSidePanelDragging }\"\n            @mousedown=\"startResize('left', $event)\"\n            title=\"拖曳調整左側面板寬度\"\n          ></div>\n\n          <!-- 🌟 中間主要顯示區域 (Main Display Area) -->\n          <!-- 包含地圖、儀表板、資料表格等核心功能組件 -->\n          <MiddleView\n            ref=\"middlePanelRef\"\n            class=\"d-flex flex-column overflow-hidden h-100 my-middle-panel\"\n            style=\"z-index: 1\"\n            :style=\"{ width: mainPanelWidthPx, 'min-width': '0px' }\"\n            :dynamicMainAreaHeight=\"calculatedMiddleViewHeight\"\n            :activeUpperTab=\"activeUpperTab\"\n            :activeBottomTab=\"activeBottomTab\"\n            :mainPanelWidth=\"mainPanelWidth\"\n            :showTainanLayer=\"showTainanLayer\"\n            :selectedFilter=\"selectedFilter\"\n            :zoomLevel=\"zoomLevel\"\n            :currentCoords=\"currentCoords\"\n            :activeMarkers=\"activeMarkers\"\n            :isLoadingData=\"isAnyLayerLoading\"\n            :isSidePanelDragging=\"isSidePanelDragging\"\n            @update:activeUpperTab=\"activeUpperTab = $event\"\n            @update:activeBottomTab=\"activeBottomTab = $event\"\n            @update:zoomLevel=\"zoomLevel = $event\"\n            @update:currentCoords=\"currentCoords = $event\"\n            @update:activeMarkers=\"activeMarkers = $event\"\n            @reset-view=\"resetView\"\n            @highlight-on-map=\"handleHighlight\"\n            @highlight-feature=\"handleHighlight\"\n            @show-service-point-detail=\"handleShowServicePointDetail\"\n          />\n\n          <!-- 🔧 右側拖曳調整器 (Right Panel Resizer) -->\n          <!-- 提供滑鼠拖曳功能，動態調整右側面板寬度 -->\n          <div\n            class=\"my-resizer my-resizer-vertical my-resizer-right\"\n            :class=\"{ 'my-dragging': isSidePanelDragging }\"\n            @mousedown=\"startResize('right', $event)\"\n            title=\"拖曳調整右側面板寬度\"\n          ></div>\n\n          <!-- 📈 右側控制面板容器 (Right Control Panel Container) -->\n          <!-- 包含物件屬性、分析清單等輔助功能，支援動態寬度調整 -->\n          <div\n            class=\"h-100 overflow-auto\"\n            :style=\"{ width: rightViewWidthPx }\"\n            v-if=\"rightViewWidth > 0\"\n          >\n            <RightView\n              :activeRightTab=\"activeRightTab\"\n              :activeMarkers=\"activeMarkers\"\n              :rightViewWidth=\"rightViewWidth\"\n              @update:activeRightTab=\"activeRightTab = $event\"\n              @highlight-feature=\"handleHighlight\"\n              @show-service-point-detail=\"handleShowServicePointDetail\"\n              :current-coords=\"currentCoords\"\n            />\n          </div>\n        </div>\n\n        <!-- 📱 行動版/平板版佈局 (Mobile/Tablet Layout - below xl) -->\n        <div class=\"d-flex d-xl-none flex-column overflow-hidden h-100\">\n          <!-- 🌟 上半部區域 (Upper Area) - 只包含地圖和儀表板 -->\n          <div\n            class=\"flex-shrink-0 overflow-hidden d-flex flex-column\"\n            :style=\"{ height: 100 - mobileBottomViewHeight + 'vh' }\"\n            v-if=\"mobileBottomViewHeight < 100\"\n          >\n            <UpperView\n              ref=\"mobileUpperViewRef\"\n              :key=\"mobileMapKey\"\n              :activeUpperTab=\"activeUpperTab\"\n              :mainPanelWidth=\"100\"\n              :contentHeight=\"(100 - mobileBottomViewHeight) * windowHeight * 0.01\"\n              :showTainanLayer=\"showTainanLayer\"\n              :selectedFilter=\"selectedFilter\"\n              :zoomLevel=\"zoomLevel\"\n              :isPanelDragging=\"isVerticalDragging\"\n              :activeMarkers=\"activeMarkers\"\n              @update:activeUpperTab=\"activeUpperTab = $event\"\n              @update:zoomLevel=\"zoomLevel = $event\"\n              @update:currentCoords=\"currentCoords = $event\"\n              @update:activeMarkers=\"activeMarkers = $event\"\n              @show-service-point-detail=\"handleShowServicePointDetail\"\n            />\n          </div>\n\n          <!-- 🔧 水平拖曳調整器 (Horizontal Resizer) -->\n          <div\n            class=\"my-resizer my-resizer-horizontal my-resizer-middle\"\n            :class=\"{ 'my-dragging': isVerticalDragging }\"\n            @mousedown=\"startVerticalResize\"\n            @touchstart=\"startVerticalResize\"\n            title=\"拖曳調整底部面板高度\"\n            v-if=\"mobileBottomViewHeight > 0 && mobileBottomViewHeight < 100\"\n          ></div>\n\n          <!-- 📋 下半部區域 (Lower Area) - 包含所有其他 tabs -->\n          <div\n            class=\"flex-shrink-0 overflow-hidden\"\n            :style=\"{ height: mobileBottomViewHeight + 'vh' }\"\n            v-if=\"mobileBottomViewHeight > 0\"\n          >\n            <ResponsiveLowerView\n              :activeTab=\"activeLowerTab\"\n              :activeRightTab=\"activeRightTab\"\n              :activeBottomTab=\"activeBottomTab\"\n              @update:activeTab=\"activeLowerTab = $event\"\n              @update:activeRightTab=\"activeRightTab = $event\"\n              @update:activeBottomTab=\"activeBottomTab = $event\"\n              @highlight-on-map=\"handleHighlight\"\n              @highlight-feature=\"handleHighlight\"\n              @show-service-point-detail=\"handleShowServicePointDetail\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- 🦶 頁腳區域 (Footer Area) -->\n    <!-- 固定高度 footer，提供版權資訊和技術鳴謝 -->\n    <!-- 只在 xl breakpoint 以上顯示 -->\n    <footer\n      class=\"d-none d-xl-flex justify-content-between my-app-footer my-title-sm-white my-bgcolor-gray-800 p-2\"\n      ref=\"appFooterRef\"\n    >\n      <small>臺灣大學地理環境資源學系</small>\n      <small>2025</small>\n    </footer>\n  </div>\n</template>\n\n<style>\n  /**\n * 🎨 應用程式全域樣式 (Application Global Styles)\n *\n * 引入共用 CSS 並定義全域樣式，主要使用 Bootstrap 佈局系統\n */\n  @import '../assets/css/common.css';\n\n  /* 📱 HomeView 專用樣式 (HomeView Specific Styles) */\n  /* 其他通用樣式已移至 common.css 中統一管理 */\n</style>\n","/**\n * dataProcessor.js\n *\n * Purpose:\n * - Load and transform data for the \"新基準中央服務紀錄\" feature set.\n * - Returns geojson, table data, and summary stats; color resolution is deferred to store.\n *\n * Notes:\n * - Documentation-only refactor for maintainability; logic unchanged.\n */\n// 注意：getColorForServiceProvider 函數已移除\n// 現在顏色分配統一在 dataStore.js 中處理\n\n// 注意：getUnifiedLayerColor 函數已移除\n// 現在顏色分配統一在 dataStore.js 中處理\n\n/**\n * 新基準中央服務紀錄數據加載函數\n * 處理長照服務人員的服務記錄，包含路線、服務點和服務項目\n * @param {Object} layer - 圖層配置物件\n * @param {string|null} dateFilter - 日期篩選器 (格式: YYYYMMDD)\n * @returns {Promise<Object>} 包含 GeoJSON 數據和表格數據的物件\n */\nexport async function loadNewStandardCentralServiceData(layer, dateFilter = null) {\n  try {\n    const layerId = layer.layerId;\n\n    const filePath = `/long-term-care-web-taichung/data/json/${layer.fileName}`;\n\n    const response = await fetch(filePath);\n\n    if (!response.ok) {\n      console.error('HTTP 錯誤:', {\n        status: response.status,\n        statusText: response.statusText,\n        url: response.url,\n      });\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n\n    const jsonData = await response.json();\n\n    console.log('📅 載入服務紀錄數據，日期篩選:', dateFilter);\n\n    // 按服務人員分組的圖層數據\n    const serviceProviderLayers = new Map();\n    const allGeoJsonData = {\n      type: 'FeatureCollection',\n      features: [],\n    };\n\n    // 用於 Bottom Panel 的服務人員資料\n    const serviceProviderData = new Map();\n\n    jsonData.forEach((serviceProvider) => {\n      // 日期篩選邏輯\n      if (dateFilter) {\n        // 如果有日期篩選，只處理符合條件的資料\n        const filterValue = parseInt(dateFilter);\n        const serviceDate = serviceProvider['服務日期(請輸入7碼)'];\n        console.log('🔍 日期篩選檢查:', {\n          filterValue,\n          serviceDate,\n          serviceDateType: typeof serviceDate,\n          matches: serviceDate === filterValue,\n        });\n\n        if (serviceDate !== filterValue) {\n          return;\n        }\n      } else {\n        // 如果沒有日期篩選，預設只處理 1140701 的資料\n        if (serviceProvider['服務日期(請輸入7碼)'] !== 1140701) {\n          return;\n        }\n      }\n\n      // 為每個服務人員創建獨立的圖層\n      const serviceProviderId = serviceProvider.服務人員身分證;\n\n      // 注意：不在這裡分配顏色，留給 dataStore.js 統一處理\n      // 使用臨時的預設顏色，稍後會被 dataStore.js 覆蓋\n      const unifiedColor = 'category20b-1'; // 臨時顏色，稍後會被覆蓋\n      if (!serviceProviderLayers.has(serviceProviderId)) {\n        serviceProviderLayers.set(serviceProviderId, {\n          type: 'FeatureCollection',\n          features: [],\n        });\n      }\n\n      if (serviceProvider.service_points && Array.isArray(serviceProvider.service_points)) {\n        // 1. 處理 service_points_routes 路線（如果存在）\n        if (\n          serviceProvider.service_points_routes &&\n          Array.isArray(serviceProvider.service_points_routes)\n        ) {\n          serviceProvider.service_points_routes.forEach((routeCollection) => {\n            if (routeCollection.features && Array.isArray(routeCollection.features)) {\n              routeCollection.features.forEach((routeFeature) => {\n                if (routeFeature.geometry && routeFeature.geometry.type === 'LineString') {\n                  const routeFeatureData = {\n                    type: 'Feature',\n                    geometry: routeFeature.geometry,\n                    properties: {\n                      id: `route_${serviceProvider.服務人員身分證}`,\n                      layerId: layerId,\n                      layerName: `${layer.layerName}_路線`,\n                      name: `服務路線_${serviceProvider.服務人員身分證}`,\n                      strokeColor: unifiedColor, // 使用顏色名稱，方便統一處理\n                      routeColor: unifiedColor, // 添加routeColor屬性，使用統一的顏色\n                      strokeWidth: 3,\n                      strokeOpacity: 0.8,\n                      serviceProviderId: serviceProvider.服務人員身分證,\n                      serviceDate: serviceProvider['服務日期(請輸入7碼)'],\n                      pointCount: routeFeature.geometry.coordinates.length,\n                      distance: routeFeature.properties?.summary?.distance || 0,\n                      duration: routeFeature.properties?.summary?.duration || 0,\n                      segments: routeFeature.properties?.segments?.length || 0,\n                      ...routeFeature.properties,\n                    },\n                  };\n\n                  // 添加到對應的服務人員圖層\n                  serviceProviderLayers.get(serviceProviderId).features.push(routeFeatureData);\n                  // 也添加到總圖層\n                  allGeoJsonData.features.push(routeFeatureData);\n                }\n              });\n            }\n          });\n        }\n\n        // 2. 處理 service_points_routes_center 中心點（如果存在）\n        if (\n          serviceProvider.service_points_routes_center &&\n          Array.isArray(serviceProvider.service_points_routes_center) &&\n          serviceProvider.service_points_routes_center.length > 0\n        ) {\n          const routeTimesArray = Array.isArray(serviceProvider.service_points_routes_time)\n            ? serviceProvider.service_points_routes_time\n            : [];\n          serviceProvider.service_points_routes_center.forEach((centerCoords, index) => {\n            if (Array.isArray(centerCoords) && centerCoords.length >= 2) {\n              const [lng, lat] = centerCoords; // GeoJSON 格式：[經度, 緯度]\n\n              // 驗證座標有效性\n              if (\n                typeof lng === 'number' &&\n                typeof lat === 'number' &&\n                !isNaN(lng) &&\n                !isNaN(lat) &&\n                lat >= -90 &&\n                lat <= 90 &&\n                lng >= -180 &&\n                lng <= 180\n              ) {\n                // 對應該路線中心點的交通時間（依序對應 service_points_routes_time）\n                const timeEntry = routeTimesArray[index] || null;\n                const timeMinutes = (() => {\n                  if (timeEntry && typeof timeEntry.time_interval === 'number') {\n                    return timeEntry.time_interval;\n                  }\n                  const h = timeEntry?.hour_interval ?? null;\n                  const m = timeEntry?.min_interval ?? null;\n                  if (typeof h === 'number' && typeof m === 'number') {\n                    return h * 60 + m;\n                  }\n                  return null; // 若無資料則返回 null\n                })();\n\n                const timeLabel = (() => {\n                  if (typeof timeMinutes === 'number' && !isNaN(timeMinutes)) {\n                    const hours = Math.floor(timeMinutes / 60);\n                    const minutes = timeMinutes % 60;\n                    return hours > 0 ? `${hours}h${minutes}m` : `${minutes}m`;\n                  }\n                  return 'N/A';\n                })();\n\n                const routeCenterFeatureData = {\n                  type: 'Feature',\n                  geometry: {\n                    type: 'Point',\n                    coordinates: [lng, lat],\n                  },\n                  properties: {\n                    id: `route_center_${serviceProvider.服務人員身分證}_${index}`,\n                    layerId: layerId,\n                    layerName: `${layer.layerName}_路線中心點`,\n                    name: `路線中心點_${serviceProvider.服務人員身分證}_${index + 1}`,\n                    type: 'route-center-point', // 特殊類型標記\n                    fillColor: unifiedColor, // 使用顏色名稱\n                    routeColor: unifiedColor,\n                    serviceProviderId: serviceProvider.服務人員身分證,\n                    serviceDate: serviceProvider['服務日期(請輸入7碼)'],\n                    centerIndex: index + 1,\n                    緯度: lat,\n                    經度: lng,\n                    // 新增：於路線中心點顯示交通時間（依序對應 route_time）\n                    traffic_time_minutes: typeof timeMinutes === 'number' ? timeMinutes : undefined,\n                    traffic_time_label: timeLabel,\n                  },\n                };\n\n                // 添加到對應的服務人員圖層\n                serviceProviderLayers.get(serviceProviderId).features.push(routeCenterFeatureData);\n                // 也添加到總圖層\n                allGeoJsonData.features.push(routeCenterFeatureData);\n              } else {\n                console.warn(\n                  `🚫 無效的路線中心點座標: serviceProvider=${serviceProvider.服務人員身分證}, index=${index}, coords=[${lng}, ${lat}]`\n                );\n              }\n            }\n          });\n        }\n\n        // 3. 處理服務點（service_points 裡面的點）\n        const servicePoints = serviceProvider.service_points.filter((record) => record.detail);\n\n        if (servicePoints.length > 0) {\n          // 按服務時間排序\n          servicePoints.sort((a, b) => {\n            const timeA = a.hour_start + a.min_start / 60;\n            const timeB = b.hour_start + b.min_start / 60;\n            return timeA - timeB;\n          });\n\n          // 3. 在地圖上繪製有座標的服務點\n          servicePoints.forEach((serviceRecord, index) => {\n            if (serviceRecord.detail.Lat && serviceRecord.detail.Lon) {\n              const lat = parseFloat(serviceRecord.detail.Lat);\n              const lon = parseFloat(serviceRecord.detail.Lon);\n\n              if (!isNaN(lat) && !isNaN(lon)) {\n                const pointFeatureData = {\n                  type: 'Feature',\n                  geometry: {\n                    type: 'Point',\n                    coordinates: [lon, lat],\n                  },\n                  properties: {\n                    id: `point_${serviceProvider.服務人員身分證}_${index}`,\n                    layerId: layerId,\n                    layerName: layer.layerName,\n                    name: serviceRecord.detail.姓名,\n                    fillColor: unifiedColor, // 使用顏色名稱，方便統一處理\n                    serviceProviderId: serviceProvider.服務人員身分證,\n                    routeOrder: index + 1,\n                    serviceTime: `${serviceRecord.hour_start}:${serviceRecord.min_start.toString().padStart(2, '0')}`,\n                    address: serviceRecord.detail.個案居住地址,\n                    // 添加 service_items 資料\n                    service_items: serviceRecord.service_items || [],\n                    service_items_count: Array.isArray(serviceRecord.service_items)\n                      ? serviceRecord.service_items.length\n                      : 0,\n                    // 添加其他原始資料欄位\n                    編號: serviceRecord.detail.編號,\n                    姓名: serviceRecord.detail.姓名,\n                    性別: serviceRecord.detail.性別,\n                    個案戶籍縣市: serviceRecord.detail.個案戶籍縣市,\n                    鄉鎮區: serviceRecord.detail.鄉鎮區,\n                    里別: serviceRecord.detail.里別,\n                    個案戶籍地址: serviceRecord.detail.個案戶籍地址,\n                    個案居住縣市: serviceRecord.detail.個案居住縣市,\n                    hour_start: serviceRecord.hour_start,\n                    min_start: serviceRecord.min_start,\n                    hour_end: serviceRecord.hour_end,\n                    min_end: serviceRecord.min_end,\n                    time_total: serviceRecord.time_total,\n                    // 交通時間與完整 detail 物件\n                    hour_traffic: serviceRecord.hour_traffic || 0,\n                    min_traffic: serviceRecord.min_traffic || 0,\n                    time_traffic:\n                      serviceRecord.time_traffic ||\n                      (serviceRecord.hour_traffic || 0) * 60 + (serviceRecord.min_traffic || 0),\n                    detail: serviceRecord.detail,\n                    // 添加 propertyData 屬性，用於觸發地圖popup\n                    propertyData: serviceRecord.detail,\n                  },\n                };\n\n                // 添加到對應的服務人員圖層\n                serviceProviderLayers.get(serviceProviderId).features.push(pointFeatureData);\n                // 也添加到總圖層\n                allGeoJsonData.features.push(pointFeatureData);\n              }\n            }\n          });\n\n          // 4. 為 Bottom Panel 準備服務人員資料\n          const firstService = servicePoints[0];\n          const lastService = servicePoints[servicePoints.length - 1];\n\n          // 找到第一個有座標的服務點作為地圖定位點\n          const firstPointWithCoords = servicePoints.find(\n            (point) => point.detail.Lat && point.detail.Lon\n          );\n\n          serviceProviderData.set(serviceProvider.服務人員身分證, {\n            '#': serviceProviderData.size + 1,\n            color: getComputedStyle(document.documentElement)\n              .getPropertyValue(`--my-color-${unifiedColor}`)\n              .trim(),\n            服務人員身分證: serviceProvider.服務人員身分證,\n            服務日期: serviceProvider['服務日期(請輸入7碼)'],\n            服務點位數: serviceProvider.service_points_count || servicePoints.length,\n            開始時間: `${serviceProvider.hour_start}:${serviceProvider.min_start.toString().padStart(2, '0')}`,\n            結束時間: `${serviceProvider.hour_end}:${serviceProvider.min_end.toString().padStart(2, '0')}`,\n            總服務時間: `${serviceProvider.hour_total}h${serviceProvider.min_total}m`,\n            總時間分鐘: serviceProvider.time_total || 0,\n            交通時間: (() => {\n              // 計算服務人員的總交通時間（所有服務點的交通時間總和）\n              const totalTrafficMinutes = servicePoints.reduce((total, point) => {\n                return total + (point.hour_traffic || 0) * 60 + (point.min_traffic || 0);\n              }, 0);\n              const hours = Math.floor(totalTrafficMinutes / 60);\n              const minutes = totalTrafficMinutes % 60;\n              return hours > 0 ? `${hours}h${minutes}m` : `${minutes}m`;\n            })(),\n            交通時間分鐘: servicePoints.reduce((total, point) => {\n              return total + (point.hour_traffic || 0) * 60 + (point.min_traffic || 0);\n            }, 0),\n            服務數量: servicePoints.reduce(\n              (total, point) => total + (point.service_items_count || 0),\n              0\n            ),\n            第一個服務點: firstService.detail.姓名,\n            最後一個服務點: lastService.detail.姓名,\n            // 用於地圖定位的第一個服務點\n            firstServicePoint: firstPointWithCoords\n              ? {\n                  lat: parseFloat(firstPointWithCoords.detail.Lat),\n                  lon: parseFloat(firstPointWithCoords.detail.Lon),\n                  name: firstPointWithCoords.detail.姓名,\n                  address: firstPointWithCoords.detail.個案居住地址,\n                  time: `${firstPointWithCoords.hour_start}:${firstPointWithCoords.min_start.toString().padStart(2, '0')}`,\n                }\n              : null,\n            // 用於 Right Panel 的所有服務點\n            allServicePoints: servicePoints.map((point, index) => ({\n              順序: index + 1,\n              姓名: point.detail.姓名,\n              地址: point.detail.個案居住地址,\n              時間: `${point.hour_start}:${point.min_start.toString().padStart(2, '0')}`,\n              身分證字號: point['身分證字號'],\n              編號: point.detail.編號,\n              性別: point.detail.性別,\n              個案戶籍縣市: point.detail.個案戶籍縣市,\n              鄉鎮區: point.detail.鄉鎮區,\n              里別: point.detail.里別,\n              個案戶籍地址: point.detail.個案戶籍地址,\n              個案居住縣市: point.detail.個案居住縣市,\n              緯度: point.detail.Lat ? parseFloat(point.detail.Lat) : null,\n              經度: point.detail.Lon ? parseFloat(point.detail.Lon) : null,\n              // 添加時間相關欄位\n              hour_start: point.hour_start,\n              min_start: point.min_start,\n              hour_end: point.hour_end,\n              min_end: point.min_end,\n              service_items_count:\n                point.service_items_count ||\n                (Array.isArray(point.service_items) ? point.service_items.length : 0),\n              service_items: point.service_items || [],\n              總服務時間分鐘: point.time_total || 0,\n              交通時間:\n                (point.hour_traffic || 0) > 0\n                  ? `${point.hour_traffic || 0}h${point.min_traffic || 0}m`\n                  : `${point.min_traffic || 0}m`,\n              交通時間分鐘: (point.hour_traffic || 0) * 60 + (point.min_traffic || 0),\n              hour_traffic: point.hour_traffic || 0,\n              min_traffic: point.min_traffic || 0,\n            })),\n          });\n        }\n      }\n    });\n\n    // 5. 準備表格資料\n    const tableData = Array.from(serviceProviderData.values());\n\n    // 6. 統計資料\n    const districtCounts = {};\n    let validPointCount = 0;\n\n    allGeoJsonData.features\n      .filter((feature) => feature.geometry.type === 'Point')\n      .forEach((feature) => {\n        // 這裡需要從服務人員資料中獲取鄉鎮區資訊\n        const serviceProviderId = feature.properties.serviceProviderId;\n        const serviceProvider = serviceProviderData.get(serviceProviderId);\n        if (serviceProvider && serviceProvider.allServicePoints.length > 0) {\n          const district = serviceProvider.allServicePoints[0].鄉鎮區;\n          if (district && typeof district === 'string' && district.trim() !== '') {\n            districtCounts[district] = (districtCounts[district] || 0) + 1;\n            validPointCount++;\n          }\n        }\n      });\n\n    // 如果沒有有效的行政區資料，創建一個預設的統計\n    if (Object.keys(districtCounts).length === 0) {\n      console.warn('[loadNewStandardCentralServiceData] 沒有找到有效的行政區資料，使用預設統計');\n      districtCounts['未知區域'] = validPointCount || 1;\n    }\n\n    const districtCount = Object.entries(districtCounts)\n      .map(([name, count]) => ({\n        name: name || '未知區域',\n        count: Math.max(0, count || 0), // 確保計數不會是負數\n      }))\n      .filter((item) => item.count > 0) // 過濾掉計數為0的項目\n      .sort((a, b) => b.count - a.count);\n\n    const summaryData = {\n      totalCount: allGeoJsonData.features.filter((f) => f.geometry.type === 'Point').length,\n      routeCount: allGeoJsonData.features.filter((f) => f.geometry.type === 'LineString').length,\n      districtCount: districtCount,\n    };\n\n    // 將服務人員圖層轉換為陣列格式\n    const serviceProviderLayersArray = Array.from(serviceProviderLayers.entries()).map(\n      ([serviceProviderId, geoJsonData]) => {\n        // 為每個服務人員準備 service_points 的 tableData\n        const serviceProviderInfo = serviceProviderData.get(serviceProviderId);\n        const servicePointsTableData = serviceProviderInfo\n          ? serviceProviderInfo.allServicePoints.map((point, index) => {\n              // 從 GeoJSON features 中找到對應的 service_items\n              let serviceItems = [];\n              if (geoJsonData && geoJsonData.features) {\n                const servicePointFeature = geoJsonData.features.find(\n                  (feature) =>\n                    feature.properties &&\n                    (feature.properties.編號 === point.編號 ||\n                      feature.properties.姓名 === point.姓名)\n                );\n                if (servicePointFeature && servicePointFeature.properties.service_items) {\n                  serviceItems = servicePointFeature.properties.service_items;\n                }\n              }\n\n              return {\n                '#': index + 1,\n                id: `point_${serviceProviderId}_${index}`, // 添加與 GeoJSON feature 一致的 ID\n                姓名: point.姓名,\n                個案居住地址: point.地址,\n                時間: point.時間,\n                服務項目代碼: point.服務項目代碼 || 'N/A',\n                順序: point.順序,\n                緯度: point.緯度,\n                經度: point.經度,\n                編號: point.編號,\n                性別: point.性別,\n                個案戶籍縣市: point.個案戶籍縣市,\n                鄉鎮區: point.鄉鎮區,\n                里別: point.里別,\n                個案戶籍地址: point.個案戶籍地址,\n                個案居住縣市: point.個案居住縣市,\n                // 添加時間相關欄位\n                hour_start: point.hour_start,\n                min_start: point.min_start,\n                hour_end: point.hour_end,\n                min_end: point.min_end,\n                // 交通時間欄位\n                交通時間: point.交通時間,\n                交通時間分鐘: point.交通時間分鐘,\n                hour_traffic: point.hour_traffic,\n                min_traffic: point.min_traffic,\n                // 原始 detail 物件，方便右側面板顯示\n                detail: {\n                  編號: point.編號,\n                  姓名: point.姓名,\n                  性別: point.性別,\n                  個案戶籍縣市: point.個案戶籍縣市,\n                  鄉鎮區: point.鄉鎮區,\n                  里別: point.里別,\n                  個案戶籍地址: point.個案戶籍地址,\n                  個案居住縣市: point.個案居住縣市,\n                  個案居住地址: point.地址,\n                  Lat: point.緯度,\n                  Lon: point.經度,\n                },\n                // 添加 service_items\n                service_items: serviceItems,\n                service_items_count: Array.isArray(serviceItems) ? serviceItems.length : 0,\n                color: serviceProviderInfo.color,\n              };\n            })\n          : [];\n\n        // 獲取原始服務人員數據以取得 service_points_count\n        const originalServiceProvider = jsonData.find(\n          (sp) => sp.服務人員身分證 === serviceProviderId\n        );\n\n        return {\n          serviceProviderId,\n          layerName: serviceProviderId, // 直接使用服務人員身分證作為圖層名稱\n          geoJsonData,\n          tableData: servicePointsTableData, // 添加 service_points 的表格資料\n          pointCount: geoJsonData.features.filter((f) => f.geometry.type === 'Point').length,\n          routeCount: geoJsonData.features.filter((f) => f.geometry.type === 'LineString').length,\n          servicePointsCount: originalServiceProvider?.service_points_count || 0, // 添加原始的 service_points_count\n        };\n      }\n    );\n\n    return {\n      geoJsonData: allGeoJsonData,\n      tableData,\n      summaryData,\n      serviceProviderLayers: serviceProviderLayersArray,\n    };\n  } catch (error) {\n    console.error('❌ 數據載入失敗:', error);\n    throw error;\n  }\n}\n","/**\n * =============================================================================\n * 📦 dataStore.js - 主要資料狀態管理中心\n * =============================================================================\n *\n * 用途：使用 Pinia 進行集中化的應用程式狀態管理\n *\n * 主要功能：\n * - 🗂️ 圖層群組和可見性管理\n * - 🎯 選中特徵和服務點管理\n * - 📅 服務日期篩選功能\n * - 🎨 顏色映射和主題管理\n * - 📊 服務記錄資料載入和處理\n * - 📍 空間分析工具函數\n *\n * 技術特性：\n * - 🔄 響應式狀態管理\n * - 💾 持久化儲存支援\n * - 🎯 計算屬性優化\n * - 🔍 資料篩選和查詢\n *\n * @author 長期照護資源分析系統團隊\n * @version 2.0.0\n */\n\nimport { defineStore } from 'pinia';\nimport { ref, computed } from 'vue';\nimport { loadNewStandardCentralServiceData } from '../utils/dataProcessor.js';\n\n/**\n * =============================================================================\n * 🚀 資料存儲定義 (Data Store Definition)\n * =============================================================================\n */\n\n/**\n * @typedef {Object} LayerGroup\n * @property {string} groupName - 群組名稱\n * @property {Array<LayerInfo>} groupLayers - 群組內的圖層清單\n */\n\n/**\n * @typedef {Object} LayerInfo\n * @property {string} layerId - 圖層唯一識別碼\n * @property {string} layerName - 圖層顯示名稱\n * @property {boolean} visible - 是否可見\n * @property {boolean} isLoaded - 是否已載入\n * @property {boolean} isLoading - 是否正在載入\n * @property {string} colorName - 顏色名稱\n * @property {string} type - 圖層類型 ('point', 'line', 'polygon')\n * @property {Object} geoJsonData - GeoJSON 資料\n * @property {Array} tableData - 表格資料\n * @property {Object} summaryData - 摘要統計資料\n */\n\nexport const useDataStore = defineStore(\n  'data',\n  () => {\n    // =============================================================================\n    // 🎨 常量定義 (Constants Definition)\n    // =============================================================================\n\n    /**\n     * D3.js category20b 色彩配置\n     * 提供 20 種視覺上易於區分的顏色，按色系分組\n     *\n     * 顏色順序：\n     * - 藍色系 (4): 深藍 → 中藍 → 淺藍 → 極淺藍\n     * - 橘色系 (4): 深橘 → 中橘 → 淺橘 → 極淺橘\n     * - 綠色系 (4): 深綠 → 中綠 → 淺綠 → 極淺綠\n     * - 紫色系 (4): 深紫 → 中紫 → 淺紫 → 極淺紫\n     * - 灰色系 (4): 深灰 → 中灰 → 淺灰 → 極淺灰\n     */\n    const COLOR_PALETTE = Object.freeze([\n      'category20b-1', // #3182bd - 深藍\n      'category20b-2', // #6baed6 - 中藍\n      'category20b-3', // #9ecae1 - 淺藍\n      'category20b-4', // #c6dbef - 極淺藍\n      'category20b-5', // #e6550d - 深橘\n      'category20b-6', // #fd8d3c - 中橘\n      'category20b-7', // #fdae6b - 淺橘\n      'category20b-8', // #fdd0a2 - 極淺橘\n      'category20b-9', // #31a354 - 深綠\n      'category20b-10', // #74c476 - 中綠\n      'category20b-11', // #a1d99b - 淺綠\n      'category20b-12', // #c7e9c0 - 極淺綠\n      'category20b-13', // #756bb1 - 深紫\n      'category20b-14', // #9e9ac8 - 中紫\n      'category20b-15', // #bcbddc - 淺紫\n      'category20b-16', // #dadaeb - 極淺紫\n      'category20b-17', // #636363 - 深灰\n      'category20b-18', // #969696 - 中灰\n      'category20b-19', // #bdbdbd - 淺灰\n      'category20b-20', // #d9d9d9 - 極淺灰\n    ]);\n\n    /**\n     * 預設圖層群組配置\n     */\n    const DEFAULT_LAYER_GROUPS = Object.freeze([\n      {\n        groupName: '服務人員列表',\n        groupLayers: [], // 依日期載入的圖層\n        description: '依日期顯示的長照服務記錄',\n        icon: 'fas fa-calendar-day',\n      },\n      {\n        groupName: '服務日期列表',\n        groupLayers: [], // 依服務人員載入的圖層\n        description: '依服務人員顯示其所有服務日期',\n        icon: 'fas fa-user-nurse',\n      },\n    ]);\n\n    // =============================================================================\n    // 📊 狀態定義 (State Definition)\n    // =============================================================================\n\n    /**\n     * 圖層群組資料\n     * @type {import('vue').Ref<LayerGroup[]>}\n     */\n    const layers = ref([...DEFAULT_LAYER_GROUPS]);\n\n    // =============================================================================\n    // 🔍 圖層查找和實用工具函數 (Layer Lookup & Utility Functions)\n    // =============================================================================\n\n    /**\n     * 根據圖層 ID 查找圖層\n     *\n     * @param {string} layerId - 圖層唯一識別碼\n     * @returns {LayerInfo|null} 找到的圖層物件，若找不到則返回 null\n     *\n     * @example\n     * const layer = findLayerById('service-provider-123');\n     * if (layer) {\n     *   console.log(layer.layerName);\n     * }\n     */\n    const findLayerById = (layerId) => {\n      if (!layerId || typeof layerId !== 'string') {\n        console.warn('🔍 findLayerById: 無效的圖層 ID', layerId);\n        return null;\n      }\n\n      for (const group of layers.value) {\n        const foundLayer = group.groupLayers.find((layer) => layer.layerId === layerId);\n        if (foundLayer) {\n          return foundLayer;\n        }\n      }\n\n      return null;\n    };\n\n    /**\n     * 獲取所有圖層的扁平陣列\n     *\n     * @returns {Array<LayerInfo>} 所有圖層的陣列\n     */\n    const getAllLayers = () => {\n      return layers.value.reduce((allLayers, group) => {\n        return allLayers.concat(group.groupLayers);\n      }, []);\n    };\n\n    // =============================================================\n    // Visibility Controls\n    // =============================================================\n\n    /**\n     * 控制圖層的顯示/隱藏 (Toggle Layer Visibility)\n     * @param {string} layerId\n     */\n    const toggleLayerVisibility = async (layerId) => {\n      console.log('🔧 DataStore: toggleLayerVisibility 被調用', layerId);\n      const layer = findLayerById(layerId);\n      if (!layer) {\n        console.error(`Layer with id \"${layerId}\" not found.`);\n        return;\n      }\n\n      console.log('🔧 DataStore: 找到圖層', layer.layerName, '當前狀態:', layer.visible);\n\n      // 切換可見性狀態\n      layer.visible = !layer.visible;\n      console.log('🔧 DataStore: 新狀態:', layer.visible);\n\n      // 注意：服務人員圖層的顏色已在載入時分配，不需要在這裡動態分配\n      // 移除了原本的動態顏色分配邏輯\n\n      // 服務人員圖層已經在創建時載入好了數據，這裡只需要處理可見性切換\n      console.log(`🔄 圖層 \"${layer.layerName}\" 可見性切換為:`, layer.visible);\n    };\n\n    /**\n     * 🗺️ 將所有圖層設為不可見（清空地圖顯示）\n     */\n    const hideAllLayersOnMap = () => {\n      getAllLayers().forEach((layer) => {\n        if (layer.visible) {\n          layer.visible = false;\n        }\n      });\n      console.log('🗺️ 已將所有圖層設為不可見（清空地圖顯示）');\n    };\n\n    /**\n     * 控制整個群組圖層的顯示/隱藏 (Toggle Group Visibility)\n     * @param {string} groupName\n     */\n    const toggleGroupVisibility = async (groupName) => {\n      console.log('🔧 DataStore: toggleGroupVisibility 被調用', groupName);\n      const group = layers.value.find((g) => g.groupName === groupName);\n      if (!group) {\n        console.error(`Group with name \"${groupName}\" not found.`);\n        return;\n      }\n\n      // 檢查群組中是否有任何圖層為可見狀態\n      const hasVisibleLayers = group.groupLayers.some((layer) => layer.visible);\n\n      // 如果有可見圖層，則全部隱藏；如果沒有可見圖層，則全部顯示\n      const newVisibility = !hasVisibleLayers;\n\n      console.log(\n        `🔧 DataStore: 群組 \"${groupName}\" 將 ${newVisibility ? '顯示' : '隱藏'} 所有圖層`\n      );\n\n      // 設置所有圖層的可見性\n      group.groupLayers.forEach((layer) => {\n        layer.visible = newVisibility;\n\n        // 注意：服務人員圖層的顏色已在載入時分配，不需要在這裡動態分配\n        // 移除了原本的動態顏色分配邏輯\n\n        console.log(`🔄 圖層 \"${layer.layerName}\" 可見性設為:`, newVisibility);\n      });\n    };\n\n    /**\n     * 檢查群組是否有任何可見圖層 (Is Group Visible)\n     * @param {string} groupName\n     * @returns {boolean}\n     */\n    const isGroupVisible = (groupName) => {\n      const group = layers.value.find((g) => g.groupName === groupName);\n      if (!group) return false;\n      return group.groupLayers.some((layer) => layer.visible);\n    };\n\n    // =============================================================\n    // Selected Feature & Date Filter\n    // =============================================================\n    // 選中的地圖物件\n    const selectedFeature = ref(null);\n\n    // 📅 日期篩選狀態 (Date Filter State)\n    const selectedServiceDate = ref('1140701'); // 預設為 2025年7月1日\n    const isDateFilterActive = ref(true); // 預設啟用日期篩選\n\n    // 👤 服務人員篩選狀態 (Service Provider Filter State)\n    const selectedServiceProvider = ref(''); // 選中的服務人員身分證\n    const isServiceProviderFilterActive = ref(false); // 服務人員篩選是否啟用\n    const availableServiceProviders = ref([]); // 可用的服務人員清單\n\n    // 📑 左側面板分頁狀態 (Left Panel Tab State)\n    const activeLeftTab = ref('date'); // 當前活躍的左側分頁 ('date' 或 'server')\n\n    /**\n     * 🔄 設置左側面板活躍分頁 (Set Active Left Tab)\n     * @param {string} tabName - 分頁名稱 ('date' 或 'server')\n     */\n    const setActiveLeftTab = (tabName) => {\n      activeLeftTab.value = tabName;\n      console.log('📑 設置左側面板分頁:', tabName);\n    };\n\n    const setSelectedFeature = (feature) => {\n      selectedFeature.value = feature;\n    };\n\n    const clearSelectedFeature = () => {\n      selectedFeature.value = null;\n    };\n\n    // 📅 日期篩選相關方法 (Date Filter Methods)\n\n    /**\n     * 📅 設定服務日期篩選\n     * @param {string} dateStr - 7碼日期字串 (例如: 1140701)\n     */\n    const setServiceDateFilter = (dateStr) => {\n      selectedServiceDate.value = dateStr;\n      isDateFilterActive.value = !!dateStr;\n      console.log('📅 設定服務日期篩選:', dateStr);\n    };\n\n    /**\n     * 📅 清除服務日期篩選\n     */\n    const clearServiceDateFilter = () => {\n      selectedServiceDate.value = '';\n      isDateFilterActive.value = false;\n      console.log('📅 清除服務日期篩選');\n    };\n\n    /**\n     * 📅 載入指定日期的服務人員圖層\n     */\n    const loadServiceProviderLayers = async (dateStr) => {\n      try {\n        console.log('📅 dataStore 接收到的日期參數:', dateStr);\n        console.log('📅 將用此日期查詢 JSON 中的服務日期(請輸入7碼)');\n\n        // 找到服務記錄群組（日期）\n        const serviceRecordGroup = layers.value.find((g) => g.groupName === '服務人員列表');\n        if (serviceRecordGroup) {\n          // 清除現有的服務人員圖層\n          serviceRecordGroup.groupLayers = [];\n\n          // 創建一個臨時的載入指示器圖層\n          const loadingLayer = {\n            layerId: 'loading-indicator-date',\n            layerName: '服務日期',\n            visible: false,\n            isLoaded: false,\n            isLoading: true,\n            isAnalysisLayer: false,\n            isIsochroneAnalysisLayer: false,\n            geoJsonData: null,\n            tableData: [],\n            summaryData: { totalCount: 0, routeCount: 0, districtCount: [] },\n            legendData: null,\n            colorName: 'category20b-1',\n            type: 'point',\n            shape: 'circle',\n          };\n          serviceRecordGroup.groupLayers.push(loadingLayer);\n        }\n\n        // 載入服務數據（不需要傳遞顏色映射，每天重新分配）\n        const result = await loadNewStandardCentralServiceData(\n          {\n            layerId: '新基準中央服務紀錄',\n            colorName: 'category20b-1', // 預設顏色，會在後面重新分配\n            fileName: '新基準中央服務紀錄_all_2.json',\n          },\n          dateStr,\n          null // 不再需要顏色映射\n        );\n        if (serviceRecordGroup) {\n          // 清除現有的服務人員圖層\n          serviceRecordGroup.groupLayers = [];\n\n          // 如果有服務人員數據，為每個服務人員創建圖層\n          if (result.serviceProviderLayers && result.serviceProviderLayers.length > 0) {\n            console.log('📅 找到', result.serviceProviderLayers.length, '個服務人員');\n\n            // ============================================\n            // 確保服務人員圖層按照固定順序排列\n            // 這樣每一天的圖層都會按照 category20b 顏色順序顯示\n            // ============================================\n\n            // 1. 先收集所有服務人員ID並排序\n            const serviceProviderIds = result.serviceProviderLayers\n              .map((layer) => layer.serviceProviderId)\n              .sort(); // 按字母順序排序，確保一致性\n\n            console.log('📅 服務人員ID排序:', serviceProviderIds);\n\n            // 2. 按照當天的順序分配顏色（每天重新開始）\n            // 不需要跨日期保持相同顏色，每天按照出現順序分配 category20b 顏色\n            console.log('🎨 為當天服務人員分配顏色（按順序）');\n\n            // 3. 按照固定順序創建圖層並分配顏色\n            serviceProviderIds.forEach((serviceProviderId, index) => {\n              // 找到對應的服務圖層數據\n              const serviceLayer = result.serviceProviderLayers.find(\n                (layer) => layer.serviceProviderId === serviceProviderId\n              );\n\n              if (!serviceLayer) return;\n\n              // 直接按照當天的順序分配顏色（不考慮跨日期一致性）\n              const colorIndex = index % COLOR_PALETTE.length;\n              const assignedColor = COLOR_PALETTE[colorIndex];\n\n              // ============================================\n              // 更新 GeoJSON features 中的顏色屬性\n              // 確保左側面板和地圖顯示一致的顏色\n              // ============================================\n              if (serviceLayer.geoJsonData && serviceLayer.geoJsonData.features) {\n                serviceLayer.geoJsonData.features.forEach((feature) => {\n                  if (feature.properties) {\n                    if (feature.geometry.type === 'Point') {\n                      feature.properties.fillColor = assignedColor;\n                    } else if (feature.geometry.type === 'LineString') {\n                      feature.properties.routeColor = assignedColor;\n                    }\n                  }\n                });\n              }\n\n              const serviceLayerId = `service-provider-${serviceLayer.serviceProviderId}`;\n              const serviceLayerObj = {\n                layerId: serviceLayerId,\n                layerName: serviceLayer.serviceProviderId, // 直接使用服務人員身分證\n                visible: false, // 預設隱藏\n                isLoaded: true,\n                isLoading: false,\n                isAnalysisLayer: false,\n                isIsochroneAnalysisLayer: false,\n                geoJsonData: serviceLayer.geoJsonData,\n                tableData: serviceLayer.tableData || [], // 使用 dataProcessor 提供的 service_points 資料\n                summaryData: {\n                  totalCount: serviceLayer.servicePointsCount || serviceLayer.pointCount, // 優先使用 service_points_count\n                  routeCount: serviceLayer.routeCount,\n                  districtCount: [],\n                },\n                legendData: null,\n                loader: loadNewStandardCentralServiceData,\n                serviceProviderId: serviceLayer.serviceProviderId,\n                serviceDate: dateStr, // 儲存服務日期，用於動態分配顏色\n                colorName: assignedColor, // 使用分配的顏色\n                type: 'point',\n                shape: 'circle',\n              };\n\n              // 添加到群組的圖層列表中\n              serviceRecordGroup.groupLayers.push(serviceLayerObj);\n              console.log(\n                `📅 創建服務人員圖層: ${serviceLayer.serviceProviderId} (索引: ${index}, 顏色: ${assignedColor}, 已更新GeoJSON顏色)`\n              );\n            });\n\n            // 顏色已在上方直接分配，無需額外操作\n          } else {\n            console.log('📅 沒有找到該日期的服務人員數據');\n          }\n\n          console.log(\n            '📅 服務人員圖層載入完成，共',\n            serviceRecordGroup.groupLayers.length,\n            '個圖層'\n          );\n        }\n      } catch (error) {\n        console.error('📅 載入服務人員圖層失敗:', error);\n      }\n    };\n\n    /**\n     * 📅 清除服務人員圖層 (Clear Service Provider Layers)\n     */\n    const clearServiceProviderLayers = () => {\n      // 清除日期群組\n      const serviceRecordGroup = layers.value.find((g) => g.groupName === '服務人員列表');\n      if (serviceRecordGroup) {\n        serviceRecordGroup.groupLayers = [];\n        // 清除服務人員圖層（每天重新載入和分配顏色）\n        console.log('📅 已清除所有服務人員圖層');\n      }\n    };\n\n    // =============================================================\n    // 👤 服務人員篩選相關方法 (Service Provider Filter Methods)\n    // =============================================================\n\n    /**\n     * 👤 載入所有可用的服務人員清單\n     */\n    const loadAvailableServiceProviders = async () => {\n      try {\n        const filePath = '/long-term-care-web-taichung/data/json/新基準中央服務紀錄_all_2.json';\n        const response = await fetch(filePath);\n\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        const jsonData = await response.json();\n\n        // 提取所有唯一的服務人員身分證\n        const uniqueProviderIds = [...new Set(jsonData.map((record) => record.服務人員身分證))];\n\n        // 為每個服務人員統計服務日期數量\n        const providersWithStats = uniqueProviderIds.map((providerId) => {\n          const providerRecords = jsonData.filter((record) => record.服務人員身分證 === providerId);\n          const uniqueDates = [\n            ...new Set(providerRecords.map((record) => record['服務日期(請輸入7碼)'])),\n          ];\n\n          return {\n            id: providerId,\n            name: `${providerId}`,\n            dateCount: uniqueDates.length,\n            totalRecords: providerRecords.length,\n          };\n        });\n\n        // 按服務日期數量排序（多的在前）\n        providersWithStats.sort((a, b) => b.dateCount - a.dateCount);\n\n        availableServiceProviders.value = providersWithStats;\n        console.log('👤 載入服務人員清單，共', providersWithStats.length, '位服務人員');\n\n        return providersWithStats;\n      } catch (error) {\n        console.error('👤 載入服務人員清單失敗:', error);\n        return [];\n      }\n    };\n\n    /**\n     * 👤 設定服務人員篩選\n     * @param {string} providerId - 服務人員身分證\n     */\n    const setServiceProviderFilter = (providerId) => {\n      selectedServiceProvider.value = providerId;\n      isServiceProviderFilterActive.value = !!providerId;\n      console.log('👤 設定服務人員篩選:', providerId);\n    };\n\n    /**\n     * 👤 清除服務人員篩選\n     */\n    const clearServiceProviderFilter = () => {\n      selectedServiceProvider.value = '';\n      isServiceProviderFilterActive.value = false;\n      console.log('👤 清除服務人員篩選');\n    };\n\n    /**\n     * 👤 載入指定服務人員的所有日期圖層\n     */\n    const loadServiceProviderDateLayers = async (providerId) => {\n      try {\n        console.log('👤 dataStore 接收到的服務人員ID:', providerId);\n\n        // 找到服務記錄群組（服務人員）\n        const serviceRecordGroup = layers.value.find((g) => g.groupName === '服務日期列表');\n        if (serviceRecordGroup) {\n          // 清除現有的圖層\n          serviceRecordGroup.groupLayers = [];\n\n          // 創建一個臨時的載入指示器圖層\n          const loadingLayer = {\n            layerId: 'loading-indicator-provider',\n            layerName: '服務人員',\n            visible: false,\n            isLoaded: false,\n            isLoading: true,\n            isAnalysisLayer: false,\n            isIsochroneAnalysisLayer: false,\n            geoJsonData: null,\n            tableData: [],\n            summaryData: { totalCount: 0, routeCount: 0, districtCount: [] },\n            legendData: null,\n            colorName: 'category20b-1',\n            type: 'point',\n            shape: 'circle',\n          };\n          serviceRecordGroup.groupLayers.push(loadingLayer);\n        }\n\n        const filePath = '/long-term-care-web-taichung/data/json/新基準中央服務紀錄_all_2.json';\n        const response = await fetch(filePath);\n\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        const jsonData = await response.json();\n\n        // 篩選出該服務人員的所有記錄\n        const providerRecords = jsonData.filter((record) => record.服務人員身分證 === providerId);\n\n        // 按日期分組\n        const dateGroups = {};\n        providerRecords.forEach((record) => {\n          const date = record['服務日期(請輸入7碼)'];\n          if (!dateGroups[date]) {\n            dateGroups[date] = [];\n          }\n          dateGroups[date].push(record);\n        });\n\n        // 移除載入指示器並處理實際數據\n        if (serviceRecordGroup) {\n          // 清除載入指示器\n          serviceRecordGroup.groupLayers = [];\n\n          // 為每個日期創建圖層\n          const sortedDates = Object.keys(dateGroups).sort();\n\n          sortedDates.forEach((date, index) => {\n            const colorIndex = index % COLOR_PALETTE.length;\n            const assignedColor = COLOR_PALETTE[colorIndex];\n\n            // 處理該日期的資料\n            const dateData = dateGroups[date];\n            const processedData = processServiceProviderData(dateData, assignedColor);\n\n            if (processedData && processedData.features.length > 0) {\n              const layerId = `service-date-${date}`;\n              // 從 GeoJSON features 中提取 tableData（與 DateLayersTab 一致）\n              const tableData = processedData.features\n                .filter((feature) => feature.geometry.type === 'Point')\n                .map((feature) => ({\n                  id: feature.properties.id,\n                  姓名: feature.properties.姓名,\n                  個案居住地址: feature.properties.個案居住地址,\n                  起始時間: feature.properties.起始時間,\n                  編號: feature.properties.編號,\n                  性別: feature.properties.性別,\n                  detail: feature.properties.detail,\n                  hour_start: feature.properties.hour_start,\n                  min_start: feature.properties.min_start,\n                  hour_end: feature.properties.hour_end,\n                  min_end: feature.properties.min_end,\n                  hour_traffic: feature.properties.hour_traffic,\n                  min_traffic: feature.properties.min_traffic,\n                  service_items: feature.properties.service_items,\n                  service_items_count:\n                    feature.properties.service_items_count ||\n                    (Array.isArray(feature.properties.service_items)\n                      ? feature.properties.service_items.length\n                      : 0),\n                  serviceProviderId: feature.properties.serviceProviderId,\n                  serviceDate: feature.properties.serviceDate,\n                  routeOrder: feature.properties.routeOrder,\n                  lat: feature.geometry.coordinates[1],\n                  lon: feature.geometry.coordinates[0],\n                }));\n\n              // 計算該日期的 service_points_count 總數（與 DateLayersTab 一致）\n              const servicePointsCount = dateData.reduce((total, record) => {\n                return total + (record.service_points_count || 0);\n              }, 0);\n\n              const layerObj = {\n                layerId: layerId,\n                layerName: `${date}`,\n                visible: false, // 預設為關閉狀態\n                isLoaded: true,\n                isLoading: false,\n                colorName: assignedColor,\n                // 與 DateLayersTab 對齊，讓地圖同步機制識別為點圖層\n                type: 'point',\n                geoJsonData: processedData,\n                tableData: tableData, // 使用提取的 tableData\n                summaryData: {\n                  totalCount:\n                    servicePointsCount ||\n                    processedData.features.filter((f) => f.geometry.type === 'Point').length, // 優先使用 service_points_count\n                  pointCount: processedData.features.filter((f) => f.geometry.type === 'Point')\n                    .length,\n                  lineCount: processedData.features.filter((f) => f.geometry.type === 'LineString')\n                    .length,\n                },\n                // 添加服務人員相關屬性，讓 DataTableTab 能正確處理點擊事件\n                serviceProviderId: providerId,\n                serviceDate: date,\n              };\n\n              serviceRecordGroup.groupLayers.push(layerObj);\n            }\n          });\n\n          console.log('👤 載入完成，共', sortedDates.length, '個日期的圖層');\n        }\n      } catch (error) {\n        console.error('👤 載入服務人員日期圖層失敗:', error);\n      }\n    };\n\n    /**\n     * 👤 清除服務人員群組的圖層\n     */\n    const clearServiceProviderDateLayers = () => {\n      const providerGroup = layers.value.find((g) => g.groupName === '服務日期列表');\n      if (providerGroup) {\n        providerGroup.groupLayers = [];\n        console.log('👤 已清除服務人員群組的所有圖層');\n      }\n    };\n\n    /**\n     * 👤 處理服務人員單日資料\n     */\n    const processServiceProviderData = (dayRecords, colorName) => {\n      const features = [];\n\n      dayRecords.forEach((serviceProvider, providerIndex) => {\n        // 處理 service_points_routes 路線（與 DateLayersTab 完全一致）\n        if (\n          serviceProvider.service_points_routes &&\n          Array.isArray(serviceProvider.service_points_routes)\n        ) {\n          serviceProvider.service_points_routes.forEach((routeCollection) => {\n            if (routeCollection.features && Array.isArray(routeCollection.features)) {\n              routeCollection.features.forEach((routeFeature) => {\n                if (routeFeature.geometry && routeFeature.geometry.type === 'LineString') {\n                  features.push({\n                    type: 'Feature',\n                    geometry: routeFeature.geometry,\n                    properties: {\n                      id: `route_${serviceProvider.服務人員身分證}_${providerIndex}`,\n                      layerName: '服務路線_路線', // 添加 layerName 屬性，讓 MapTab 識別為路線\n                      name: `服務路線_${serviceProvider.服務人員身分證}`,\n                      strokeColor: colorName, // 使用顏色名稱，方便統一處理\n                      routeColor: colorName, // 添加routeColor屬性，使用統一的顏色\n                      strokeWidth: 3,\n                      strokeOpacity: 0.8,\n                      serviceProviderId: serviceProvider.服務人員身分證,\n                      serviceDate: serviceProvider['服務日期(請輸入7碼)'],\n                      pointCount: routeFeature.geometry.coordinates.length,\n                      distance: routeFeature.properties?.summary?.distance || 0,\n                      duration: routeFeature.properties?.summary?.duration || 0,\n                      segments: routeFeature.properties?.segments?.length || 0,\n                      ...routeFeature.properties,\n                    },\n                  });\n                }\n              });\n            }\n          });\n        }\n\n        // 處理舊版 route 資料（向後相容）\n        if (serviceProvider.route && serviceProvider.route.length > 1) {\n          const coordinates = serviceProvider.route.map((point) => [point.lon, point.lat]);\n          features.push({\n            type: 'Feature',\n            geometry: {\n              type: 'LineString',\n              coordinates: coordinates,\n            },\n            properties: {\n              id: `route_${serviceProvider.服務人員身分證}_${providerIndex}`,\n              layerName: '服務路線_路線', // 添加 layerName 屬性，讓 MapTab 識別為路線\n              routeColor: colorName,\n              serviceProviderId: serviceProvider.服務人員身分證,\n              serviceDate: serviceProvider['服務日期(請輸入7碼)'],\n            },\n          });\n        }\n\n        // 處理服務點（保持與 DateLayersTab 一致的屬性）\n        serviceProvider.service_points.forEach((serviceRecord, index) => {\n          if (serviceRecord.detail && serviceRecord.detail.Lat && serviceRecord.detail.Lon) {\n            const lat = parseFloat(serviceRecord.detail.Lat);\n            const lon = parseFloat(serviceRecord.detail.Lon);\n\n            if (!isNaN(lat) && !isNaN(lon)) {\n              features.push({\n                type: 'Feature',\n                geometry: {\n                  type: 'Point',\n                  coordinates: [lon, lat],\n                },\n                properties: {\n                  id: `point_${serviceProvider.服務人員身分證}_${index}`,\n                  fillColor: colorName,\n                  routeOrder: index + 1,\n                  serviceProviderId: serviceProvider.服務人員身分證,\n                  serviceDate: serviceProvider['服務日期(請輸入7碼)'],\n                  姓名: serviceRecord.detail.姓名,\n                  身分證字號: serviceRecord['身分證字號'],\n                  個案居住地址: serviceRecord.detail.個案居住地址,\n                  起始時間: `${serviceRecord.hour_start}:${serviceRecord.min_start.toString().padStart(2, '0')}`,\n                  編號: serviceRecord.detail.編號,\n                  性別: serviceRecord.detail.性別,\n                  detail: serviceRecord.detail,\n                  hour_start: serviceRecord.hour_start,\n                  min_start: serviceRecord.min_start,\n                  hour_end: serviceRecord.hour_end,\n                  min_end: serviceRecord.min_end,\n                  hour_traffic: serviceRecord.hour_traffic || 0,\n                  min_traffic: serviceRecord.min_traffic || 0,\n                  service_items: serviceRecord.service_items || [],\n                },\n              });\n            }\n          }\n        });\n      });\n\n      return {\n        type: 'FeatureCollection',\n        features: features,\n      };\n    };\n\n    /**\n     * 📅 檢查資料是否符合日期篩選條件 (Matches Date Filter)\n     * @param {Object} data - 要檢查的資料物件\n     * @returns {boolean} - 是否符合篩選條件\n     */\n    const matchesDateFilter = (data) => {\n      if (!isDateFilterActive.value || !selectedServiceDate.value) {\n        return true; // 沒有篩選條件時，所有資料都符合\n      }\n\n      // 檢查資料中是否有服務日期欄位\n      if (data && data['服務日期(請輸入7碼)']) {\n        const dataDate = data['服務日期(請輸入7碼)'].toString();\n        return dataDate === selectedServiceDate.value;\n      }\n\n      return true; // 如果沒有日期欄位，預設符合條件\n    };\n\n    // =============================================================\n    // Spatial Utilities\n    // =============================================================\n    // 🧮 計算兩點間距離 (Calculate Distance Between Two Points)\n    // 使用 Haversine 公式計算地球表面兩點間的距離（公尺）\n    const calculateDistance = (lat1, lng1, lat2, lng2) => {\n      const R = 6371000; // 地球半徑（公尺）\n      const dLat = ((lat2 - lat1) * Math.PI) / 180;\n      const dLng = ((lng2 - lng1) * Math.PI) / 180;\n      const a =\n        Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n        Math.cos((lat1 * Math.PI) / 180) *\n          Math.cos((lat2 * Math.PI) / 180) *\n          Math.sin(dLng / 2) *\n          Math.sin(dLng / 2);\n      const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n      return R * c; // 距離（公尺）\n    };\n\n    // 🔍 計算範圍內的點物件 (Calculate Points Within Range)\n    const calculatePointsInRange = (centerLat, centerLng, radiusMeters = 2000) => {\n      const pointsInRange = [];\n\n      // 獲取所有可見且已載入的點類型圖層\n      const visiblePointLayers = getAllLayers().filter(\n        (layer) =>\n          layer.visible &&\n          layer.isLoaded &&\n          layer.type === 'point' &&\n          !layer.isAnalysisLayer &&\n          !layer.isIsochroneAnalysisLayer &&\n          layer.geoJsonData\n      );\n\n      console.log(\n        '🔍 檢查可見的點圖層:',\n        visiblePointLayers.map((l) => l.layerName)\n      );\n\n      visiblePointLayers.forEach((layer) => {\n        if (layer.geoJsonData && layer.geoJsonData.features) {\n          layer.geoJsonData.features.forEach((feature) => {\n            if (feature.geometry.type === 'Point') {\n              const [lng, lat] = feature.geometry.coordinates;\n              const distance = calculateDistance(centerLat, centerLng, lat, lng);\n\n              if (distance <= radiusMeters) {\n                // 創建增強的 feature 物件，包含距離和圖層資訊\n                const enhancedFeature = {\n                  ...feature, // 保留原始 feature 的所有屬性\n                  layerId: layer.layerId,\n                  layerName: layer.layerName,\n                  distance: Math.round(distance), // 添加距離資訊\n                };\n                pointsInRange.push(enhancedFeature);\n              }\n            }\n          });\n        }\n      });\n\n      // 按距離排序\n      pointsInRange.sort((a, b) => a.distance - b.distance);\n\n      console.log(`🎯 在 ${radiusMeters / 1000}公里範圍內找到 ${pointsInRange.length} 個點物件`);\n      return pointsInRange;\n    };\n\n    const calculatePolygonInRange = (centerLat, centerLng, radiusMeters = 2000) => {\n      const polygonInRange = [];\n\n      // 獲取所有可見且已載入的區域類型圖層\n      const visiblePolygonLayers = getAllLayers().filter(\n        (layer) =>\n          layer.visible &&\n          layer.isLoaded &&\n          layer.type === 'polygon' &&\n          !layer.isAnalysisLayer &&\n          !layer.isIsochroneAnalysisLayer &&\n          layer.geoJsonData\n      );\n\n      console.log(\n        '🔍 檢查可見的多邊形圖層:',\n        visiblePolygonLayers.map((l) => l.layerName)\n      );\n\n      visiblePolygonLayers.forEach((layer) => {\n        if (layer.geoJsonData && layer.geoJsonData.features) {\n          layer.geoJsonData.features.forEach((feature) => {\n            if (feature.geometry.type === 'Polygon' || feature.geometry.type === 'MultiPolygon') {\n              // 檢查多邊形是否與圓圈有重疊\n              const hasOverlap = checkPolygonCircleOverlap(\n                feature.geometry,\n                centerLat,\n                centerLng,\n                radiusMeters\n              );\n\n              if (hasOverlap) {\n                // 創建增強的 feature 物件，包含圖層資訊\n                const enhancedFeature = {\n                  ...feature, // 保留原始 feature 的所有屬性\n                  layerId: layer.layerId,\n                  layerName: layer.layerName,\n                  overlapType: 'intersects', // 標記為相交\n                };\n                polygonInRange.push(enhancedFeature);\n              }\n            }\n          });\n        }\n      });\n\n      console.log(\n        `🎯 在 ${radiusMeters / 1000}公里範圍內找到 ${polygonInRange.length} 個重疊多邊形`\n      );\n      return polygonInRange;\n    };\n\n    // 檢查多邊形與圓圈是否重疊的函數 (Check Polygon-Circle Overlap)\n    const checkPolygonCircleOverlap = (geometry, centerLat, centerLng, radiusMeters) => {\n      const coordinates =\n        geometry.type === 'Polygon' ? [geometry.coordinates] : geometry.coordinates;\n\n      for (const polygon of coordinates) {\n        for (const ring of polygon) {\n          for (const [lng, lat] of ring) {\n            const distance = calculateDistance(centerLat, centerLng, lat, lng);\n            if (distance <= radiusMeters) {\n              return true; // 如果任何一個頂點在圓內，就認為有重疊\n            }\n          }\n        }\n      }\n\n      // 也可以檢查圓心是否在多邊形內，但這裡簡化處理\n      return false;\n    };\n\n    // =============================================================\n    // Returned API (Store Interface)\n    // =============================================================\n\n    // 注意：路徑規劃和路徑優化相關的函數和註解已移除\n\n    return {\n      layers,\n      findLayerById, // 根據 ID 尋找圖層\n      getAllLayers, // 獲取所有圖層的扁平陣列\n      toggleLayerVisibility,\n      toggleGroupVisibility, // 切換群組圖層可見性\n      isGroupVisible, // 檢查群組是否有可見圖層\n      selectedFeature,\n      setSelectedFeature,\n      clearSelectedFeature,\n\n      // 📅 日期篩選相關\n      selectedServiceDate,\n      isDateFilterActive,\n      setServiceDateFilter,\n      clearServiceDateFilter,\n      matchesDateFilter,\n      loadServiceProviderLayers, // 載入服務人員圖層\n      clearServiceProviderLayers, // 清除服務人員圖層\n\n      // 👤 服務人員篩選相關\n      selectedServiceProvider,\n      isServiceProviderFilterActive,\n      availableServiceProviders,\n      loadAvailableServiceProviders,\n      setServiceProviderFilter,\n      clearServiceProviderFilter,\n      loadServiceProviderDateLayers,\n      clearServiceProviderDateLayers,\n      hideAllLayersOnMap,\n\n      // 📑 左側面板分頁相關\n      activeLeftTab,\n      setActiveLeftTab,\n\n      calculatePointsInRange, // 計算範圍內的點\n      calculatePolygonInRange, // 計算範圍內的多邊形\n      visibleLayers: computed(() => getAllLayers().filter((layer) => layer.visible)),\n      loadingLayers: computed(() => getAllLayers().filter((layer) => layer.isLoading)),\n\n      // 創建服務項目資料的工具函數 - 重寫版本\n      createServiceItemsData: (itemOrFeature, layer) => {\n        console.log('>> [1] createServiceItemsData: 開始處理', {\n          itemOrFeature,\n          layerName: layer.layerName,\n        });\n\n        const isFeature = itemOrFeature.type === 'Feature';\n        const properties = isFeature ? itemOrFeature.properties : itemOrFeature;\n\n        // 屬性物件必須直接包含 service_items\n        const serviceItems =\n          properties.service_items && Array.isArray(properties.service_items)\n            ? [...properties.service_items]\n            : [];\n\n        if (serviceItems.length === 0) {\n          console.warn(\n            '!! [1a] createServiceItemsData: `properties` 中缺少 `service_items` 或其為空!',\n            properties\n          );\n        } else {\n          console.log(\n            '>> [1b] createServiceItemsData: 成功找到 service_items，數量:',\n            serviceItems.length\n          );\n        }\n\n        const serviceItemsData = {\n          type: 'service-items',\n          layerId: layer.layerId,\n          layerName: layer.layerName,\n          servicePoint: properties, // 原始屬性\n          serviceItems: serviceItems, // 提取出的服務項目\n          servicePointInfo: {\n            name: properties.姓名 || properties.name,\n            address: properties.個案居住地址 || properties.address,\n            time: properties.時間 || properties.time,\n            serviceType: properties.服務項目代碼 || properties.serviceType,\n            order: properties.順序 || properties.order,\n            lat: properties.緯度 || properties.lat,\n            lng: properties.經度 || properties.lon,\n          },\n        };\n\n        console.log(\n          '>> [2] createServiceItemsData: 處理完成，返回 serviceItemsData',\n          serviceItemsData\n        );\n        return { serviceItemsData };\n      },\n    };\n  },\n  {\n    persist: true,\n  }\n);\n","<script>\n  /**\n   * =============================================================================\n   * 📥 LoadingOverlay.vue - 載入覆蓋層組件\n   * =============================================================================\n   *\n   * 用途：顯示全螢幕載入狀態的覆蓋層組件\n   *\n   * 功能特性：\n   * - 🎯 全螢幕覆蓋顯示\n   * - ⏳ 支援載入動畫和文字提示\n   * - 📊 可選的進度條顯示\n   * - 🎨 無障礙設計支援\n   * - 📱 響應式設計\n   *\n   * @author 長期照護資源分析系統團隊\n   * @version 2.0.0\n   */\n\n  import { computed } from 'vue';\n\n  export default {\n    name: 'LoadingOverlay',\n\n    /**\n     * =============================================================================\n     * 🔧 組件屬性定義 (Component Props Configuration)\n     * =============================================================================\n     */\n    props: {\n      /**\n       * ⏳ 是否顯示載入覆蓋層\n       * @type {boolean}\n       */\n      isVisible: {\n        type: Boolean,\n        default: false,\n        required: true,\n        validator: (value) => typeof value === 'boolean',\n      },\n\n      /**\n       * 📝 載入過程的主要文字描述\n       * @type {string}\n       */\n      loadingText: {\n        type: String,\n        default: '載入中...',\n        validator: (value) => typeof value === 'string' && value.length > 0,\n      },\n\n      /**\n       * 📊 載入進度百分比 (0-100，-1 表示不顯示進度)\n       * @type {number}\n       */\n      progress: {\n        type: Number,\n        default: -1,\n        validator: (value) => {\n          return typeof value === 'number' && !isNaN(value) && value >= -1 && value <= 100;\n        },\n      },\n\n      /**\n       * 📊 是否顯示進度條\n       * @type {boolean}\n       */\n      showProgress: {\n        type: Boolean,\n        default: false,\n      },\n\n      /**\n       * 📝 輔助說明文字 (可選)\n       * @type {string}\n       */\n      subText: {\n        type: String,\n        default: '',\n      },\n\n      /**\n       * 🎨 載入覆蓋層主題色彩\n       * @type {('primary'|'secondary'|'success'|'warning'|'danger')}\n       */\n      theme: {\n        type: String,\n        default: 'primary',\n        validator: (value) =>\n          ['primary', 'secondary', 'success', 'warning', 'danger'].includes(value),\n      },\n\n      /**\n       * 📏 載入動畫大小\n       * @type {('sm'|'md'|'lg')}\n       */\n      size: {\n        type: String,\n        default: 'md',\n        validator: (value) => ['sm', 'md', 'lg'].includes(value),\n      },\n    },\n\n    /**\n     * =============================================================================\n     * 🔧 組件邏輯設定 (Component Setup)\n     * =============================================================================\n     */\n    setup(props) {\n      /**\n       * 🎨 動態樣式計算 (Dynamic Style Computation)\n       */\n\n      // 載入動畫尺寸映射\n      const spinnerSizes = {\n        sm: { width: '1.5rem', height: '1.5rem' },\n        md: { width: '2rem', height: '2rem' },\n        lg: { width: '2.5rem', height: '2.5rem' },\n      };\n\n      // 計算載入動畫樣式\n      const spinnerStyle = computed(() => ({\n        ...spinnerSizes[props.size],\n      }));\n\n      // 計算主題CSS類名\n      const themeClass = computed(() => `text-${props.theme}`);\n\n      // 進度條樣式類名\n      const progressBarClass = computed(() => `bg-${props.theme}`);\n\n      // 格式化進度百分比\n      const formattedProgress = computed(() => {\n        if (props.progress < 0) return 0;\n        return Math.max(0, Math.min(100, Math.round(props.progress)));\n      });\n\n      // 是否應該顯示進度條\n      const shouldShowProgress = computed(() => {\n        return props.showProgress && props.progress >= 0;\n      });\n\n      /**\n       * 🔧 輔助方法 (Helper Methods)\n       */\n\n      // 獲取進度條的 aria-label\n      const getProgressAriaLabel = () => {\n        return `載入進度 ${formattedProgress.value} 百分比`;\n      };\n\n      // 獲取載入狀態的完整描述（用於螢幕閱讀器）\n      const getLoadingDescription = () => {\n        let description = props.loadingText;\n        if (props.subText) {\n          description += `，${props.subText}`;\n        }\n        if (shouldShowProgress.value) {\n          description += `，進度 ${formattedProgress.value}%`;\n        }\n        return description;\n      };\n\n      return {\n        // 計算屬性\n        spinnerStyle,\n        themeClass,\n        progressBarClass,\n        formattedProgress,\n        shouldShowProgress,\n\n        // 方法\n        getProgressAriaLabel,\n        getLoadingDescription,\n      };\n    },\n  };\n</script>\n\n<template>\n  <!--\n    =============================================================================\n    ⏳ 載入覆蓋層組件 (Loading Overlay Component)\n    =============================================================================\n\n    功能：在資料載入時顯示全螢幕覆蓋層，提供視覺化回饋\n    特性：支援無障礙設計、進度條顯示、主題色彩配置\n  -->\n  <Transition\n    name=\"loading-overlay\"\n    enter-active-class=\"loading-overlay-enter-active\"\n    leave-active-class=\"loading-overlay-leave-active\"\n    enter-from-class=\"loading-overlay-enter-from\"\n    leave-to-class=\"loading-overlay-leave-to\"\n  >\n    <div\n      v-if=\"isVisible\"\n      class=\"loading-overlay\"\n      role=\"dialog\"\n      aria-modal=\"true\"\n      :aria-label=\"getLoadingDescription()\"\n      aria-live=\"polite\"\n    >\n      <!-- 🌊 背景遮罩層 (Background Overlay) -->\n      <div class=\"loading-overlay__backdrop\" @click.stop />\n\n      <!-- 📄 載入內容卡片 (Loading Content Card) -->\n      <div class=\"loading-overlay__content\">\n        <!-- ⏳ 載入動畫區域 (Loading Animation Section) -->\n        <div class=\"loading-overlay__spinner-container\">\n          <div\n            class=\"spinner-border mb-3\"\n            :class=\"themeClass\"\n            :style=\"spinnerStyle\"\n            role=\"status\"\n            aria-hidden=\"true\"\n          >\n            <!-- 🔍 無障礙輔助文字 (Screen Reader Text) -->\n            <span class=\"visually-hidden\">{{ loadingText }}</span>\n          </div>\n        </div>\n\n        <!-- 📝 主要載入文字區域 (Primary Loading Text Section) -->\n        <div class=\"loading-overlay__text-container\">\n          <div class=\"loading-overlay__title my-title-lg-black\" id=\"loading-title\">\n            {{ loadingText }}\n          </div>\n\n          <!-- 📝 輔助說明文字 (Secondary Text) -->\n          <p\n            v-if=\"subText\"\n            class=\"loading-overlay__subtitle my-content-xs-gray mt-2 mb-0\"\n            id=\"loading-subtitle\"\n          >\n            {{ subText }}\n          </p>\n        </div>\n\n        <!-- 📊 載入進度條區域 (Loading Progress Section) -->\n        <div v-if=\"shouldShowProgress\" class=\"loading-overlay__progress-container mt-3\">\n          <!-- 📊 進度條標籤 (Progress Label) -->\n          <div\n            class=\"loading-overlay__progress-label d-flex justify-content-between align-items-center mb-2\"\n          >\n            <small class=\"my-content-xs-gray\">載入進度</small>\n            <small class=\"my-content-xs-gray fw-bold\">{{ formattedProgress }}%</small>\n          </div>\n\n          <!-- 📊 Bootstrap 進度條容器 (Bootstrap Progress Container) -->\n          <div\n            class=\"progress loading-overlay__progress-bar\"\n            role=\"progressbar\"\n            :aria-valuenow=\"formattedProgress\"\n            :aria-label=\"getProgressAriaLabel()\"\n            aria-valuemin=\"0\"\n            aria-valuemax=\"100\"\n          >\n            <!-- 📊 進度條滑塊 (Progress Bar) -->\n            <div\n              class=\"progress-bar\"\n              :class=\"progressBarClass\"\n              :style=\"{ width: formattedProgress + '%' }\"\n            >\n              <span class=\"visually-hidden\">{{ formattedProgress }}% 完成</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </Transition>\n</template>\n\n<style scoped>\n  /**\n * =============================================================================\n * 🎨 LoadingOverlay 組件樣式 (LoadingOverlay Component Styles)\n * =============================================================================\n */\n\n  /* 📐 主容器樣式 (Main Container Styles) */\n  .loading-overlay {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    z-index: 9999;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 1rem;\n  }\n\n  /* 🌊 背景遮罩樣式 (Background Overlay Styles) */\n  .loading-overlay__backdrop {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.7);\n    backdrop-filter: blur(2px);\n    -webkit-backdrop-filter: blur(2px);\n  }\n\n  /* 📄 內容卡片樣式 (Content Card Styles) */\n  .loading-overlay__content {\n    position: relative;\n    z-index: 1;\n    background: white;\n    border-radius: 0.75rem;\n    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);\n    padding: 2rem;\n    text-align: center;\n    min-width: 300px;\n    max-width: 400px;\n    width: 100%;\n  }\n\n  /* ⏳ 動畫容器樣式 (Spinner Container Styles) */\n  .loading-overlay__spinner-container {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  /* 📝 文字容器樣式 (Text Container Styles) */\n  .loading-overlay__text-container {\n    margin: 0;\n  }\n\n  .loading-overlay__title {\n    margin: 0 0 0.5rem 0;\n    font-weight: 600;\n    letter-spacing: 0.5px;\n  }\n\n  .loading-overlay__subtitle {\n    margin: 0;\n    line-height: 1.4;\n    opacity: 0.8;\n  }\n\n  /* 📊 進度條容器樣式 (Progress Container Styles) */\n  .loading-overlay__progress-container {\n    width: 100%;\n  }\n\n  .loading-overlay__progress-label {\n    font-size: 0.75rem;\n    margin-bottom: 0.5rem;\n  }\n\n  .loading-overlay__progress-bar {\n    height: 8px;\n    border-radius: 4px;\n    overflow: hidden;\n    background-color: var(--my-color-gray-200);\n  }\n\n  .loading-overlay__progress-bar .progress-bar {\n    transition: width 0.3s ease;\n    border-radius: 4px;\n  }\n\n  /* 🎭 過渡動畫樣式 (Transition Animation Styles) */\n  .loading-overlay-enter-active,\n  .loading-overlay-leave-active {\n    transition: all 0.3s ease;\n  }\n\n  .loading-overlay-enter-active .loading-overlay__content,\n  .loading-overlay-leave-active .loading-overlay__content {\n    transition: all 0.3s ease;\n  }\n\n  .loading-overlay-enter-from,\n  .loading-overlay-leave-to {\n    opacity: 0;\n  }\n\n  .loading-overlay-enter-from .loading-overlay__content,\n  .loading-overlay-leave-to .loading-overlay__content {\n    opacity: 0;\n    transform: scale(0.9) translateY(-20px);\n  }\n\n  /* 📱 響應式樣式 (Responsive Styles) */\n  @media (max-width: 576px) {\n    .loading-overlay__content {\n      min-width: 280px;\n      margin: 1rem;\n      padding: 1.5rem;\n    }\n\n    .loading-overlay__title {\n      font-size: 1rem;\n    }\n  }\n\n  @media (max-width: 360px) {\n    .loading-overlay__content {\n      min-width: 240px;\n      padding: 1.25rem;\n    }\n  }\n\n  /* ♿ 無障礙支援樣式 (Accessibility Styles) */\n  @media (prefers-reduced-motion: reduce) {\n    .loading-overlay-enter-active,\n    .loading-overlay-leave-active,\n    .loading-overlay__progress-bar .progress-bar {\n      transition: none;\n    }\n\n    .spinner-border {\n      animation: none;\n      border-left-color: transparent;\n    }\n  }\n\n  /* 🌙 深色模式支援 (Dark Mode Support) */\n  @media (prefers-color-scheme: dark) {\n    .loading-overlay__content {\n      background: var(--my-color-gray-800, #2d3748);\n      color: var(--my-color-white, #ffffff);\n    }\n\n    .loading-overlay__title {\n      color: var(--my-color-white, #ffffff);\n    }\n\n    .loading-overlay__progress-bar {\n      background-color: var(--my-color-gray-600, #4a5568);\n    }\n  }\n</style>\n","import { render } from \"./LoadingOverlay.vue?vue&type=template&id=430a6fa8&scoped=true\"\nimport script from \"./LoadingOverlay.vue?vue&type=script&lang=js\"\nexport * from \"./LoadingOverlay.vue?vue&type=script&lang=js\"\n\nimport \"./LoadingOverlay.vue?vue&type=style&index=0&id=430a6fa8&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-430a6fa8\"]])\n\nexport default __exports__","<script>\n  /**\n   * LeftView.vue\n   *\n   * Purpose:\n   * - Hosts the left panel including the layer tabs and optional service point detail.\n   * - Provides tab switching functionality between DateLayersTab and ServerLayersTab.\n   *\n   * Notes:\n   * - Updated to support tab system similar to UpperView.vue\n   */\n  import { computed } from 'vue';\n  import { useDataStore } from '../stores/dataStore.js';\n  import DateLayersTab from '../tabs/DateLayersTab.vue';\n  import ServerLayersTab from '../tabs/ServerLayersTab.vue';\n\n  export default {\n    name: 'LeftView',\n\n    /**\n     * 🧩 組件註冊 (Component Registration)\n     * 註冊左側面板內使用的子組件\n     */\n    components: {\n      DateLayersTab, // 日期圖層分頁組件\n      ServerLayersTab, // 伺服器圖層分頁組件\n    },\n\n    /**\n     * 🔧 組件屬性定義 (Component Props)\n     * 接收來自父組件的服務點詳細資訊\n     */\n    props: {\n      selectedServicePoint: {\n        type: Object,\n        default: null,\n      },\n    },\n\n    /**\n     * 📡 組件事件定義 (Component Events)\n     * 定義向父組件發送的事件類型\n     */\n    emits: ['clear-service-point-detail'],\n\n    /**\n     * 🔧 組件設定函數 (Component Setup)\n     * 使用 Composition API 設定組件邏輯\n     */\n    setup(props, { emit }) {\n      // 📦 取得 Pinia 數據存儲實例\n      const dataStore = useDataStore();\n\n      // 📑 分頁狀態管理 (Tab State Management)\n      /** 🗂️ 左側分頁狀態 (從 dataStore 獲取，使用 computed 確保響應式) */\n      const activeLeftTab = computed(() => dataStore.activeLeftTab);\n\n      /**\n       * 📋 清除服務點詳細資訊\n       */\n      const clearServicePointDetail = () => {\n        emit('clear-service-point-detail');\n      };\n\n      /**\n       * 🔄 切換左側分頁\n       * @param {string} tabName - 分頁名稱 ('date' 或 'server')\n       */\n      const switchLeftTab = (tabName) => {\n        dataStore.setActiveLeftTab(tabName);\n        // 切換左側分頁時清空地圖顯示和選中物件\n        dataStore.hideAllLayersOnMap();\n        dataStore.setSelectedFeature(null);\n      };\n\n      // 📤 返回響應式數據給模板使用\n      return {\n        activeLeftTab,\n        switchLeftTab,\n        clearServicePointDetail,\n      };\n    },\n  };\n</script>\n\n<template>\n  <div class=\"my-bgcolor-gray-100 h-100 d-flex flex-column overflow-hidden\">\n    <!-- 📰 頁面標題區域 -->\n    <div class=\"p-3\">\n      <h1 class=\"my-font-size-lg my-letter-spacing-lg text-center m-3\">臺中市長照服務路線</h1>\n\n      <!-- 🎛️ 分頁導航按鈕 (Tab Navigation Buttons) -->\n      <div class=\"d-flex justify-content-center pt-3\">\n        <div class=\"d-flex align-items-center rounded-pill shadow my-blur gap-1 p-2\">\n          <!-- 日期圖層分頁按鈕 -->\n          <button\n            class=\"btn rounded-pill border-0 d-flex align-items-center justify-content-center my-btn-transparent my-font-size-xs\"\n            :class=\"{\n              'my-btn-blue': activeLeftTab === 'date',\n            }\"\n            @click=\"switchLeftTab('date')\"\n            style=\"height: 30px\"\n            title=\"日期圖層\"\n          >\n            <i class=\"fas fa-calendar-day\"></i>\n            <span class=\"ps-2\">服務日期</span>\n          </button>\n\n          <!-- 伺服器圖層分頁按鈕 -->\n          <button\n            class=\"btn rounded-pill border-0 d-flex align-items-center justify-content-center my-btn-transparent my-font-size-xs\"\n            :class=\"{\n              'my-btn-blue': activeLeftTab === 'server',\n            }\"\n            @click=\"switchLeftTab('server')\"\n            style=\"height: 30px\"\n            title=\"伺服器圖層\"\n          >\n            <i class=\"fa-solid fa-user-nurse\"></i>\n            <span class=\"ps-2\">服務人員</span>\n          </button>\n        </div>\n      </div>\n    </div>\n\n    <!-- 📋 分頁內容區域 -->\n    <div class=\"flex-grow-1 overflow-hidden\">\n      <!-- 📅 日期圖層分頁內容 -->\n      <div v-show=\"activeLeftTab === 'date'\" class=\"h-100\">\n        <DateLayersTab />\n      </div>\n\n      <!-- 🖥️ 伺服器圖層分頁內容 -->\n      <div v-show=\"activeLeftTab === 'server'\" class=\"h-100\">\n        <ServerLayersTab />\n      </div>\n\n      <!-- 📋 服務點詳細資訊區域 (Service Point Detail Area) -->\n      <div v-if=\"selectedServicePoint\" class=\"mt-3 p-3 my-bgcolor-white rounded shadow-sm\">\n        <h6 class=\"my-title-sm-black mb-3\">\n          <i class=\"fas fa-info-circle me-2\"></i>\n          服務點詳細資訊\n        </h6>\n\n        <div class=\"row g-2\">\n          <div class=\"col-12\">\n            <div class=\"my-content-xs-gray mb-1\">姓名</div>\n            <div class=\"my-content-sm-black\">\n              {{ selectedServicePoint.servicePointInfo?.name || '無資料' }}\n            </div>\n          </div>\n\n          <div class=\"col-12\">\n            <div class=\"my-content-xs-gray mb-1\">服務地址</div>\n            <div class=\"my-content-sm-black\">\n              {{ selectedServicePoint.servicePointInfo?.address || '無資料' }}\n            </div>\n          </div>\n\n          <div class=\"col-6\">\n            <div class=\"my-content-xs-gray mb-1\">服務時間</div>\n            <div class=\"my-content-sm-black\">\n              {{ selectedServicePoint.servicePointInfo?.time || '無資料' }}\n            </div>\n          </div>\n\n          <div class=\"col-6\">\n            <div class=\"my-content-xs-gray mb-1\">服務項目代碼</div>\n            <div class=\"my-content-sm-black\">\n              {{ selectedServicePoint.servicePointInfo?.serviceType || '無資料' }}\n            </div>\n          </div>\n\n          <div class=\"col-6\">\n            <div class=\"my-content-xs-gray mb-1\">順序</div>\n            <div class=\"my-content-sm-black\">\n              {{ selectedServicePoint.servicePointInfo?.order || '無資料' }}\n            </div>\n          </div>\n\n          <div class=\"col-6\">\n            <div class=\"my-content-xs-gray mb-1\">服務日期</div>\n            <div class=\"my-content-sm-black\">\n              {{ selectedServicePoint.servicePointInfo?.serviceDate || '無資料' }}\n            </div>\n          </div>\n\n          <div class=\"col-12\">\n            <div class=\"my-content-xs-gray mb-1\">座標</div>\n            <div class=\"my-content-sm-black\">\n              {{\n                selectedServicePoint.servicePointInfo?.lat &&\n                selectedServicePoint.servicePointInfo?.lng\n                  ? `${selectedServicePoint.servicePointInfo.lat.toFixed(6)}, ${selectedServicePoint.servicePointInfo.lng.toFixed(6)}`\n                  : '無資料'\n              }}\n            </div>\n          </div>\n        </div>\n\n        <div class=\"mt-3 pt-2 border-top\">\n          <button class=\"btn btn-sm my-btn-outline-primary w-100\" @click=\"clearServicePointDetail\">\n            <i class=\"fas fa-times me-2\"></i>\n            清除資訊\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style scoped></style>\n","<script>\n  /**\n   * DateLayersTab.vue\n   *\n   * Purpose:\n   * - Lists layer groups and layers with visibility toggles.\n   * - Hosts the service-date picker to load day-specific provider layers.\n   *\n   * Notes:\n   * - Refactor only adds comments and headers; behavior and UI unchanged.\n   */\n  import { computed, ref, onMounted } from 'vue';\n  import { useDataStore } from '@/stores/dataStore.js';\n  import { getIcon } from '../utils/utils.js';\n  import DatePicker from '../components/DatePicker.vue';\n\n  export default {\n    name: 'DateLayersTab',\n\n    /**\n     * 🧩 組件註冊 (Component Registration)\n     * 註冊子組件\n     */\n    components: {\n      DatePicker,\n    },\n\n    /**\n     * 🔧 組件設定函數 (Component Setup)\n     * 使用 Composition API 設定組件邏輯\n     */\n    setup() {\n      // 📦 取得 Pinia 數據存儲實例\n      const dataStore = useDataStore();\n\n      // 建立一個 ref 來引用模板中的圖層列表 DOM 元素\n      const layerListRef = ref(null);\n\n      // 建立一個計算屬性，從 store 中獲取圖層數據。當 store 的 state 改變時，這裡會自動更新。\n      const layers = computed(() => dataStore.layers);\n\n      // 📅 日期選擇相關狀態（從 dataStore 獲取）\n      const selectedServiceDate = computed({\n        get: () => dataStore.selectedServiceDate,\n        set: (value) => {\n          if (value) {\n            dataStore.setServiceDateFilter(value);\n          } else {\n            dataStore.clearServiceDateFilter();\n          }\n        },\n      });\n\n      /**\n       * 🔘 切換圖層可見性\n       * 呼叫 store 中的 action 來切換指定圖層的顯示/隱藏狀態\n       * @param {string} layerId - 要切換的圖層 ID\n       */\n      const toggleLayer = (layerId) => {\n        console.log('🔘 DateLayersTab: 切換圖層', layerId);\n        dataStore.toggleLayerVisibility(layerId);\n\n        // 如果是服務人員圖層，設置或清除對應的服務人員\n        if (layerId && layerId.startsWith('service-provider-')) {\n          const layer = dataStore.findLayerById(layerId);\n          if (layer && layer.visible) {\n            // 從圖層 ID 中提取服務人員身分證號碼\n            const serviceProviderId = layerId.replace('service-provider-', '');\n            console.log('🔘 DateLayersTab: 設置服務人員', serviceProviderId);\n            dataStore.selectedServiceProvider = serviceProviderId;\n          } else {\n            // 圖層被關閉時，如果當前選中的服務人員就是這個圖層的，則清除選擇\n            const serviceProviderId = layerId.replace('service-provider-', '');\n            if (dataStore.selectedServiceProvider === serviceProviderId) {\n              console.log('🔘 DateLayersTab: 清除服務人員選擇');\n              dataStore.selectedServiceProvider = '';\n            }\n          }\n        }\n\n        // 如果是服務日期圖層，設置對應的服務日期\n        if (layerId && layerId.startsWith('service-date-')) {\n          const layer = dataStore.findLayerById(layerId);\n          if (layer && layer.visible) {\n            // 從圖層 ID 中提取服務日期\n            const serviceDate = layerId.replace('service-date-', '');\n            console.log('🔘 DateLayersTab: 設置服務日期', serviceDate);\n            dataStore.setServiceDateFilter(serviceDate);\n          } else {\n            // 圖層被關閉時，如果當前選中的服務日期就是這個圖層的，則清除選擇\n            const serviceDate = layerId.replace('service-date-', '');\n            if (dataStore.selectedServiceDate === serviceDate) {\n              console.log('🔘 DateLayersTab: 清除服務日期選擇');\n              dataStore.clearServiceDateFilter();\n            }\n          }\n        }\n      };\n\n      /**\n       * 🔘 切換群組可見性\n       * 呼叫 store 中的 action 來切換指定群組所有圖層的顯示/隱藏狀態\n       * @param {string} groupName - 要切換的群組名稱\n       */\n      const toggleGroup = (groupName) => {\n        console.log('🔘 DateLayersTab: 切換群組', groupName);\n        dataStore.toggleGroupVisibility(groupName);\n      };\n\n      /**\n       * 🎨 獲取圖層顏色 (Get Layer Color)\n       * 確保與地圖上顯示的顏色一致\n       * @param {Object} layer - 圖層物件\n       * @returns {string} CSS 顏色值\n       */\n      const getLayerColor = (layer) => {\n        // 如果是服務人員圖層，從 GeoJSON features 中獲取實際使用的顏色\n        if (layer.layerId && layer.layerId.startsWith('service-provider-') && layer.geoJsonData) {\n          const features = layer.geoJsonData.features || [];\n          if (features.length > 0) {\n            // 優先使用 fillColor，如果沒有則使用 routeColor\n            const firstFeature = features[0];\n            if (firstFeature.properties) {\n              if (firstFeature.properties.fillColor) {\n                return `var(--my-color-${firstFeature.properties.fillColor})`;\n              } else if (firstFeature.properties.routeColor) {\n                return `var(--my-color-${firstFeature.properties.routeColor})`;\n              }\n            }\n          }\n        }\n\n        // 回退到使用 layer.colorName\n        return layer.colorName ? `var(--my-color-${layer.colorName})` : 'var(--my-color-gray-300)';\n      };\n\n      /**\n       * 📅 處理日期選擇事件\n       * @param {string} dateStr - 7碼日期字串 (例如: 1140701)\n       */\n      const handleDateSelected = async (dateStr) => {\n        console.log('📅 DateLayersTab 接收到的日期:', dateStr);\n        console.log('📅 日期長度:', dateStr ? dateStr.length : 'null');\n        console.log('📅 預期的民國年格式:', dateStr);\n\n        // 切換服務日期時清空 right panel\n        dataStore.setSelectedFeature(null);\n\n        if (dateStr) {\n          dataStore.setServiceDateFilter(dateStr);\n          // 載入該日期的服務人員圖層\n          console.log('📅 開始載入服務人員圖層');\n          await dataStore.loadServiceProviderLayers(dateStr);\n        } else {\n          dataStore.clearServiceDateFilter();\n          // 清除所有服務人員圖層\n          dataStore.clearServiceProviderLayers();\n        }\n      };\n\n      /**\n       * 🚀 組件掛載時初始化\n       * 載入預設日期 (7月1日) 的服務人員圖層\n       */\n      onMounted(async () => {\n        console.log('🚀 DateLayersTab 組件掛載，開始載入預設日期數據');\n        // 載入預設日期的服務人員圖層\n        await dataStore.loadServiceProviderLayers('1140701');\n      });\n\n      // 📤 將需要暴露給 <template> 使用的數據和方法返回\n      return {\n        layers,\n        toggleLayer,\n        toggleGroup,\n        isGroupVisible: dataStore.isGroupVisible,\n        layerListRef,\n        getIcon,\n        getLayerColor,\n        // 📅 日期選擇相關\n        selectedServiceDate,\n        handleDateSelected,\n        isDateFilterActive: computed(() => dataStore.isDateFilterActive),\n      };\n    },\n  };\n</script>\n\n<template>\n  <div class=\"h-100 d-flex flex-column overflow-hidden my-bgcolor-gray-100\">\n    <div class=\"flex-grow-1 overflow-auto layer-list-container\" ref=\"layerListRef\">\n      <div class=\"mb-3\">\n        <!-- 📅 服務日期選擇區域 -->\n        <div class=\"p-3\">\n          <div class=\"mb-2\">\n            <div class=\"my-title-xs-gray mb-1\">選擇服務日期</div>\n            <DatePicker\n              v-model=\"selectedServiceDate\"\n              placeholder=\"選擇服務日期\"\n              @date-selected=\"handleDateSelected\"\n            />\n          </div>\n        </div>\n\n        <div\n          v-for=\"group in layers.filter((g) => g.groupName === '服務人員列表')\"\n          :key=\"group.groupName\"\n          class=\"p-3\"\n        >\n          <div class=\"d-flex align-items-center pb-2\">\n            <div class=\"my-title-xs-gray\">\n              {{ group.groupName }}\n              <span v-if=\"group.groupLayers.length > 0\"> ({{ group.groupLayers.length }}) </span>\n            </div>\n            <!-- 群組開關 - 有圖層時才顯示 -->\n            <div\n              v-if=\"group.groupLayers.length > 0\"\n              class=\"d-flex align-items-center justify-content-center ms-auto\"\n            >\n              <input\n                type=\"checkbox\"\n                :id=\"'group-switch-' + group.groupName\"\n                :checked=\"isGroupVisible(group.groupName)\"\n                @change=\"toggleGroup(group.groupName)\"\n              />\n              <label\n                :for=\"'group-switch-' + group.groupName\"\n                :style=\"{\n                  '--layer-color': 'var(--my-color-green)',\n                }\"\n              ></label>\n            </div>\n          </div>\n\n          <div v-for=\"layer in group.groupLayers\" :key=\"layer.layerId\" class=\"mb-1\">\n            <!-- 圖層卡片 -->\n            <div\n              class=\"btn rounded-0 border-0 d-flex shadow-sm my-bgcolor-white-hover p-0\"\n              @click=\"toggleLayer(layer.layerId)\"\n            >\n              <!-- 圖層圖示 -->\n              <div\n                class=\"d-flex\"\n                :style=\"{\n                  backgroundColor: getLayerColor(layer),\n                  minWidth: '6px',\n                }\"\n              ></div>\n              <div class=\"w-100\">\n                <div class=\"d-flex\">\n                  <!-- 圖層名稱 -->\n                  <div class=\"d-flex align-items-center text-start w-100 px-3 py-2\">\n                    <span class=\"my-content-sm-black\">\n                      {{ layer.layerName }}\n                      <span class=\"my-content-xs-gray ms-2\">\n                        {{ layer.summaryData?.totalCount }}\n                      </span>\n                    </span>\n                  </div>\n                  <!-- 切換圖層可見性 -->\n                  <div class=\"d-flex align-items-center justify-content-center px-3 py-2\">\n                    <input\n                      type=\"checkbox\"\n                      :id=\"'switch-' + layer.layerId\"\n                      :checked=\"layer.visible\"\n                      :disabled=\"layer.isLoading\"\n                      @change=\"toggleLayer(layer.layerId)\"\n                    />\n                    <label\n                      :for=\"'switch-' + layer.layerId\"\n                      :style=\"{\n                        '--layer-color': 'var(--my-color-green)',\n                      }\"\n                    ></label>\n                  </div>\n                </div>\n                <div v-if=\"layer.legendData && layer.visible\" class=\"px-3 pb-2\">\n                  <div\n                    v-for=\"data in layer.legendData\"\n                    :key=\"data.color\"\n                    class=\"d-flex align-items-center\"\n                  >\n                    <div\n                      style=\"min-width: 6px; min-height: 18px\"\n                      :style=\"{\n                        backgroundColor: data.color,\n                      }\"\n                    ></div>\n                    <div class=\"my-content-xs-black text-nowrap ms-2\">{{ data.label }}</div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n  /* 🎨 圖層切換開關樣式 (Layer Toggle Switch Styles) */\n  /* https://www.tpisoftware.com/tpu/articleDetails/2744 */\n\n  input[type='checkbox'] {\n    height: 0;\n    width: 0;\n    visibility: hidden;\n  }\n\n  label {\n    cursor: pointer;\n    width: 28px;\n    height: 16px;\n    background: var(--my-color-gray-300);\n    display: block;\n    border-radius: 16px;\n    position: relative;\n    transition: background-color 0.3s cubic-bezier(0.4, 0, 0.2, 1); /* 優化背景色過渡 */\n  }\n\n  label:after {\n    content: '';\n    position: absolute;\n    top: 2px;\n    left: 2px;\n    width: 12px;\n    height: 12px;\n    background: var(--my-color-white);\n    border-radius: 12px;\n    transition: transform 0.2s cubic-bezier(0.4, 0, 0.2, 1); /* 優化滑動過渡 */\n  }\n\n  input:checked + label {\n    background: var(--layer-color, var(--my-color-green));\n  }\n\n  input:checked + label:after {\n    transform: translateX(12px);\n  }\n</style>\n","/**\n * =============================================================================\n * 🎨 圖標配置系統 (Icon Configuration System)\n * =============================================================================\n *\n * 統一管理應用程式中使用的所有圖標，支援多語言和 FontAwesome 圖標庫\n *\n * 特性：\n * - 🌍 多語言支援 (中文/英文)\n * - 🎯 類型安全的圖標定義\n * - 📦 統一的圖標管理\n * - 🔍 圖標查詢和驗證\n *\n * @author 長期照護資源分析系統團隊\n * @version 2.0.0\n */\n\n/**\n * @typedef {Object} IconDefinition\n * @property {string} zh - 中文顯示名稱\n * @property {string} en - 英文顯示名稱\n * @property {string} icon - FontAwesome CSS 類名\n * @property {string} [category] - 圖標分類（可選）\n * @property {string} [description] - 圖標描述（可選）\n */\n\n/**\n * 圖標配置對象\n * 按功能分類組織，便於維護和查找\n */\nexport const ICONS = Object.freeze({\n  // =============================================================================\n  // 🔧 基本操作圖標 (Basic Action Icons)\n  // =============================================================================\n  add: {\n    zh: '新增',\n    en: 'Add',\n    icon: 'fas fa-plus',\n    category: 'action',\n    description: '新增項目或資料',\n  },\n  edit: {\n    zh: '編輯',\n    en: 'Edit',\n    icon: 'fas fa-edit',\n    category: 'action',\n    description: '編輯現有項目',\n  },\n  delete: {\n    zh: '刪除',\n    en: 'Delete',\n    icon: 'fas fa-trash',\n    category: 'action',\n    description: '刪除項目',\n  },\n  save: {\n    zh: '儲存',\n    en: 'Save',\n    icon: 'fas fa-save',\n    category: 'action',\n    description: '儲存變更',\n  },\n  cancel: {\n    zh: '取消',\n    en: 'Cancel',\n    icon: 'fas fa-times',\n    category: 'action',\n    description: '取消操作',\n  },\n  confirm: {\n    zh: '確認',\n    en: 'Confirm',\n    icon: 'fas fa-check',\n    category: 'action',\n    description: '確認操作',\n  },\n  search: {\n    zh: '搜尋',\n    en: 'Search',\n    icon: 'fas fa-search',\n    category: 'action',\n    description: '搜尋功能',\n  },\n  filter: {\n    zh: '篩選',\n    en: 'Filter',\n    icon: 'fas fa-filter',\n    category: 'action',\n    description: '資料篩選',\n  },\n  sort: {\n    zh: '排序',\n    en: 'Sort',\n    icon: 'fas fa-sort',\n    category: 'action',\n    description: '資料排序',\n  },\n  refresh: {\n    zh: '重新整理',\n    en: 'Refresh',\n    icon: 'fas fa-sync-alt',\n    category: 'action',\n    description: '重新載入資料',\n  },\n\n  // =============================================================================\n  // 📁 檔案操作圖標 (File Operation Icons)\n  // =============================================================================\n  upload: {\n    zh: '上傳',\n    en: 'Upload',\n    icon: 'fas fa-upload',\n    category: 'file',\n    description: '上傳檔案',\n  },\n  download: {\n    zh: '下載',\n    en: 'Download',\n    icon: 'fas fa-download',\n    category: 'file',\n    description: '下載檔案',\n  },\n  import: {\n    zh: '匯入',\n    en: 'Import',\n    icon: 'fas fa-file-import',\n    category: 'file',\n    description: '匯入資料',\n  },\n  export: {\n    zh: '匯出',\n    en: 'Export',\n    icon: 'fas fa-file-export',\n    category: 'file',\n    description: '匯出資料',\n  },\n  folder: {\n    zh: '資料夾',\n    en: 'Folder',\n    icon: 'fas fa-folder',\n    category: 'file',\n    description: '檔案資料夾',\n  },\n  folder_open: {\n    zh: '開啟資料夾',\n    en: 'Open Folder',\n    icon: 'fas fa-folder-open',\n    category: 'file',\n    description: '開啟的資料夾',\n  },\n  file: {\n    zh: '檔案',\n    en: 'File',\n    icon: 'fas fa-file',\n    category: 'file',\n    description: '一般檔案',\n  },\n\n  // =============================================================================\n  // 🧭 導航圖標 (Navigation Icons)\n  // =============================================================================\n  home: {\n    zh: '首頁',\n    en: 'Home',\n    icon: 'fas fa-home',\n    category: 'navigation',\n    description: '返回首頁',\n  },\n  back: {\n    zh: '返回',\n    en: 'Back',\n    icon: 'fas fa-arrow-left',\n    category: 'navigation',\n    description: '返回上一頁',\n  },\n  forward: {\n    zh: '前進',\n    en: 'Forward',\n    icon: 'fas fa-arrow-right',\n    category: 'navigation',\n    description: '前往下一頁',\n  },\n  up: {\n    zh: '向上',\n    en: 'Up',\n    icon: 'fas fa-arrow-up',\n    category: 'navigation',\n    description: '向上移動',\n  },\n  down: {\n    zh: '向下',\n    en: 'Down',\n    icon: 'fas fa-arrow-down',\n    category: 'navigation',\n    description: '向下移動',\n  },\n\n  // =============================================================================\n  // ⚠️ 狀態圖標 (Status Icons)\n  // =============================================================================\n  success: {\n    zh: '成功',\n    en: 'Success',\n    icon: 'fas fa-check-circle',\n    category: 'status',\n    description: '操作成功',\n  },\n  error: {\n    zh: '錯誤',\n    en: 'Error',\n    icon: 'fas fa-exclamation-circle',\n    category: 'status',\n    description: '發生錯誤',\n  },\n  warning: {\n    zh: '警告',\n    en: 'Warning',\n    icon: 'fas fa-exclamation-triangle',\n    category: 'status',\n    description: '警告訊息',\n  },\n  info: {\n    zh: '資訊',\n    en: 'Info',\n    icon: 'fas fa-info-circle',\n    category: 'status',\n    description: '資訊提示',\n  },\n  loading: {\n    zh: '載入中',\n    en: 'Loading',\n    icon: 'fas fa-spinner',\n    category: 'status',\n    description: '載入狀態',\n  },\n\n  // =============================================================================\n  // 👁️ 視圖控制圖標 (View Control Icons)\n  // =============================================================================\n  view: {\n    zh: '檢視',\n    en: 'View',\n    icon: 'fas fa-eye',\n    category: 'view',\n    description: '顯示項目',\n  },\n  hide: {\n    zh: '隱藏',\n    en: 'Hide',\n    icon: 'fas fa-eye-slash',\n    category: 'view',\n    description: '隱藏項目',\n  },\n  expand: {\n    zh: '展開',\n    en: 'Expand',\n    icon: 'fas fa-expand',\n    category: 'view',\n    description: '展開視圖',\n  },\n  collapse: {\n    zh: '收縮',\n    en: 'Collapse',\n    icon: 'fas fa-compress',\n    category: 'view',\n    description: '收縮視圖',\n  },\n\n  // =============================================================================\n  // 📂 圖層和資料相關圖標 (Layer & Data Icons)\n  // =============================================================================\n  layer: {\n    zh: '圖層',\n    en: 'Layer',\n    icon: 'fas fa-layer-group',\n    category: 'data',\n    description: '地圖圖層',\n  },\n  visible: {\n    zh: '可見',\n    en: 'Visible',\n    icon: 'fas fa-eye',\n    category: 'data',\n    description: '可見狀態',\n  },\n  hidden: {\n    zh: '隱藏',\n    en: 'Hidden',\n    icon: 'fas fa-eye-slash',\n    category: 'data',\n    description: '隱藏狀態',\n  },\n  data: {\n    zh: '資料',\n    en: 'Data',\n    icon: 'fas fa-database',\n    category: 'data',\n    description: '資料庫資料',\n  },\n  table: {\n    zh: '表格',\n    en: 'Table',\n    icon: 'fas fa-table',\n    category: 'data',\n    description: '資料表格',\n  },\n\n  // =============================================================================\n  // 🗺️ 地圖相關圖標 (Map Icons)\n  // =============================================================================\n  map: {\n    zh: '地圖',\n    en: 'Map',\n    icon: 'fas fa-map',\n    category: 'map',\n    description: '地圖視圖',\n  },\n  location: {\n    zh: '位置',\n    en: 'Location',\n    icon: 'fas fa-map-marker-alt',\n    category: 'map',\n    description: '地理位置',\n  },\n  zoom_in: {\n    zh: '放大',\n    en: 'Zoom In',\n    icon: 'fas fa-search-plus',\n    category: 'map',\n    description: '放大地圖',\n  },\n  zoom_out: {\n    zh: '縮小',\n    en: 'Zoom Out',\n    icon: 'fas fa-search-minus',\n    category: 'map',\n    description: '縮小地圖',\n  },\n  center: {\n    zh: '居中',\n    en: 'Center',\n    icon: 'fas fa-crosshairs',\n    category: 'map',\n    description: '地圖居中',\n  },\n\n  // =============================================================================\n  // 📊 分析和統計圖標 (Analysis & Statistics Icons)\n  // =============================================================================\n  chart: {\n    zh: '圖表',\n    en: 'Chart',\n    icon: 'fas fa-chart-bar',\n    category: 'analysis',\n    description: '圖表展示',\n  },\n  statistics: {\n    zh: '統計',\n    en: 'Statistics',\n    icon: 'fas fa-chart-line',\n    category: 'analysis',\n    description: '統計分析',\n  },\n  dashboard: {\n    zh: '儀表板',\n    en: 'Dashboard',\n    icon: 'fas fa-tachometer-alt',\n    category: 'analysis',\n    description: '資料儀表板',\n  },\n  analysis: {\n    zh: '分析',\n    en: 'Analysis',\n    icon: 'fas fa-analytics',\n    category: 'analysis',\n    description: '資料分析',\n  },\n\n  // =============================================================================\n  // 🏥 醫療相關圖標 (Medical Icons)\n  // =============================================================================\n  hospital: {\n    zh: '醫院',\n    en: 'Hospital',\n    icon: 'fas fa-hospital',\n    category: 'medical',\n    description: '醫院機構',\n  },\n  clinic: {\n    zh: '診所',\n    en: 'Clinic',\n    icon: 'fas fa-clinic-medical',\n    category: 'medical',\n    description: '診所機構',\n  },\n  pharmacy: {\n    zh: '藥局',\n    en: 'Pharmacy',\n    icon: 'fas fa-pills',\n    category: 'medical',\n    description: '藥局機構',\n  },\n  elderly_care: {\n    zh: '長照',\n    en: 'Elderly Care',\n    icon: 'fas fa-hands-helping',\n    category: 'medical',\n    description: '長期照護',\n  },\n  medical: {\n    zh: '醫療',\n    en: 'Medical',\n    icon: 'fas fa-user-md',\n    category: 'medical',\n    description: '醫療服務',\n  },\n\n  // =============================================================================\n  // 👥 人口和社會圖標 (Population & Social Icons)\n  // =============================================================================\n  population: {\n    zh: '人口',\n    en: 'Population',\n    icon: 'fas fa-users',\n    category: 'social',\n    description: '人口資料',\n  },\n  demographics: {\n    zh: '人口統計',\n    en: 'Demographics',\n    icon: 'fas fa-user-friends',\n    category: 'social',\n    description: '人口統計資料',\n  },\n  community: {\n    zh: '社區',\n    en: 'Community',\n    icon: 'fas fa-home',\n    category: 'social',\n    description: '社區資訊',\n  },\n\n  // =============================================================================\n  // 💰 經濟相關圖標 (Economic Icons)\n  // =============================================================================\n  income: {\n    zh: '收入',\n    en: 'Income',\n    icon: 'fas fa-dollar-sign',\n    category: 'economic',\n    description: '收入資料',\n  },\n  tax: {\n    zh: '稅收',\n    en: 'Tax',\n    icon: 'fas fa-file-invoice-dollar',\n    category: 'economic',\n    description: '稅收資料',\n  },\n\n  // =============================================================================\n  // 🎛️ 操作和控制圖標 (Control & Action Icons)\n  // =============================================================================\n  drag: {\n    zh: '拖拉',\n    en: 'Drag',\n    icon: 'fa-solid fa-grip-lines-vertical',\n    category: 'control',\n    description: '拖拽控制',\n  },\n  move_up: {\n    zh: '上移',\n    en: 'Move Up',\n    icon: 'fas fa-arrow-up',\n    category: 'control',\n    description: '向上移動',\n  },\n  move_down: {\n    zh: '下移',\n    en: 'Move Down',\n    icon: 'fas fa-arrow-down',\n    category: 'control',\n    description: '向下移動',\n  },\n  reset: {\n    zh: '重設',\n    en: 'Reset',\n    icon: 'fas fa-undo',\n    category: 'control',\n    description: '重設設定',\n  },\n\n  // =============================================================================\n  // ⚙️ 設定和配置圖標 (Settings & Configuration Icons)\n  // =============================================================================\n  settings: {\n    zh: '設定',\n    en: 'Settings',\n    icon: 'fas fa-cog',\n    category: 'settings',\n    description: '系統設定',\n  },\n  sort_up: {\n    zh: '升序',\n    en: 'Sort Ascending',\n    icon: 'fas fa-sort-up',\n    category: 'settings',\n    description: '升序排列',\n  },\n  sort_down: {\n    zh: '降序',\n    en: 'Sort Descending',\n    icon: 'fas fa-sort-down',\n    category: 'settings',\n    description: '降序排列',\n  },\n\n  // =============================================================================\n  // 📱 介面元素圖標 (UI Element Icons)\n  // =============================================================================\n  menu: {\n    zh: '選單',\n    en: 'Menu',\n    icon: 'fas fa-bars',\n    category: 'ui',\n    description: '選單按鈕',\n  },\n  close: {\n    zh: '關閉',\n    en: 'Close',\n    icon: 'fas fa-times',\n    category: 'ui',\n    description: '關閉按鈕',\n  },\n});\n\n// =================================================================================\n// 🛠️ 圖標系統輔助函數 (Icon System Helper Functions)\n// =================================================================================\n\n/**\n * 根據鍵名獲取圖標資訊\n *\n * @param {string} iconKey - 圖標鍵名\n * @param {('zh'|'en')} [lang='zh'] - 語言代碼\n * @returns {{text: string, icon: string, category?: string, description?: string}} 圖標資訊物件\n *\n * @example\n * // 獲取中文圖標\n * const icon = getIcon('add', 'zh');\n * // 返回: { text: '新增', icon: 'fas fa-plus', category: 'action', description: '新增項目或資料' }\n */\nexport function getIcon(iconKey, lang = 'zh') {\n  const iconInfo = ICONS[iconKey];\n\n  if (!iconInfo) {\n    console.warn(`🎨 找不到圖標定義: ${iconKey}`);\n    return {\n      text: iconKey,\n      icon: 'fas fa-question-circle',\n      category: 'unknown',\n      description: `未定義的圖標: ${iconKey}`,\n    };\n  }\n\n  return {\n    text: iconInfo[lang] || iconInfo.zh,\n    icon: iconInfo.icon,\n    category: iconInfo.category,\n    description: iconInfo.description,\n  };\n}\n\n/**\n * 檢查圖標是否存在\n *\n * @param {string} iconKey - 圖標鍵名\n * @returns {boolean} 是否存在該圖標\n */\nexport function hasIcon(iconKey) {\n  return Object.prototype.hasOwnProperty.call(ICONS, iconKey);\n}\n\n/**\n * 根據分類獲取圖標清單\n *\n * @param {string} category - 圖標分類\n * @returns {Array<{key: string, ...IconDefinition}>} 該分類的所有圖標\n */\nexport function getIconsByCategory(category) {\n  return Object.entries(ICONS)\n    .filter(([, iconInfo]) => iconInfo.category === category)\n    .map(([key, iconInfo]) => ({ key, ...iconInfo }));\n}\n\n/**\n * 獲取所有圖標分類\n *\n * @returns {Array<string>} 所有分類名稱\n */\nexport function getIconCategories() {\n  const categories = new Set();\n  Object.values(ICONS).forEach((iconInfo) => {\n    if (iconInfo.category) {\n      categories.add(iconInfo.category);\n    }\n  });\n  return Array.from(categories).sort();\n}\n\n// =================================================================================\n// 🔧 通用工具函數 (General Utility Functions)\n// =================================================================================\n\n/**\n * 深度複製物件\n *\n * @param {any} obj - 要複製的物件\n * @returns {any} 深度複製後的物件\n */\nexport function deepClone(obj) {\n  if (obj === null || typeof obj !== 'object') {\n    return obj;\n  }\n\n  if (obj instanceof Date) {\n    return new Date(obj.getTime());\n  }\n\n  if (obj instanceof Array) {\n    return obj.map((item) => deepClone(item));\n  }\n\n  if (typeof obj === 'object') {\n    const clonedObj = {};\n    for (const key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        clonedObj[key] = deepClone(obj[key]);\n      }\n    }\n    return clonedObj;\n  }\n\n  return obj;\n}\n\n/**\n * 防抖函數\n *\n * @param {Function} func - 要執行的函數\n * @param {number} wait - 延遲時間（毫秒）\n * @param {boolean} [immediate=false] - 是否立即執行第一次\n * @returns {Function} 防抖處理後的函數\n */\nexport function debounce(func, wait, immediate = false) {\n  let timeout;\n  return function executedFunction(...args) {\n    const later = () => {\n      timeout = null;\n      if (!immediate) func.apply(this, args);\n    };\n    const callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) func.apply(this, args);\n  };\n}\n\n/**\n * 節流函數\n *\n * @param {Function} func - 要執行的函數\n * @param {number} limit - 時間間隔（毫秒）\n * @returns {Function} 節流處理後的函數\n */\nexport function throttle(func, limit) {\n  let inThrottle;\n  return function (...args) {\n    if (!inThrottle) {\n      func.apply(this, args);\n      inThrottle = true;\n      setTimeout(() => (inThrottle = false), limit);\n    }\n  };\n}\n\n/**\n * 格式化數字，添加千分位分隔符\n *\n * @param {number|string} num - 要格式化的數字\n * @param {string} [separator=','] - 分隔符\n * @returns {string} 格式化後的數字字串\n */\nexport function formatNumber(num, separator = ',') {\n  if (num === null || num === undefined || num === '') {\n    return '';\n  }\n\n  const numStr = String(num);\n  const [integerPart, decimalPart] = numStr.split('.');\n\n  const formattedInteger = integerPart.replace(/\\B(?=(\\d{3})+(?!\\d))/g, separator);\n\n  return decimalPart ? `${formattedInteger}.${decimalPart}` : formattedInteger;\n}\n\n/**\n * 將數字轉換為百分比格式\n *\n * @param {number} num - 數值 (0-1 或 0-100)\n * @param {number} [decimals=1] - 小數位數\n * @param {boolean} [isPercent=false] - 輸入是否已經是百分比格式\n * @returns {string} 百分比字串\n */\nexport function formatPercentage(num, decimals = 1, isPercent = false) {\n  if (num === null || num === undefined || isNaN(num)) {\n    return '0%';\n  }\n\n  const value = isPercent ? num : num * 100;\n  return `${value.toFixed(decimals)}%`;\n}\n\n// =================================================================================\n// 📅 日期時間工具函數 (Date & Time Utilities)\n// =================================================================================\n\n/**\n * 格式化日期\n *\n * @param {Date|string|number} date - 日期物件、字串或時間戳\n * @param {string} [format='YYYY-MM-DD'] - 日期格式\n * @returns {string} 格式化後的日期字串\n */\nexport function formatDate(date, format = 'YYYY-MM-DD') {\n  if (!date) return '';\n\n  const d = new Date(date);\n  if (isNaN(d.getTime())) return '';\n\n  const year = d.getFullYear();\n  const month = String(d.getMonth() + 1).padStart(2, '0');\n  const day = String(d.getDate()).padStart(2, '0');\n  const hours = String(d.getHours()).padStart(2, '0');\n  const minutes = String(d.getMinutes()).padStart(2, '0');\n  const seconds = String(d.getSeconds()).padStart(2, '0');\n\n  return format\n    .replace('YYYY', year)\n    .replace('MM', month)\n    .replace('DD', day)\n    .replace('HH', hours)\n    .replace('mm', minutes)\n    .replace('ss', seconds);\n}\n\n/**\n * 計算兩個日期間的天數差\n *\n * @param {Date|string} startDate - 開始日期\n * @param {Date|string} endDate - 結束日期\n * @returns {number} 天數差\n */\nexport function daysDifference(startDate, endDate) {\n  const start = new Date(startDate);\n  const end = new Date(endDate);\n  const timeDiff = end.getTime() - start.getTime();\n  return Math.ceil(timeDiff / (1000 * 60 * 60 * 24));\n}\n\n// =================================================================================\n// 🎨 UI 工具函數 (UI Utilities)\n// =================================================================================\n\n/**\n * 生成隨機 ID\n *\n * @param {string} [prefix=''] - ID 前綴\n * @param {number} [length=8] - 隨機部分長度\n * @returns {string} 隨機 ID\n */\nexport function generateId(prefix = '', length = 8) {\n  const chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n  let result = '';\n  for (let i = 0; i < length; i++) {\n    result += chars.charAt(Math.floor(Math.random() * chars.length));\n  }\n  return prefix + result;\n}\n\n/**\n * 安全地解析 JSON\n *\n * @param {string} jsonString - JSON 字串\n * @param {any} [defaultValue=null] - 解析失敗時的預設值\n * @returns {any} 解析結果或預設值\n */\nexport function safeJsonParse(jsonString, defaultValue = null) {\n  try {\n    return JSON.parse(jsonString);\n  } catch (error) {\n    console.warn('🔧 JSON 解析失敗:', error.message);\n    return defaultValue;\n  }\n}\n\n/**\n * 將物件轉換為 URL 參數字串\n *\n * @param {Object} params - 參數物件\n * @returns {string} URL 參數字串\n */\nexport function objectToUrlParams(params) {\n  return Object.entries(params)\n    .filter(([, value]) => value !== null && value !== undefined && value !== '')\n    .map(([key, value]) => `${encodeURIComponent(key)}=${encodeURIComponent(value)}`)\n    .join('&');\n}\n\n/**\n * 檢查值是否為空（null, undefined, '', [], {}）\n *\n * @param {any} value - 要檢查的值\n * @returns {boolean} 是否為空\n */\nexport function isEmpty(value) {\n  if (value === null || value === undefined || value === '') {\n    return true;\n  }\n\n  if (Array.isArray(value)) {\n    return value.length === 0;\n  }\n\n  if (typeof value === 'object') {\n    return Object.keys(value).length === 0;\n  }\n\n  return false;\n}\n\n// =================================================================================\n// 📍 地理空間工具函數 (Geospatial Utilities)\n// =================================================================================\n\n/**\n * 使用 Haversine 公式計算兩點間距離\n *\n * @param {number} lat1 - 第一個點的緯度\n * @param {number} lng1 - 第一個點的經度\n * @param {number} lat2 - 第二個點的緯度\n * @param {number} lng2 - 第二個點的經度\n * @returns {number} 距離（公尺）\n */\nexport function calculateDistance(lat1, lng1, lat2, lng2) {\n  const R = 6371000; // 地球半徑（公尺）\n  const dLat = toRadians(lat2 - lat1);\n  const dLng = toRadians(lng2 - lng1);\n\n  const a =\n    Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n    Math.cos(toRadians(lat1)) * Math.cos(toRadians(lat2)) * Math.sin(dLng / 2) * Math.sin(dLng / 2);\n\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n\n  return R * c;\n}\n\n/**\n * 角度轉弧度\n *\n * @param {number} degrees - 角度\n * @returns {number} 弧度\n */\nexport function toRadians(degrees) {\n  return degrees * (Math.PI / 180);\n}\n\n/**\n * 弧度轉角度\n *\n * @param {number} radians - 弧度\n * @returns {number} 角度\n */\nexport function toDegrees(radians) {\n  return radians * (180 / Math.PI);\n}\n\n/**\n * 格式化距離顯示\n *\n * @param {number} meters - 距離（公尺）\n * @param {number} [decimals=1] - 小數位數\n * @returns {string} 格式化的距離字串\n */\nexport function formatDistance(meters, decimals = 1) {\n  if (meters < 1000) {\n    return `${Math.round(meters)} 公尺`;\n  } else {\n    return `${(meters / 1000).toFixed(decimals)} 公里`;\n  }\n}\n\n// =================================================================================\n// 🎯 資料驗證工具函數 (Data Validation Utilities)\n// =================================================================================\n\n/**\n * 檢查是否為有效的經緯度座標\n *\n * @param {number} lat - 緯度\n * @param {number} lng - 經度\n * @returns {boolean} 是否為有效座標\n */\nexport function isValidCoordinate(lat, lng) {\n  return (\n    typeof lat === 'number' &&\n    typeof lng === 'number' &&\n    lat >= -90 &&\n    lat <= 90 &&\n    lng >= -180 &&\n    lng <= 180 &&\n    !isNaN(lat) &&\n    !isNaN(lng)\n  );\n}\n\n/**\n * 檢查是否為有效的電子郵件地址\n *\n * @param {string} email - 電子郵件地址\n * @returns {boolean} 是否為有效郵件\n */\nexport function isValidEmail(email) {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return emailRegex.test(email);\n}\n\n/**\n * 檢查是否為有效的網址\n *\n * @param {string} url - 網址\n * @returns {boolean} 是否為有效網址\n */\nexport function isValidUrl(url) {\n  try {\n    new URL(url);\n    return true;\n  } catch {\n    return false;\n  }\n}\n","<script>\n  /**\n   * DatePicker.vue\n   *\n   * Purpose:\n   * - Minimal calendar for selecting a 7-digit ROC date string (YYYMMDD).\n   * - Month navigation is disabled by design; fixed to 2025/07.\n   *\n   * Notes:\n   * - Non-functional documentation only; no behavior or layout changes.\n   */\n  import { ref, computed, watch, onMounted, onUnmounted } from 'vue';\n\n  export default {\n    name: 'DatePicker',\n\n    props: {\n      modelValue: {\n        type: String,\n        default: '',\n      },\n      placeholder: {\n        type: String,\n        default: '選擇服務日期',\n      },\n    },\n\n    emits: ['update:modelValue', 'date-selected'],\n\n    setup(props, { emit }) {\n      // 響應式數據\n      const isOpen = ref(false);\n      const selectedDate = ref(props.modelValue || '');\n      // 固定為 2025 年 7 月\n      const currentYear = ref(2025);\n      const currentMonth = ref(7);\n\n      // 計算屬性\n\n      const calendarDays = computed(() => {\n        const year = currentYear.value;\n        const month = currentMonth.value;\n        const firstDay = new Date(year, month - 1, 1).getDay();\n        const daysInMonth = new Date(year, month, 0).getDate();\n        const days = [];\n\n        // 添加空白天數（上個月的天數）\n        for (let i = 0; i < firstDay; i++) {\n          days.push({ day: '', isCurrentMonth: false });\n        }\n\n        // 添加當月的天數\n        for (let day = 1; day <= daysInMonth; day++) {\n          const dateStr = formatDateTo7Digits(year, month, day);\n          days.push({\n            day,\n            isCurrentMonth: true,\n            isSelected: dateStr === selectedDate.value,\n            dateStr,\n          });\n        }\n\n        return days;\n      });\n\n      // 方法\n      const formatDateTo7Digits = (year, month, day) => {\n        const republicanYear = (year - 1911).toString().padStart(3, '0'); // 西元年轉民國年\n        const monthStr = month.toString().padStart(2, '0');\n        const dayStr = day.toString().padStart(2, '0');\n        return `${republicanYear}${monthStr}${dayStr}`;\n      };\n\n      const parse7DigitsDate = (dateStr) => {\n        if (dateStr.length === 7) {\n          const republicanYear = parseInt(dateStr.substring(0, 3));\n          const year = republicanYear + 1911; // 民國年轉西元年\n          const month = parseInt(dateStr.substring(3, 5));\n          const day = parseInt(dateStr.substring(5, 7));\n          return { year, month, day };\n        }\n        return null;\n      };\n\n      const toggleCalendar = () => {\n        isOpen.value = !isOpen.value;\n        if (isOpen.value && selectedDate.value) {\n          const parsed = parse7DigitsDate(selectedDate.value);\n          if (parsed) {\n            currentYear.value = parsed.year;\n            currentMonth.value = parsed.month;\n          }\n        }\n      };\n\n      const selectDate = (day) => {\n        if (day.isCurrentMonth && day.day) {\n          const dateStr = formatDateTo7Digits(currentYear.value, currentMonth.value, day.day);\n          selectedDate.value = dateStr;\n          emit('update:modelValue', dateStr);\n          emit('date-selected', dateStr);\n          isOpen.value = false;\n        }\n      };\n\n      // 禁用月份切換功能，固定為 2025 年 7 月\n      const previousMonth = () => {\n        // 不執行任何操作\n      };\n\n      const nextMonth = () => {\n        // 不執行任何操作\n      };\n\n      const closeCalendar = (event) => {\n        if (!event.target.closest('.date-picker-container')) {\n          isOpen.value = false;\n        }\n      };\n\n      // 監聽器\n      watch(\n        () => props.modelValue,\n        (newValue) => {\n          selectedDate.value = newValue || '';\n        }\n      );\n\n      // 生命週期\n      onMounted(() => {\n        document.addEventListener('click', closeCalendar);\n      });\n\n      onUnmounted(() => {\n        document.removeEventListener('click', closeCalendar);\n      });\n\n      return {\n        isOpen,\n        selectedDate,\n        currentYear,\n        currentMonth,\n        calendarDays,\n        toggleCalendar,\n        selectDate,\n        previousMonth,\n        nextMonth,\n      };\n    },\n  };\n</script>\n\n<template>\n  <div class=\"date-picker-container\">\n    <!-- 日曆 -->\n    <div class=\"calendar-container bg-white border rounded shadow-sm p-2\">\n      <!-- 日曆標題 -->\n      <div class=\"calendar-header d-flex justify-content-center align-items-center mb-2\">\n        <h6 class=\"mb-0 my-font-size-sm\">{{ currentYear }}年{{ currentMonth }}月</h6>\n      </div>\n\n      <!-- 星期標題 -->\n      <div class=\"calendar-weekdays d-flex mb-1\">\n        <div\n          v-for=\"day in ['日', '一', '二', '三', '四', '五', '六']\"\n          :key=\"day\"\n          class=\"calendar-weekday text-center my-font-size-xs my-title-xs-gray\"\n          style=\"flex: 1; padding: 4px 2px\"\n        >\n          {{ day }}\n        </div>\n      </div>\n\n      <!-- 日期格子 -->\n      <div class=\"calendar-days\">\n        <div\n          v-for=\"(day, index) in calendarDays\"\n          :key=\"index\"\n          class=\"calendar-day text-center my-font-size-xs\"\n          :class=\"{\n            'text-muted': !day.isCurrentMonth,\n            'bg-primary text-white': day.isSelected,\n            'calendar-day-hover': day.isCurrentMonth && day.day,\n          }\"\n          @click=\"selectDate(day)\"\n        >\n          {{ day.day }}\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n  .calendar-days {\n    display: grid;\n    grid-template-columns: repeat(7, 1fr);\n    gap: 2px;\n  }\n\n  .calendar-day {\n    transition: all 0.2s ease;\n    min-height: 32px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 4px;\n    cursor: pointer;\n    padding: 4px;\n  }\n\n  .calendar-day-hover:hover {\n    background-color: var(--my-color-gray-100) !important;\n  }\n\n  .calendar-day.bg-primary {\n    background-color: var(--my-color-red) !important; /* 使用紅色作為高亮 */\n    color: white !important;\n    font-weight: bold !important;\n    /* border: 2px solid var(--my-color-red-hover) !important;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2) !important; */\n  }\n\n  .calendar-container {\n    min-width: 280px;\n  }\n\n  .calendar-weekdays {\n    display: grid;\n    grid-template-columns: repeat(7, 1fr);\n    gap: 2px;\n  }\n\n  .calendar-weekday {\n    min-height: 24px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 4px;\n  }\n</style>\n","import { render } from \"./DatePicker.vue?vue&type=template&id=3fddd1ae&scoped=true\"\nimport script from \"./DatePicker.vue?vue&type=script&lang=js\"\nexport * from \"./DatePicker.vue?vue&type=script&lang=js\"\n\nimport \"./DatePicker.vue?vue&type=style&index=0&id=3fddd1ae&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-3fddd1ae\"]])\n\nexport default __exports__","import { render } from \"./DateLayersTab.vue?vue&type=template&id=5e6ac2c4&scoped=true\"\nimport script from \"./DateLayersTab.vue?vue&type=script&lang=js\"\nexport * from \"./DateLayersTab.vue?vue&type=script&lang=js\"\n\nimport \"./DateLayersTab.vue?vue&type=style&index=0&id=5e6ac2c4&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-5e6ac2c4\"]])\n\nexport default __exports__","<script>\n  /**\n   * ServerLayersTab.vue\n   *\n   * Purpose:\n   * - Service provider-based layer management\n   * - Lists layer groups and layers with visibility toggles\n   * - Hosts the service provider picker to load provider-specific date layers\n   *\n   * Notes:\n   * - Similar to DateLayersTab but filters by service provider instead of date\n   * - Shows all service dates for the selected service provider\n   */\n  import { computed, ref, onMounted } from 'vue';\n  import { useDataStore } from '@/stores/dataStore.js';\n  import { getIcon } from '../utils/utils.js';\n  import ServiceProviderPicker from '../components/ServiceProviderPicker.vue';\n\n  export default {\n    name: 'ServerLayersTab',\n\n    /**\n     * 🧩 組件註冊 (Component Registration)\n     * 註冊子組件\n     */\n    components: {\n      ServiceProviderPicker,\n    },\n\n    /**\n     * 🔧 組件設定函數 (Component Setup)\n     * 使用 Composition API 設定組件邏輯\n     */\n    setup() {\n      // 📦 取得 Pinia 數據存儲實例\n      const dataStore = useDataStore();\n\n      // 建立一個 ref 來引用模板中的圖層列表 DOM 元素\n      const layerListRef = ref(null);\n\n      // 建立一個計算屬性，從 store 中獲取圖層數據\n      const layers = computed(() => dataStore.layers);\n\n      // 👤 服務人員選擇相關狀態（從 dataStore 獲取）\n      const selectedServiceProvider = computed({\n        get: () => dataStore.selectedServiceProvider,\n        set: (value) => {\n          if (value) {\n            dataStore.setServiceProviderFilter(value);\n          } else {\n            dataStore.clearServiceProviderFilter();\n          }\n        },\n      });\n\n      /**\n       * 🔘 切換圖層可見性\n       * 呼叫 store 中的 action 來切換指定圖層的顯示/隱藏狀態\n       * @param {string} layerId - 要切換的圖層 ID\n       */\n      const toggleLayer = (layerId) => {\n        console.log('🔘 ServerLayersTab: 切換圖層', layerId);\n        dataStore.toggleLayerVisibility(layerId);\n      };\n\n      /**\n       * 🔘 切換群組可見性\n       * 呼叫 store 中的 action 來切換指定群組所有圖層的顯示/隱藏狀態\n       * @param {string} groupName - 要切換的群組名稱\n       */\n      const toggleGroup = (groupName) => {\n        console.log('🔘 ServerLayersTab: 切換群組', groupName);\n        dataStore.toggleGroupVisibility(groupName);\n      };\n\n      /**\n       * 🎨 獲取圖層顏色 (Get Layer Color)\n       * 確保與地圖上顯示的顏色一致\n       * @param {Object} layer - 圖層物件\n       * @returns {string} CSS 顏色值\n       */\n      const getLayerColor = (layer) => {\n        // 如果是服務日期圖層，從 GeoJSON features 中獲取實際使用的顏色\n        if (layer.layerId && layer.layerId.startsWith('service-date-') && layer.geoJsonData) {\n          const features = layer.geoJsonData.features || [];\n          if (features.length > 0) {\n            // 優先使用 fillColor，如果沒有則使用 routeColor\n            const firstFeature = features[0];\n            if (firstFeature.properties) {\n              if (firstFeature.properties.fillColor) {\n                return `var(--my-color-${firstFeature.properties.fillColor})`;\n              } else if (firstFeature.properties.routeColor) {\n                return `var(--my-color-${firstFeature.properties.routeColor})`;\n              }\n            }\n          }\n        }\n\n        // 回退到使用 layer.colorName\n        return layer.colorName ? `var(--my-color-${layer.colorName})` : 'var(--my-color-gray-300)';\n      };\n\n      /**\n       * 👤 處理服務人員選擇事件\n       * @param {string} providerId - 服務人員身分證 ID\n       */\n      const handleProviderSelected = async (providerId) => {\n        console.log('👤 ServerLayersTab 接收到的服務人員ID:', providerId);\n\n        // 切換服務人員時清空 right panel\n        dataStore.setSelectedFeature(null);\n\n        if (providerId) {\n          dataStore.setServiceProviderFilter(providerId);\n          // 載入該服務人員的所有日期圖層\n          console.log('👤 開始載入服務人員日期圖層');\n          await dataStore.loadServiceProviderDateLayers(providerId);\n        } else {\n          dataStore.clearServiceProviderFilter();\n          // 清除服務人員群組圖層\n          dataStore.clearServiceProviderDateLayers();\n        }\n      };\n\n      /**\n       * 🚀 組件掛載時初始化\n       * 載入服務人員清單並預設選擇第一個服務人員\n       */\n      onMounted(async () => {\n        console.log('🚀 ServerLayersTab 組件掛載，開始載入服務人員清單');\n        // 載入可用的服務人員清單\n        const providers = await dataStore.loadAvailableServiceProviders();\n\n        // 預設選擇第一個服務人員\n        if (providers && providers.length > 0) {\n          const firstProvider = providers[0];\n          console.log('👤 預設選擇第一個服務人員:', firstProvider.id);\n          await handleProviderSelected(firstProvider.id);\n        }\n      });\n\n      // 📤 將需要暴露給 <template> 使用的數據和方法返回\n      return {\n        layers,\n        toggleLayer,\n        toggleGroup,\n        isGroupVisible: dataStore.isGroupVisible,\n        layerListRef,\n        getIcon,\n        getLayerColor,\n        // 👤 服務人員選擇相關\n        selectedServiceProvider,\n        handleProviderSelected,\n        isServiceProviderFilterActive: computed(() => dataStore.isServiceProviderFilterActive),\n      };\n    },\n  };\n</script>\n\n<template>\n  <div class=\"h-100 d-flex flex-column overflow-hidden my-bgcolor-gray-100\">\n    <div class=\"flex-grow-1 overflow-auto layer-list-container\" ref=\"layerListRef\">\n      <div class=\"mb-3\">\n        <!-- 👤 服務人員選擇區域 -->\n        <div class=\"p-3\">\n          <div class=\"mb-2\">\n            <div class=\"my-title-xs-gray mb-1\">選擇服務人員</div>\n            <ServiceProviderPicker\n              v-model=\"selectedServiceProvider\"\n              @provider-selected=\"handleProviderSelected\"\n            />\n          </div>\n        </div>\n\n        <!-- 🗂️ 圖層群組列表 -->\n        <div\n          v-for=\"group in layers.filter((g) => g.groupName === '服務日期列表')\"\n          :key=\"group.groupName\"\n          class=\"p-3\"\n        >\n          <div class=\"d-flex align-items-center pb-2\">\n            <div class=\"my-title-xs-gray\">\n              {{ group.groupName }}\n              <span v-if=\"group.groupLayers.length > 0\"> ({{ group.groupLayers.length }}) </span>\n            </div>\n            <!-- 群組開關 - 有圖層時才顯示 -->\n            <div\n              v-if=\"group.groupLayers.length > 0\"\n              class=\"d-flex align-items-center justify-content-center ms-auto\"\n            >\n              <input\n                type=\"checkbox\"\n                :id=\"'group-switch-' + group.groupName\"\n                :checked=\"isGroupVisible(group.groupName)\"\n                @change=\"toggleGroup(group.groupName)\"\n              />\n              <label\n                :for=\"'group-switch-' + group.groupName\"\n                :style=\"{\n                  '--layer-color': 'var(--my-color-green)',\n                }\"\n              ></label>\n            </div>\n          </div>\n\n          <!-- 📅 圖層列表 -->\n          <div v-for=\"layer in group.groupLayers\" :key=\"layer.layerId\" class=\"mb-1\">\n            <!-- 圖層卡片 -->\n            <div\n              class=\"btn rounded-0 border-0 d-flex shadow-sm my-bgcolor-white-hover p-0\"\n              @click=\"toggleLayer(layer.layerId)\"\n            >\n              <!-- 圖層圖示 -->\n              <div\n                class=\"d-flex\"\n                :style=\"{\n                  backgroundColor: getLayerColor(layer),\n                  minWidth: '6px',\n                }\"\n              ></div>\n              <div class=\"w-100\">\n                <div class=\"d-flex\">\n                  <!-- 圖層名稱 -->\n                  <div class=\"d-flex align-items-center text-start w-100 px-3 py-2\">\n                    <span class=\"my-content-sm-black\">\n                      {{ layer.layerName }}\n                      <span class=\"my-content-xs-gray ms-2\">\n                        {{ layer.summaryData?.totalCount }}\n                      </span>\n                    </span>\n                  </div>\n                  <!-- 切換圖層可見性 -->\n                  <div class=\"d-flex align-items-center justify-content-center px-3 py-2\">\n                    <input\n                      type=\"checkbox\"\n                      :id=\"'switch-' + layer.layerId\"\n                      :checked=\"layer.visible\"\n                      :disabled=\"layer.isLoading\"\n                      @change=\"toggleLayer(layer.layerId)\"\n                    />\n                    <label\n                      :for=\"'switch-' + layer.layerId\"\n                      :style=\"{\n                        '--layer-color': 'var(--my-color-green)',\n                      }\"\n                    ></label>\n                  </div>\n                </div>\n                <div v-if=\"layer.legendData && layer.visible\" class=\"px-3 pb-2\">\n                  <div\n                    v-for=\"data in layer.legendData\"\n                    :key=\"data.color\"\n                    class=\"d-flex align-items-center\"\n                  >\n                    <div\n                      style=\"min-width: 6px; min-height: 18px\"\n                      :style=\"{\n                        backgroundColor: data.color,\n                      }\"\n                    ></div>\n                    <div class=\"my-content-xs-black text-nowrap ms-2\">{{ data.label }}</div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n  /* 🎨 圖層切換開關樣式 (Layer Toggle Switch Styles) */\n  /* https://www.tpisoftware.com/tpu/articleDetails/2744 */\n\n  input[type='checkbox'] {\n    height: 0;\n    width: 0;\n    visibility: hidden;\n  }\n\n  label {\n    cursor: pointer;\n    width: 28px;\n    height: 16px;\n    background: var(--my-color-gray-300);\n    display: block;\n    border-radius: 16px;\n    position: relative;\n    transition: background-color 0.3s cubic-bezier(0.4, 0, 0.2, 1); /* 優化背景色過渡 */\n  }\n\n  label:after {\n    content: '';\n    position: absolute;\n    top: 2px;\n    left: 2px;\n    width: 12px;\n    height: 12px;\n    background: var(--my-color-white);\n    border-radius: 12px;\n    transition: transform 0.2s cubic-bezier(0.4, 0, 0.2, 1); /* 優化滑動過渡 */\n  }\n\n  input:checked + label {\n    background: var(--layer-color, var(--my-color-green));\n  }\n\n  input:checked + label:after {\n    transform: translateX(12px);\n  }\n</style>\n","<script>\n  /**\n   * ServiceProviderPicker.vue\n   *\n   * Purpose:\n   * - Provides a dropdown selection interface for service providers\n   * - Loads and displays available service providers with statistics\n   * - Emits events when service provider is selected\n   *\n   * Features:\n   * - Auto-load service provider list on mount\n   * - Display provider ID and service date count\n   * - Reactive updates with data store\n   */\n  import { ref, onMounted, computed } from 'vue';\n  import { useDataStore } from '@/stores/dataStore.js';\n\n  export default {\n    name: 'ServiceProviderPicker',\n\n    /**\n     * 📡 組件事件定義 (Component Events)\n     */\n    emits: ['provider-selected'],\n\n    /**\n     * 🔧 組件設定函數 (Component Setup)\n     */\n    setup(props, { emit }) {\n      // 📦 取得 Pinia 數據存儲實例\n      const dataStore = useDataStore();\n\n      // 🔍 本地狀態\n      const isLoading = ref(false);\n      const error = ref(null);\n\n      // 📊 計算屬性\n      const selectedProvider = computed({\n        get: () => dataStore.selectedServiceProvider,\n        set: (value) => {\n          dataStore.setServiceProviderFilter(value);\n        },\n      });\n\n      const availableProviders = computed(() => dataStore.availableServiceProviders);\n\n      /**\n       * 🚀 載入服務人員清單\n       */\n      const loadProviders = async () => {\n        try {\n          isLoading.value = true;\n          error.value = null;\n          await dataStore.loadAvailableServiceProviders();\n        } catch (err) {\n          error.value = '載入服務人員清單失敗';\n          console.error('ServiceProviderPicker: 載入服務人員清單失敗', err);\n        } finally {\n          isLoading.value = false;\n        }\n      };\n\n      /**\n       * 🎯 處理服務人員選擇\n       */\n      const handleProviderSelected = async (providerId) => {\n        if (providerId) {\n          dataStore.setServiceProviderFilter(providerId);\n          emit('provider-selected', providerId);\n        }\n      };\n\n      /**\n       * 🚀 組件掛載時載入服務人員清單\n       */\n      onMounted(async () => {\n        await loadProviders();\n      });\n\n      // 📤 返回給模板使用\n      return {\n        selectedProvider,\n        availableProviders,\n        isLoading,\n        error,\n        handleProviderSelected,\n        loadProviders,\n      };\n    },\n  };\n</script>\n\n<template>\n  <div class=\"service-provider-picker\">\n    <!-- 載入狀態 -->\n    <div v-if=\"isLoading\" class=\"text-center py-2\">\n      <div class=\"spinner-border spinner-border-sm\" role=\"status\">\n        <span class=\"visually-hidden\">載入中...</span>\n      </div>\n      <span class=\"ms-2 my-content-xs-gray\">載入服務人員清單...</span>\n    </div>\n\n    <!-- 錯誤狀態 -->\n    <div v-else-if=\"error\" class=\"alert alert-warning py-2\" role=\"alert\">\n      <i class=\"fas fa-exclamation-triangle me-2\"></i>\n      {{ error }}\n      <button class=\"btn btn-sm btn-outline-warning ms-2\" @click=\"loadProviders\">\n        <i class=\"fas fa-redo\"></i> 重試\n      </button>\n    </div>\n\n    <!-- 選擇器 -->\n    <div v-else>\n      <select\n        v-model=\"selectedProvider\"\n        @change=\"handleProviderSelected($event.target.value)\"\n        class=\"form-select form-select-sm px-3 py-2\"\n        :disabled=\"isLoading\"\n      >\n        <option v-for=\"provider in availableProviders\" :key=\"provider.id\" :value=\"provider.id\">\n          {{ provider.name }} ({{ provider.dateCount }})\n        </option>\n      </select>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n  .service-provider-picker .form-select {\n    border-radius: 0.375rem;\n    border: 1px solid var(--my-color-gray-300);\n    background-color: var(--my-color-white);\n    color: var(--my-color-black);\n    font-size: 0.875rem;\n  }\n\n  .service-provider-picker .form-select:focus {\n    border-color: var(--my-color-blue);\n    box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);\n  }\n\n  .service-provider-picker .form-select:disabled {\n    background-color: var(--my-color-gray-100);\n    opacity: 0.6;\n  }\n\n  .spinner-border-sm {\n    width: 1rem;\n    height: 1rem;\n  }\n</style>\n","import { render } from \"./ServiceProviderPicker.vue?vue&type=template&id=dd2dfc9e&scoped=true\"\nimport script from \"./ServiceProviderPicker.vue?vue&type=script&lang=js\"\nexport * from \"./ServiceProviderPicker.vue?vue&type=script&lang=js\"\n\nimport \"./ServiceProviderPicker.vue?vue&type=style&index=0&id=dd2dfc9e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-dd2dfc9e\"]])\n\nexport default __exports__","import { render } from \"./ServerLayersTab.vue?vue&type=template&id=03b2322c&scoped=true\"\nimport script from \"./ServerLayersTab.vue?vue&type=script&lang=js\"\nexport * from \"./ServerLayersTab.vue?vue&type=script&lang=js\"\n\nimport \"./ServerLayersTab.vue?vue&type=style&index=0&id=03b2322c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-03b2322c\"]])\n\nexport default __exports__","import { render } from \"./LeftView.vue?vue&type=template&id=172c070e\"\nimport script from \"./LeftView.vue?vue&type=script&lang=js\"\nexport * from \"./LeftView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<script>\n  import PropertiesTab from '../tabs/PropertiesTab.vue';\n  import { useDataStore } from '../stores/dataStore';\n  import { computed, watch } from 'vue';\n\n  export default {\n    name: 'RightView',\n    components: {\n      PropertiesTab, // 物件屬性分頁組件\n    },\n    props: {\n      /** 🔗 當前作用中的右側分頁標籤 */\n      activeRightTab: {\n        type: String,\n        default: 'results',\n      },\n      /** 📈 分析結果清單數據 */\n      analysisList: {\n        type: Array,\n        default: () => [],\n      },\n      /** 📈 選中的分析項目 ID */\n      selectedAnalysisId: {\n        type: [Number, String],\n        default: null,\n      },\n      /** 📏 右側面板寬度 (像素) */\n      rightViewWidth: {\n        type: Number,\n        default: 250,\n      },\n    },\n\n    /**\n     * 📡 組件事件定義 (Component Events)\n     * 定義向父組件發送的事件類型\n     */\n    emits: [\n      'update:activeRightTab', // 更新作用中分頁\n      'select-analysis', // 選擇分析項目\n      'view-analysis', // 查看分析結果\n      'delete-analysis', // 刪除分析項目\n      'highlight-feature', // 高亮顯示地圖特徵\n      'show-service-point-detail', // 顯示服務點詳細資訊\n    ],\n\n    /**\n     * 🔧 組件設定函數 (Component Setup)\n     * 使用 Composition API 設定組件邏輯\n     */\n    setup(props) {\n      // 📦 取得 Pinia 數據存儲實例\n      const dataStore = useDataStore();\n\n      /**\n       * 📊 計算活躍分析項目數量 (Calculate Active Analysis Count)\n       * 統計狀態為「完成」的分析項目數量\n       *\n       * @returns {number} 完成狀態的分析項目數量\n       */\n      const getActiveAnalysisCount = () => {\n        return props.analysisList.filter((a) => a.status === '完成').length;\n      };\n\n      /**\n       * 👀 監聽選中物件的變化 (Watch Selected Feature Changes)\n       * 當 Pinia store 中的 selectedFeature 變化時執行回調\n       */\n      watch(\n        () => dataStore.selectedFeature,\n        (newFeature) => {\n          console.log('RightView - selectedFeature changed:', {\n            newFeature: newFeature,\n            properties: newFeature?.properties,\n            store: dataStore,\n          });\n        },\n        { immediate: true }\n      ); // immediate: true 表示立即執行一次\n\n      /**\n       * 🧮 選中物件計算屬性 (Selected Feature Computed Property)\n       * 從 Pinia store 獲取當前選中的地圖物件\n       * 提供響應式的選中物件數據給子組件使用\n       */\n      const selectedFeatureComputed = computed(() => {\n        const feature = dataStore.selectedFeature;\n        console.log('RightView - Computing selectedFeature:', {\n          feature: feature,\n          properties: feature?.properties,\n        });\n        return feature;\n      });\n\n      // 📤 返回響應式數據和函數給模板和子組件使用\n      return {\n        getActiveAnalysisCount, // 活躍分析計數函數\n        selectedFeature: selectedFeatureComputed, // 選中物件計算屬性\n      };\n    },\n  };\n</script>\n\n<template>\n  <div class=\"my-right-panel h-100 d-flex flex-column overflow-hidden\">\n    <!-- 📄 右側分頁內容區域 -->\n    <div class=\"flex-grow-1 overflow-auto\">\n      <!-- 📋 物件屬性分頁內容 -->\n      <div v-show=\"activeRightTab === 'properties'\" class=\"h-100\">\n        <PropertiesTab\n          @highlight-feature=\"$emit('highlight-feature', $event)\"\n          @show-service-point-detail=\"$emit('show-service-point-detail', $event)\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<style scoped></style>\n","<script>\n  /**\n   * PropertiesTab.vue\n   *\n   * Purpose:\n   * - Displays details for the currently selected feature (layer meta, detail list, service info).\n   * - Shows analysis-in-range summaries when selecting analysis features.\n   *\n   * Notes:\n   * - Non-functional refactor: documentation added only; logic and UI remain unchanged.\n   */\n  import DetailItem from '../components/DetailItem.vue';\n  import { useDataStore } from '../stores/dataStore';\n  import { computed, ref } from 'vue';\n\n  export default {\n    name: 'PropertiesTab',\n\n    /**\n     * 🧩 組件註冊 (Component Registration)\n     * 註冊物件屬性分頁內使用的子組件\n     */\n    components: {\n      DetailItem, // 詳細資訊項目組件\n    },\n\n    /**\n     * 🔧 組件設定函數 (Component Setup)\n     * 使用 Composition API 設定組件邏輯\n     */\n    setup() {\n      // 📦 取得 Pinia 數據存儲實例\n      const dataStore = useDataStore();\n\n      /**\n       * 📊 選中物件計算屬性 (Selected Feature Computed Property)\n       * 從 Pinia store 獲取當前選中的地圖物件\n       * 提供響應式的選中物件數據\n       */\n      const selectedFeature = computed(() => dataStore.selectedFeature);\n\n      const selectedLayer = computed(() => {\n        if (!selectedFeature.value?.properties?.layerId) {\n          return null;\n        }\n\n        const layerId = selectedFeature.value.properties.layerId;\n        const layer = dataStore.findLayerById(layerId);\n        return layer;\n      });\n\n      // 右側標色需與地圖一致：優先使用 feature 上的 fillColor/routeColor，其次使用 layer.colorName\n      const selectedLayerColor = computed(() => {\n        const layer = selectedLayer.value;\n        if (!layer) return 'var(--my-color-gray-300)';\n        if (\n          layer.geoJsonData &&\n          layer.geoJsonData.features &&\n          layer.geoJsonData.features.length > 0\n        ) {\n          const f =\n            layer.geoJsonData.features.find(\n              (ff) => ff.properties && (ff.properties.fillColor || ff.properties.routeColor)\n            ) || layer.geoJsonData.features[0];\n          const props = f.properties || {};\n          if (props.fillColor) return `var(--my-color-${props.fillColor})`;\n          if (props.routeColor) return `var(--my-color-${props.routeColor})`;\n        }\n        if (layer.colorName) return `var(--my-color-${layer.colorName})`;\n        return 'var(--my-color-gray-300)';\n      });\n\n      /**\n       * 🏷️ 圖層名稱計算屬性 (Layer Name Computed Property)\n       * 根據 selectedFeature.properties.layerId 從 dataStore 的 layers 中找到對應的圖層名稱\n       */\n      const layerName = computed(() => {\n        if (!selectedFeature.value?.properties?.layerId) {\n          return null;\n        }\n\n        const layerId = selectedFeature.value.properties.layerId;\n        const layer = dataStore.findLayerById(layerId);\n        return layer ? layer.layerName : layerId;\n      });\n\n      /**\n       * 🏷️ 服務人員標籤計算屬性 (Service Provider Label Computed Property)\n       * 獲取當前選中的服務人員信息\n       */\n      const serviceProviderLabel = computed(() => {\n        // 若有選中的服務點，優先從該點取得服務人員\n        if (selectedServicePoint.value) {\n          const sp = selectedServicePoint.value;\n          if (sp.serviceProviderId) return sp.serviceProviderId;\n          if (sp['服務人員身分證']) return sp['服務人員身分證'];\n          if (sp.detail?.['服務人員身分證']) return sp.detail['服務人員身分證'];\n        }\n\n        // 優先從 bottom panel 選中的物件獲取服務人員信息\n        if (selectedFeature.value?.properties) {\n          const props = selectedFeature.value.properties;\n\n          // 從選中物件的屬性中獲取服務人員身分證\n          if (props.serviceProviderId) {\n            return props.serviceProviderId;\n          }\n\n          if (props.服務人員身分證) {\n            return props.服務人員身分證;\n          }\n\n          // 如果是 detail 物件，從 detail 中獲取\n          if (props.detail?.服務人員身分證) {\n            return props.detail.服務人員身分證;\n          }\n        }\n\n        // 回退到 left panel 的選擇\n        if (dataStore.selectedServiceProvider) {\n          return dataStore.selectedServiceProvider;\n        }\n\n        // 如果是在日期篩選模式下（服務日期 tab 活躍），顯示 \"所有服務人員\"\n        if (dataStore.isDateFilterActive && !dataStore.isServiceProviderFilterActive) {\n          return '所有服務人員';\n        }\n\n        // 其他情況顯示未選擇\n        return '未選擇';\n      });\n\n      /**\n       * 🏷️ 服務日期標籤計算屬性 (Service Date Label Computed Property)\n       * 獲取當前選中的服務日期信息\n       */\n      const serviceDateLabel = computed(() => {\n        // 若有選中的服務點，優先從該點取得服務日期\n        if (selectedServicePoint.value) {\n          const sp = selectedServicePoint.value;\n          if (sp.serviceDate) return sp.serviceDate;\n          if (sp['服務日期(請輸入7碼)']) return sp['服務日期(請輸入7碼)'];\n          if (sp.服務日期) return sp.服務日期;\n          if (sp.detail?.['服務日期(請輸入7碼)']) return sp.detail['服務日期(請輸入7碼)'];\n          if (sp.detail?.服務日期) return sp.detail.服務日期;\n        }\n\n        // 優先從 bottom panel 選中的物件獲取服務日期信息\n        if (selectedFeature.value?.properties) {\n          const props = selectedFeature.value.properties;\n\n          // 從選中物件的屬性中獲取服務日期\n          if (props.serviceDate) {\n            return props.serviceDate;\n          }\n\n          if (props['服務日期(請輸入7碼)']) {\n            return props['服務日期(請輸入7碼)'];\n          }\n\n          // 如果是 detail 物件，從 detail 中獲取\n          if (props.detail?.['服務日期(請輸入7碼)']) {\n            return props.detail['服務日期(請輸入7碼)'];\n          }\n\n          // 也檢查其他可能的服務日期欄位\n          if (props.服務日期) {\n            return props.服務日期;\n          }\n\n          if (props.detail?.服務日期) {\n            return props.detail.服務日期;\n          }\n        }\n\n        // 回退到 left panel 的選擇\n        if (dataStore.selectedServiceDate) {\n          return dataStore.selectedServiceDate;\n        }\n\n        // 如果在服務人員模式下但沒有選擇日期\n        if (dataStore.isServiceProviderFilterActive) {\n          return '所有日期';\n        }\n\n        return '未選擇';\n      });\n\n      /**\n       * 📑 根據左側面板活躍分頁決定標籤順序 (Label Order Based on Active Left Tab)\n       * 當左側面板是 'date' 時，先顯示服務日期，再顯示服務人員\n       * 當左側面板是 'server' 時，先顯示服務人員，再顯示服務日期\n       */\n      const firstLabel = computed(() => {\n        return dataStore.activeLeftTab === 'date' ? '服務日期' : '服務人員';\n      });\n\n      const secondLabel = computed(() => {\n        return dataStore.activeLeftTab === 'date' ? '服務人員' : '服務日期';\n      });\n\n      const firstValue = computed(() => {\n        return dataStore.activeLeftTab === 'date'\n          ? serviceDateLabel.value\n          : serviceProviderLabel.value;\n      });\n\n      const secondValue = computed(() => {\n        return dataStore.activeLeftTab === 'date'\n          ? serviceProviderLabel.value\n          : serviceDateLabel.value;\n      });\n\n      /**\n       * 📋 是否有屬性計算屬性 (Has Properties Computed Property)\n       * 檢查選中物件是否包含有效的屬性資料\n       *\n       * @returns {boolean} 是否有屬性資料\n       */\n      const hasProperties = computed(() => {\n        return (\n          !!selectedFeature.value?.properties?.propertyData &&\n          Object.keys(selectedFeature.value.properties.propertyData).length > 0\n        );\n      });\n\n      /**\n       * 🎯 是否為分析圖層物件 (Is Analysis Layer Object)\n       * 檢查選中物件是否為分析圖層的物件\n       */\n      const isAnalysisObject = computed(() => {\n        return selectedFeature.value?.properties?.layerId === 'analysis-layer';\n      });\n\n      // 注意：路徑規劃和路徑優化相關的計算屬性已移除\n\n      /**\n       * 👨‍⚕️ 是否為服務人員物件 (Is Service Provider Object)\n       * 檢查選中物件是否為服務人員物件\n       */\n      const isServiceProviderObject = computed(() => {\n        return selectedFeature.value?.properties?.type === 'service-provider';\n      });\n\n      /**\n       * ⭐ 是否為路線中心點物件 (Is Route Center Point Object)\n       * 檢查選中物件是否為路線中心點\n       */\n      const isRouteCenterPointObject = computed(() => {\n        return selectedFeature.value?.properties?.type === 'route-center-point-selected';\n      });\n\n      /**\n       * 📋 是否為服務項目列表物件 (Is Service Items Object)\n       * 檢查選中物件是否包含服務項目列表\n       */\n      const isServiceItemsObject = computed(() => {\n        const selectedFeatureProps = selectedFeature.value?.properties;\n        const type = selectedFeatureProps?.type;\n        const serviceItems = selectedFeatureProps?.serviceItems;\n        const serviceItemsLength = serviceItems?.length;\n\n        const result =\n          type === 'service-items' && Array.isArray(serviceItems) && serviceItemsLength > 0;\n\n        return result;\n      });\n\n      /**\n       * 📍 選中的服務點 (Selected Service Point)\n       * 用於顯示個案詳細信息\n       */\n      const selectedServicePoint = ref(null);\n\n      /**\n       * 🎯 選擇服務點 (Select Service Point)\n       * 點擊個案列表中的項目時調用\n       */\n      const selectServicePoint = (point) => {\n        selectedServicePoint.value = point;\n      };\n\n      // 注意：路徑規劃和路徑優化詳細信息計算屬性已移除\n\n      /**\n       * 📍 範圍內點位清單 (Points In Range List)\n       * 獲取分析圖層物件範圍內的點清單\n       */\n      const pointsInRange = computed(() => {\n        if (!isAnalysisObject.value) return [];\n        return selectedFeature.value?.properties?.pointsInRange || [];\n      });\n\n      /**\n       * 🏢 範圍內多邊形清單 (Polygon In Range List)\n       * 獲取分析圖層物件範圍內的多邊形清單\n       */\n      const polygonInRange = computed(() => {\n        if (!isAnalysisObject.value) return [];\n        return selectedFeature.value?.properties?.polygonInRange || [];\n      });\n\n      /**\n       * 📋 範圍內所有物件清單 (All Objects In Range List)\n       * 整合點物件和多邊形物件的統一清單\n       */\n      const allObjectsInRange = computed(() => {\n        const points = pointsInRange.value.map((obj) => ({ ...obj, objectType: 'point' }));\n        const polygons = polygonInRange.value.map((obj) => ({ ...obj, objectType: 'polygon' }));\n        return [...points, ...polygons];\n      });\n\n      /**\n       * 📊 圖層統計 (Layer Statistics)\n       * 獲取範圍內各圖層的統計信息（點物件）\n       */\n      const layerStats = computed(() => {\n        if (!isAnalysisObject.value) return {};\n        return selectedFeature.value?.properties?.layerStats || {};\n      });\n\n      /**\n       * 🏢 多邊形圖層統計 (Polygon Layer Statistics)\n       * 獲取範圍內各圖層的統計信息（多邊形物件）\n       */\n      const polygonStats = computed(() => {\n        if (!isAnalysisObject.value) return {};\n        return selectedFeature.value?.properties?.polygonStats || {};\n      });\n\n      /**\n       * 📊 整合統計 (Combined Statistics)\n       * 整合點物件和多邊形物件的統計\n       */\n      const combinedStats = computed(() => {\n        const combined = { ...layerStats.value };\n        Object.entries(polygonStats.value).forEach(([layerName, count]) => {\n          const key = `${layerName} (多邊形)`;\n          combined[key] = count;\n        });\n        return combined;\n      });\n\n      /**\n       * 🕐 格式化日期時間 (Format Date Time)\n       * 將 ISO 字串轉換為本地化的日期時間格式\n       * @param {string} isoString - ISO 格式的日期時間字串\n       * @returns {string} - 格式化後的日期時間字串\n       */\n      const formatDateTime = (isoString) => {\n        if (!isoString) return 'N/A';\n        try {\n          return new Date(isoString).toLocaleString('zh-TW');\n        } catch (error) {\n          console.warn('日期格式化失敗:', error);\n          return isoString;\n        }\n      };\n\n      // 📤 返回響應式數據給模板使用\n      return {\n        selectedFeature, // 選中物件\n        selectedLayer, // 選中圖層\n        selectedLayerColor, // 圖層顯示顏色（與地圖一致）\n        layerName, // 圖層名稱\n        serviceProviderLabel, // 服務人員標籤\n        serviceDateLabel, // 服務日期標籤\n        firstLabel, // 第一個標籤（根據左側面板分頁決定）\n        secondLabel, // 第二個標籤（根據左側面板分頁決定）\n        firstValue, // 第一個值（根據左側面板分頁決定）\n        secondValue, // 第二個值（根據左側面板分頁決定）\n        hasProperties, // 是否有屬性\n        isAnalysisObject, // 是否為分析圖層物件\n        // 注意：路徑規劃和路徑優化相關的計算屬性已移除\n        isServiceProviderObject, // 是否為服務人員物件\n        isServiceItemsObject, // 是否為服務項目列表物件\n        isRouteCenterPointObject, // 是否為路線中心點物件\n        selectedServicePoint, // 選中的服務點\n        selectServicePoint, // 選擇服務點方法\n        pointsInRange, // 範圍內點位清單\n        polygonInRange, // 範圍內多邊形清單\n        allObjectsInRange, // 範圍內所有物件清單\n        layerStats, // 點圖層統計\n        polygonStats, // 多邊形圖層統計\n        combinedStats, // 整合統計\n        formatDateTime, // 日期時間格式化函數\n        selectedServiceDate: computed(() => dataStore.selectedServiceDate), // 當前選中的服務日期\n      };\n    },\n\n    /**\n     * 🛠️ 組件方法定義 (Component Methods)\n     * 定義資料格式化和處理方法\n     */\n    methods: {\n      /**\n       * 📝 格式化屬性標籤 (Format Property Label)\n       * 將英文屬性名稱轉換為中文顯示名稱\n       *\n       * @param {string} key - 原始屬性名稱\n       * @returns {string} 格式化後的顯示名稱\n       */\n      formatLabel(key) {\n        // 屬性名稱對照表，提供中文化顯示\n        const labelMap = {\n          PTVNAME: '區域名稱',\n          中位數: '中位數',\n          name: '名稱',\n          count: '數量',\n          area: '面積',\n          population: '人口',\n          density: '密度',\n          // 分析圖層專用標籤\n          分析點名稱: '分析點名稱',\n          分析範圍名稱: '分析範圍名稱',\n          緯度: '緯度',\n          經度: '經度',\n          中心緯度: '中心緯度',\n          中心經度: '中心經度',\n          分析半徑: '分析半徑',\n          建立時間: '建立時間',\n          關聯分析點: '關聯分析點',\n        };\n        return labelMap[key] || key;\n      },\n\n      /**\n       * 🎨 格式化屬性值 (Format Property Value)\n       * 根據值的類型進行適當的格式化處理\n       *\n       * @param {any} value - 原始屬性值\n       * @returns {string} 格式化後的顯示值\n       */\n      formatValue(value) {\n        // 數字類型：添加千分位分隔符\n        if (typeof value === 'number') {\n          return value.toLocaleString();\n        }\n        // 其他類型：直接返回\n        return value;\n      },\n    },\n  };\n</script>\n\n<template>\n  <div class=\"h-100 flex-grow-1 d-flex flex-column my-bgcolor-gray-200\">\n    <!-- 當有選中物件時顯示詳細資訊 -->\n    <div v-if=\"selectedFeature\" class=\"my-bgcolor-white h-100\">\n      <div>\n        <div\n          v-if=\"selectedLayer\"\n          :style=\"{\n            backgroundColor: selectedLayerColor,\n            minHeight: '4px',\n          }\"\n        ></div>\n\n        <div class=\"p-3\">\n          <DetailItem :label=\"firstLabel\" :value=\"firstValue\" />\n          <DetailItem :label=\"secondLabel\" :value=\"secondValue\" />\n          <template v-if=\"hasProperties\">\n            <DetailItem\n              v-for=\"(value, key) in selectedFeature.properties.propertyData\"\n              :key=\"key\"\n              :label=\"formatLabel(key)\"\n              :value=\"formatValue(value)\"\n            />\n          </template>\n\n          <!-- 🎯 分析圖層專用：範圍內物件清單 -->\n          <template\n            v-if=\"isAnalysisObject && (pointsInRange.length > 0 || polygonInRange.length > 0)\"\n          >\n            <!-- 📍 點物件清單 -->\n            <template v-if=\"pointsInRange.length > 0\">\n              <hr class=\"my-3\" />\n\n              <div class=\"my-title-xs-gray mb-3\">範圍內點物件 {{ pointsInRange.length }}</div>\n              <DetailItem\n                v-for=\"(point, index) in pointsInRange\"\n                :key=\"index\"\n                :label=\"point.properties.layerName\"\n                :value=\"`${point.properties.name} (${point.distance}m)`\"\n              />\n            </template>\n\n            <!-- 🏢 多邊形物件清單 -->\n            <template v-if=\"polygonInRange.length > 0\">\n              <hr class=\"my-3\" />\n\n              <div class=\"my-title-xs-gray mb-3\">範圍內面域物件 {{ polygonInRange.length }}</div>\n              <DetailItem\n                v-for=\"(polygon, index) in polygonInRange\"\n                :key=\"index\"\n                :label=\"polygon.properties.layerName\"\n                :value=\"polygon.properties.name\"\n              />\n            </template>\n          </template>\n\n          <!-- 👨‍⚕️ 服務人員專用：服務點詳細信息 -->\n          <template v-if=\"isServiceProviderObject && selectedFeature.properties.allServicePoints\">\n            <hr class=\"my-3\" />\n\n            <!-- 服務人員基本信息 -->\n            <div class=\"my-title-xs-gray mb-3\">服務人員信息</div>\n            <DetailItem label=\"服務人員身分證\" :value=\"serviceProviderLabel\" />\n            <DetailItem label=\"服務日期\" :value=\"serviceDateLabel || '無資料'\" />\n            <DetailItem\n              label=\"服務點位數\"\n              :value=\"`${selectedFeature.properties.allServicePoints.length} 個`\"\n            />\n\n            <!-- 個案列表 -->\n            <template v-if=\"selectedFeature.properties.allServicePoints.length > 0\">\n              <hr class=\"my-3\" />\n              <div class=\"my-title-xs-gray mb-3\">\n                個案列表 ({{ selectedFeature.properties.allServicePoints.length }} 個)\n              </div>\n\n              <!-- 個案列表表格 -->\n              <div class=\"table-responsive\">\n                <table class=\"table table-sm table-hover\">\n                  <thead class=\"table-light\">\n                    <tr>\n                      <th style=\"width: 50px\">順序</th>\n                      <th style=\"width: 80px\">姓名</th>\n                      <th style=\"width: 100px\">時間</th>\n                      <th>地址</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr\n                      v-for=\"(point, index) in selectedFeature.properties.allServicePoints\"\n                      :key=\"index\"\n                      @click=\"selectServicePoint(point)\"\n                    >\n                      <td class=\"text-center\">\n                        <span class=\"badge bg-primary\">{{ point.順序 }}</span>\n                      </td>\n                      <td class=\"fw-bold\">{{ point.姓名 }}</td>\n                      <td class=\"text-muted\">{{ point.時間 }}</td>\n                      <td class=\"text-muted small\">{{ point.地址 }}</td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n\n              <!-- 選中個案的詳細信息（僅顯示指定欄位） -->\n              <template v-if=\"selectedServicePoint\">\n                <hr class=\"my-3\" />\n                <div class=\"my-title-xs-gray mb-3\">\n                  個案詳細信息 - {{ selectedServicePoint.姓名 }}\n                </div>\n                <DetailItem label=\"編號\" :value=\"selectedServicePoint.編號\" />\n                <div class=\"pb-2\">\n                  <div class=\"my-title-xs-gray pb-1\">姓名</div>\n                  <div class=\"my-content-sm-black pb-1\">\n                    <span\n                      :class=\"\n                        selectedServicePoint.性別 === '男性'\n                          ? 'my-color-blue'\n                          : selectedServicePoint.性別 === '女性'\n                            ? 'my-color-red'\n                            : ''\n                      \"\n                    >\n                      {{ selectedServicePoint.姓名\n                      }}<template v-if=\"selectedServicePoint.性別 === '男性'\"> (M)</template\n                      ><template v-else-if=\"selectedServicePoint.性別 === '女性'\"> (F)</template>\n                    </span>\n                  </div>\n                </div>\n                <DetailItem\n                  label=\"身分證字號\"\n                  :value=\"selectedServicePoint.身分證字號 || '無資料'\"\n                />\n                <DetailItem label=\"個案戶籍地址\" :value=\"selectedServicePoint.個案戶籍地址\" />\n                <DetailItem\n                  label=\"個案居住地址\"\n                  :value=\"selectedServicePoint.個案居住地址 || selectedServicePoint.地址\"\n                />\n              </template>\n            </template>\n          </template>\n\n          <!-- 📋 服務點 detail + 服務項目列表顯示 -->\n          <template v-if=\"isServiceItemsObject\">\n            <hr class=\"my-3\" />\n            <!-- 服務點資料：僅顯示指定欄位 -->\n            <div class=\"my-title-sm-black mb-2\">服務點資料</div>\n            <div class=\"mb-3\">\n              <div v-if=\"selectedFeature.properties.detail\">\n                <DetailItem\n                  label=\"編號\"\n                  :value=\"selectedFeature.properties.detail.編號 || '無資料'\"\n                />\n                <div class=\"pb-2\">\n                  <div class=\"my-title-xs-gray pb-1\">姓名</div>\n                  <div class=\"my-content-sm-black pb-1\">\n                    <span\n                      :class=\"\n                        selectedFeature.properties.detail.性別 === '男性'\n                          ? 'my-color-blue'\n                          : selectedFeature.properties.detail.性別 === '女性'\n                            ? 'my-color-red'\n                            : ''\n                      \"\n                    >\n                      {{ selectedFeature.properties.detail.姓名 || '無資料' }}\n                      <template v-if=\"selectedFeature.properties.detail.性別 === '男性'\">\n                        (M)</template\n                      ><template v-else-if=\"selectedFeature.properties.detail.性別 === '女性'\">\n                        (F)</template\n                      >\n                    </span>\n                  </div>\n                </div>\n                <DetailItem\n                  label=\"身分證字號\"\n                  :value=\"\n                    selectedFeature.properties['身分證字號'] ||\n                    (Array.isArray(selectedFeature.properties.serviceItems)\n                      ? selectedFeature.properties.serviceItems[0]?.['身分證字號']\n                      : null) ||\n                    (Array.isArray(selectedFeature.properties.service_items)\n                      ? selectedFeature.properties.service_items[0]?.['身分證字號']\n                      : null) ||\n                    '無資料'\n                  \"\n                />\n                <DetailItem\n                  label=\"個案戶籍地址\"\n                  :value=\"selectedFeature.properties.detail.個案戶籍地址 || '無資料'\"\n                />\n                <DetailItem\n                  label=\"個案居住地址\"\n                  :value=\"selectedFeature.properties.detail.個案居住地址 || '無資料'\"\n                />\n              </div>\n              <div v-else class=\"text-muted small\">此服務點缺少 detail 資料</div>\n\n              <div class=\"pb-2\">\n                <div class=\"my-title-xs-gray pb-1\">\n                  服務項目列表 ({{ selectedFeature.properties.serviceItems.length }})\n                </div>\n\n                <div v-if=\"selectedFeature.properties.serviceItems.length > 0\" class=\"pb-1\">\n                  <div class=\"table-responsive\">\n                    <table class=\"table w-100 mb-0\">\n                      <thead class=\"sticky-top my-table-thead\">\n                        <tr class=\"text-center text-nowrap\">\n                          <th class=\"p-1\">\n                            <span class=\"my-title-xs-gray text-nowrap\">服務項目代碼</span>\n                          </th>\n                          <th class=\"p-1\">\n                            <span class=\"my-title-xs-gray text-nowrap\">單價</span>\n                          </th>\n                          <th class=\"p-1\">\n                            <span class=\"my-title-xs-gray text-nowrap\">服務時間</span>\n                          </th>\n                          <th class=\"p-1\">\n                            <span class=\"my-title-xs-gray text-nowrap\">總時間</span>\n                          </th>\n                          <!-- <th class=\"p-1\">\n                            <span class=\"my-title-xs-gray text-nowrap\">row_id</span>\n                          </th> -->\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <tr\n                          v-for=\"(item, index) in selectedFeature.properties.serviceItems\"\n                          :key=\"item.row_id || index\"\n                          class=\"text-center text-nowrap border-bottom\"\n                        >\n                          <td\n                            class=\"border-0 text-nowrap text-truncate p-0\"\n                            style=\"max-width: 80px\"\n                          >\n                            <div class=\"my-content-xs-black px-3 py-2\">\n                              {{ item.服務項目代碼 || 'N/A' }}\n                            </div>\n                          </td>\n                          <td\n                            class=\"border-0 text-nowrap text-truncate p-0\"\n                            style=\"max-width: 80px\"\n                          >\n                            <div class=\"my-content-xs-black px-3 py-2\">\n                              {{ item.單價 || item.unitPrice || 'N/A' }}\n                            </div>\n                          </td>\n                          <td\n                            class=\"border-0 text-nowrap text-truncate p-0\"\n                            style=\"max-width: 80px\"\n                          >\n                            <div class=\"my-content-xs-black px-3 py-2\">\n                              {{\n                                `${item.hour_start || 'N/A'}:${(item.min_start || 0).toString().padStart(2, '0')} - ${item.hour_end || 'N/A'}:${(item.min_end || 0).toString().padStart(2, '0')}`\n                              }}\n                            </div>\n                          </td>\n                          <td\n                            class=\"border-0 text-nowrap text-truncate p-0\"\n                            style=\"max-width: 80px\"\n                          >\n                            <div class=\"my-content-xs-black px-3 py-2\">\n                              {{ (item.hour_total || 0) > 0 ? `${item.hour_total || 0}h` : ''\n                              }}{{ item.min_total || 0 }}m\n                            </div>\n                          </td>\n                          <!-- <td\n                            class=\"border-0 text-nowrap text-truncate p-0\"\n                            style=\"max-width: 80px\"\n                          >\n                            <div class=\"my-content-xs-black px-3 py-2\">\n                              {{ item.row_id || 'N/A' }}\n                            </div>\n                          </td> -->\n                        </tr>\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n                <div v-else class=\"text-muted\">\n                  <i class=\"fas fa-info-circle me-2\"></i>\n                  此服務點沒有服務項目記錄\n                </div>\n              </div>\n            </div>\n          </template>\n\n          <!-- ⭐ 路線中心點顯示 -->\n          <template v-if=\"isRouteCenterPointObject\">\n            <hr class=\"my-3\" />\n            <div class=\"my-title-sm-black mb-3\">路線中心點資訊</div>\n            <DetailItem label=\"服務人員身分證\" :value=\"serviceProviderLabel\" />\n            <DetailItem label=\"服務日期\" :value=\"serviceDateLabel || '無資料'\" />\n            <DetailItem label=\"中心點編號\" :value=\"selectedFeature.properties.centerIndex\" />\n            <DetailItem\n              label=\"緯度\"\n              :value=\"selectedFeature.properties.緯度?.toFixed(6) || '無資料'\"\n            />\n            <DetailItem\n              label=\"經度\"\n              :value=\"selectedFeature.properties.經度?.toFixed(6) || '無資料'\"\n            />\n\n            <hr class=\"my-2\" />\n            <div class=\"my-content-xs-gray\">\n              <div class=\"mb-1\">\n                <i class=\"fas fa-star me-2 text-warning\"></i>\n                此點為服務人員路線的中心位置\n              </div>\n              <div class=\"mb-1\">\n                <i class=\"fas fa-info-circle me-2 text-info\"></i>\n                中心點座標來自系統計算的路線幾何中心\n              </div>\n            </div>\n          </template>\n        </div>\n      </div>\n    </div>\n\n    <!-- 📭 無點擊地圖上物件的空狀態 -->\n    <div v-else class=\"flex-grow-1 d-flex align-items-center justify-content-center\">\n      <div class=\"text-center\">\n        <div class=\"my-title-md-gray p-3\">沒有點擊地圖上的物件</div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n  .my-table-thead {\n    border-bottom: 2px solid var(--my-color-gray-300) !important;\n  }\n</style>\n","<script>\n  export default {\n    name: 'DetailItem',\n    props: {\n      label: {\n        type: String,\n        required: true,\n      },\n      value: {\n        type: [String, Number, Boolean, Object],\n        required: true,\n      },\n    },\n  };\n</script>\n\n<template>\n  <div class=\"pb-2\">\n    <div class=\"my-title-xs-gray pb-1\">{{ label }}</div>\n    <div class=\"my-content-sm-black pb-1\">{{ value }}</div>\n  </div>\n</template>\n\n<style scoped>\n  /* Add any component-specific styles here if needed */\n  .lead {\n    word-wrap: break-word; /* Ensure long values wrap */\n  }\n\n  .my-resizer-middle {\n    background-color: white;\n    position: relative;\n    border-top: 1px solid var(--my-color-gray-200); /* 上邊框分隔線 */\n    border-bottom: 1px solid var(--my-color-gray-200); /* 下邊框分隔線 */\n  }\n</style>\n","import { render } from \"./DetailItem.vue?vue&type=template&id=0cd54acc&scoped=true\"\nimport script from \"./DetailItem.vue?vue&type=script&lang=js\"\nexport * from \"./DetailItem.vue?vue&type=script&lang=js\"\n\nimport \"./DetailItem.vue?vue&type=style&index=0&id=0cd54acc&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0cd54acc\"]])\n\nexport default __exports__","import { render } from \"./PropertiesTab.vue?vue&type=template&id=59855172&scoped=true\"\nimport script from \"./PropertiesTab.vue?vue&type=script&lang=js\"\nexport * from \"./PropertiesTab.vue?vue&type=script&lang=js\"\n\nimport \"./PropertiesTab.vue?vue&type=style&index=0&id=59855172&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-59855172\"]])\n\nexport default __exports__","import { render } from \"./RightView.vue?vue&type=template&id=948a12aa\"\nimport script from \"./RightView.vue?vue&type=script&lang=js\"\nexport * from \"./RightView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<script>\n  // 🔧 Vue Composition API 引入\n  import { ref, watch, nextTick } from 'vue';\n  // 🧩 子組件引入\n  import MapTab from '../tabs/MapTab.vue';\n  import DashboardTab from '../tabs/DashboardTab.vue';\n\n  export default {\n    name: 'UpperView',\n\n    /**\n     * 🧩 組件註冊 (Component Registration)\n     * 註冊上半部面板內使用的子組件\n     */\n    components: {\n      MapTab,\n      DashboardTab,\n    },\n\n    /**\n     * 🔧 組件屬性定義 (Component Props)\n     * 接收來自父組件的配置和狀態數據\n     */\n    props: {\n      activeUpperTab: { type: String, default: 'map' },\n      mainPanelWidth: { type: Number, default: 60 },\n      contentHeight: { type: Number, default: 500 },\n      showTainanLayer: { type: Boolean, default: false },\n      selectedFilter: { type: String, default: '' },\n      zoomLevel: { type: Number, default: 11 },\n      isPanelDragging: { type: Boolean, default: false },\n      activeMarkers: { type: Number, default: 0 },\n    },\n\n    /**\n     * 📡 組件事件定義 (Component Events)\n     * 定義向父組件發送的事件類型\n     */\n    emits: [\n      'update:activeUpperTab', // 更新作用中分頁\n      'update:zoomLevel', // 更新地圖縮放等級\n      'update:currentCoords', // 更新當前座標\n      'update:activeMarkers', // 更新作用中標記數量\n      'show-service-point-detail', // 顯示服務點詳細資訊\n    ],\n\n    /**\n     * 🔧 組件設定函數 (Component Setup)\n     * 使用 Composition API 設定組件邏輯\n     */\n    setup(props, { emit }) {\n      // 📚 子組件引用 (Child Component References)\n      /** 🗺️ 地圖視圖組件引用 */\n      const MapTab = ref(null);\n      /** 📊 儀表板視圖組件引用 */\n      const DashboardTab = ref(null);\n      /** 📊 儀表板容器引用 (用於控制滑鼠事件) */\n      const dashboardContainerRef = ref(null);\n\n      /**\n       * 👀 監聽拖曳狀態和分頁變化 (Watch Dragging State and Tab Changes)\n       * 調整儀表板容器的滑鼠指標事件，防止拖曳時的干擾\n       */\n      watch(\n        [() => props.isPanelDragging, () => props.activeUpperTab],\n        ([dragging, tab]) => {\n          nextTick(() => {\n            if (dashboardContainerRef.value) {\n              if (dragging && tab === 'dashboard') {\n                // 拖曳時禁用儀表板的滑鼠事件\n                dashboardContainerRef.value.style.pointerEvents = 'none';\n                console.log('MainContent: Dashboard container pointer-events set to none');\n              } else {\n                // 恢復儀表板的滑鼠事件\n                dashboardContainerRef.value.style.pointerEvents = 'auto';\n                console.log(\n                  'MainContent: Dashboard container pointer-events set to auto (dragging:',\n                  dragging,\n                  ', tab:',\n                  tab,\n                  ')'\n                );\n              }\n            }\n          });\n        },\n        { immediate: true }\n      ); // immediate: true 表示立即執行一次\n\n      /**\n       * 👀 監聽分頁變化 (Watch Tab Changes)\n       * 當切換分頁時觸發相應的更新動作，確保組件正常顯示\n       */\n      watch(\n        () => props.activeUpperTab,\n        (newTab, oldTab) => {\n          console.log('🔄 UpperView: Tab changed from', oldTab, 'to', newTab);\n\n          // 使用 v-show 後組件不會被銷毀，只需要在切換到地圖時刷新尺寸\n          if (newTab === 'map' && oldTab && oldTab !== 'map') {\n            nextTick(() => {\n              if (MapTab.value) {\n                console.log('🗺️ UpperView: Refreshing map size after showing map tab');\n                // 延遲執行，確保容器從隱藏狀態變為可見後再刷新尺寸\n                setTimeout(() => {\n                  if (MapTab.value && props.activeUpperTab === 'map') {\n                    MapTab.value.invalidateSize();\n                    console.log('🗺️ UpperView: Map size refreshed successfully');\n                  }\n                }, 100); // 減少延遲時間，因為現在不需要等待組件重新創建\n              }\n            });\n          }\n        }\n      );\n\n      /**\n       * 👀 監聽面板大小變化 (Watch Panel Size Changes)\n       * 當面板寬度或高度變化時，更新相應的子組件\n       */\n      watch([() => props.mainPanelWidth, () => props.contentHeight], () => {\n        nextTick(() => {\n          if (props.activeUpperTab === 'map' && MapTab.value) {\n            // 🗺️ 重新計算地圖大小，適應新的容器尺寸\n            MapTab.value.invalidateSize();\n\n            // 響應式布局中額外的地圖刷新\n            setTimeout(() => {\n              if (MapTab.value) {\n                MapTab.value.invalidateSize();\n                console.log('🗺️ UpperView: Extra map size invalidation for responsive layout');\n              }\n            }, 200);\n          }\n          // Dashboard現在是純文字統計，不需要重新計算圖表大小\n        });\n      });\n\n      /**\n       * 🎯 高亮顯示指定地圖特徵 (Highlight Feature on Map)\n       * 如果當前不在地圖分頁，會自動切換到地圖分頁再執行高亮\n       *\n       * @param {Object} highlightData - 包含 layerId 和 id 的高亮數據物件\n       */\n      const highlightFeature = (highlightData) => {\n        console.log('🎯 UpperView: highlightFeature called with data:', highlightData);\n\n        // 如果當前不在地圖分頁，先切換到地圖分頁\n        if (props.activeUpperTab !== 'map') {\n          emit('update:activeUpperTab', 'map');\n\n          // 等待分頁切換完成後再執行高亮\n          nextTick(() => {\n            MapTab.value?.highlightFeature(highlightData);\n          });\n        } else {\n          // 如果已經在地圖分頁，直接執行高亮\n          MapTab.value?.highlightFeature(highlightData);\n        }\n      };\n\n      /**\n       * 🔄 重設地圖視圖 (Reset Map View)\n       * 將地圖恢復到初始視圖狀態\n       */\n      const resetView = () => {\n        if (props.activeUpperTab === 'map' && MapTab.value) {\n          MapTab.value.resetView();\n        }\n      };\n\n      /**\n       * 🗺️ 適應台南地區邊界 (Fit to Tainan Bounds)\n       * 調整地圖視圖以完整顯示台南地區\n       */\n      const fitToTainanBounds = () => {\n        if (props.activeUpperTab === 'map' && MapTab.value) {\n          MapTab.value.fitToTainanBounds();\n        }\n      };\n\n      /**\n       * 📏 手動刷新地圖尺寸 (Manually Refresh Map Size)\n       * 當容器大小變化但自動偵測失效時使用\n       */\n      const invalidateMapSize = () => {\n        if (props.activeUpperTab === 'map' && MapTab.value) {\n          MapTab.value.invalidateSize();\n        }\n      };\n\n      /**\n       * 🔄 重試地圖初始化 (Retry Map Initialization)\n       * 當地圖初始化失敗時手動重試\n       */\n      const retryMapInitialization = () => {\n        if (props.activeUpperTab === 'map' && MapTab.value) {\n          MapTab.value.retryMapInitialization();\n        }\n      };\n\n      /**\n       * 📊 獲取地圖初始化狀態 (Get Map Initialization Status)\n       * 返回當前地圖的初始化狀態\n       */\n      const getMapInitStatus = () => {\n        if (props.activeUpperTab === 'map' && MapTab.value) {\n          return MapTab.value.mapInitStatus;\n        }\n        return 'not-applicable';\n      };\n\n      return {\n        MapTab, // 地圖組件引用\n        DashboardTab, // 儀表板組件引用\n        dashboardContainerRef, // 儀表板容器引用\n        highlightFeature, // 高亮顯示功能\n        resetView, // 重設視圖功能\n        fitToTainanBounds, // 適應邊界功能\n        invalidateMapSize, // 刷新地圖尺寸功能\n        retryMapInitialization, // 重試地圖初始化功能\n        getMapInitStatus, // 獲取地圖初始化狀態\n      };\n    },\n  };\n</script>\n\n<template>\n  <div class=\"d-flex flex-column my-bgcolor-gray-200 h-100\">\n    <div class=\"flex-grow-1 overflow-hidden position-relative\">\n      <!-- 統一的導航按鈕組 -->\n      <div class=\"position-absolute top-0 start-0 m-3\" style=\"z-index: 1000\">\n        <div class=\"d-flex align-items-center rounded-pill shadow my-blur gap-1 p-2\">\n          <!-- 🗺️ 地圖視圖按鈕 (Map View Button) -->\n          <button\n            class=\"btn rounded-circle border-0 d-flex align-items-center justify-content-center my-btn-transparent my-font-size-xs\"\n            :class=\"{\n              'my-btn-blue': activeUpperTab === 'map',\n            }\"\n            @click=\"$emit('update:activeUpperTab', 'map')\"\n            style=\"width: 30px; height: 30px\"\n            title=\"地圖視圖\"\n          >\n            <i class=\"fas fa-map\"></i>\n          </button>\n          <!-- 📊 儀表板按鈕 (Dashboard Button) -->\n          <button\n            class=\"btn rounded-circle border-0 d-flex align-items-center justify-content-center my-btn-transparent my-font-size-xs\"\n            :class=\"{\n              'my-btn-blue': activeUpperTab === 'dashboard',\n            }\"\n            @click=\"$emit('update:activeUpperTab', 'dashboard')\"\n            style=\"width: 30px; height: 30px\"\n            title=\"資料儀表板\"\n          >\n            <i class=\"fas fa-chart-bar\"></i>\n          </button>\n        </div>\n      </div>\n\n      <!-- 地圖分頁內容-->\n      <div v-show=\"activeUpperTab === 'map'\" class=\"h-100\">\n        <MapTab\n          ref=\"MapTab\"\n          :showTainanLayer=\"showTainanLayer\"\n          :selectedFilter=\"selectedFilter\"\n          :zoomLevel=\"zoomLevel\"\n          :maxCount=\"maxCount\"\n          @update:zoomLevel=\"$emit('update:zoomLevel', $event)\"\n          @update:currentCoords=\"$emit('update:currentCoords', $event)\"\n          @update:activeMarkers=\"$emit('update:activeMarkers', $event)\"\n          @show-service-point-detail=\"$emit('show-service-point-detail', $event)\"\n        />\n      </div>\n\n      <!-- 儀表板分頁內容 -->\n      <div\n        v-show=\"activeUpperTab === 'dashboard'\"\n        ref=\"dashboardContainerRef\"\n        class=\"h-100 overflow-auto pt-5\"\n      >\n        <!-- 🎛️ 為導航按鈕組預留空間 (Reserve Space for Navigation Buttons) -->\n        <div style=\"height: 40px\"></div>\n        <DashboardTab\n          ref=\"DashboardTab\"\n          :containerHeight=\"contentHeight\"\n          :isPanelDragging=\"isPanelDragging\"\n          :activeMarkers=\"activeMarkers\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<style scoped></style>\n","<script>\n  /**\n   * MapTab.vue\n   *\n   * Purpose:\n   * - Owns the Leaflet map lifecycle, rendering, interactions, and feature layers.\n   * - Binds popups for service routes and service points.\n   * - For maintainability, this file is organized into clearly labeled sections.\n   *\n   * Notes:\n   * - Do NOT change logic, UI, or data flows in this file during refactors.\n   * - Add comments and section headers only to improve readability.\n   * - Keep function names and signatures unchanged.\n   */\n  // 🔧 Vue Composition API 引入 (Vue Composition API Imports)\n  import { ref, onMounted, onUnmounted, watch, nextTick, computed } from 'vue'; // 引入 Vue 3 響應式 API\n  import L from 'leaflet'; // 引入 Leaflet 地圖庫\n  import 'leaflet/dist/leaflet.css'; // 引入 Leaflet 預設樣式\n  import { useDataStore } from '@/stores/dataStore.js'; // 引入資料存儲\n  import { useDefineStore } from '@/stores/defineStore.js'; // 引入定義存儲\n\n  // 🔧 修復 Leaflet 預設圖標問題 (Fix Leaflet Default Icon Issues)\n  import icon from 'leaflet/dist/images/marker-icon.png'; // 引入標準標記圖標\n  import iconShadow from 'leaflet/dist/images/marker-shadow.png'; // 引入標記陰影圖標\n  import iconRetina from 'leaflet/dist/images/marker-icon-2x.png'; // 引入高解析度標記圖標\n\n  // 刪除預設圖標 URL 獲取方法，避免 webpack 打包問題\n  delete L.Icon.Default.prototype._getIconUrl;\n  // 重新設定 Leaflet 預設圖標配置\n  L.Icon.Default.mergeOptions({\n    iconRetinaUrl: iconRetina, // 高解析度圖標 URL\n    iconUrl: icon, // 標準圖標 URL\n    shadowUrl: iconShadow, // 陰影圖標 URL\n  });\n\n  export default {\n    name: 'MapTab', // 組件名稱\n\n    // 🔧 組件屬性定義 (Component Props Definition)\n    props: {\n      zoomLevel: { type: Number, default: 11 }, // 地圖縮放等級，預設為 11\n      isPanelDragging: { type: Boolean, default: false }, // 面板是否正在拖曳，預設為 false\n    },\n\n    // 📡 組件事件定義 (Component Events Definition)\n    emits: [\n      'update:zoomLevel',\n      'update:currentCoords',\n      'update:activeMarkers',\n      'show-service-point-detail',\n    ],\n\n    // 🔧 組件設定函數 (Component Setup Function)\n    setup(props, { emit }) {\n      // 📦 資料存儲實例 (Data Store Instance)\n      const dataStore = useDataStore(); // 獲取 Pinia 資料存儲實例\n      const mapStore = useDefineStore(); // 獲取地圖存儲實例\n\n      // 🗺️ 地圖相關變數 (Map Related Variables)\n      const mapContainer = ref(null); // 地圖容器 DOM 元素引用\n      let mapInstance = null; // 地圖實例，使用普通變數而非 ref 避免響應式開銷\n      let currentTileLayer = null; // 當前底圖圖層實例\n      let layerGroups = {}; // 存放所有圖層群組的物件\n      // 注意：路徑規劃和路徑優化點擊模式相關變數已移除\n\n      // 🖱️ 右鍵菜單相關變數 (Context Menu Related Variables)\n      const contextMenu = ref(null); // 右鍵菜單 DOM 引用\n      const showContextMenu = ref(false); // 是否顯示右鍵菜單\n      const contextMenuPosition = ref({ x: 0, y: 0 }); // 右鍵菜單位置\n      const selectedAnalysisFeature = ref(null); // 選中的分析要素\n\n      // 🎛️ 地圖控制狀態 (Map Control States)\n      const isMapReady = ref(false); // 地圖是否已準備就緒的狀態標記\n      /** 🗺️ 動態地圖容器 ID（避免多實例衝突） */\n      const mapContainerId = ref(`leaflet-map-${Math.random().toString(36).substr(2, 9)}`);\n\n      // 🎯 地圖視圖狀態管理 (Map View State Management)\n      let previousViewState = null; // 保存高亮前的視圖狀態\n\n      // 移除高亮相關邏輯，因為現在使用 time_total 來決定大小\n\n      // =============================================================\n      // Popup Content Helpers\n      // =============================================================\n      // 🎯 創建簡化的 popup 內容函數，只顯示編號、姓名、個案居住地址\n      const createServicePointContent = (props) => {\n        // 處理姓名和性別顯示\n        const name = props.姓名 || props.name || '';\n        const gender = props.性別 || props.gender || '';\n        const genderInitial = gender === '男性' ? 'M' : gender === '女性' ? 'F' : '';\n        const colorClass =\n          gender === '男性' ? 'my-color-blue' : gender === '女性' ? 'my-color-red' : '';\n        const nameWithGender = name && genderInitial ? `${name}(${genderInitial})` : name;\n\n        return `\n          <div>\n            <div class=\"pb-2\">\n              <div class=\"my-title-xs-gray pb-1\">編號</div>\n              <div class=\"my-content-sm-black pb-1\">${props.編號 || props.id || 'N/A'}</div>\n            </div>\n            <div class=\"pb-2\">\n              <div class=\"my-title-xs-gray pb-1\">姓名</div>\n              <div class=\"my-content-sm-black pb-1\"><span class=\"${colorClass}\">${nameWithGender || 'N/A'}</span></div>\n            </div>\n            <div class=\"pb-2\">\n              <div class=\"my-title-xs-gray pb-1\">個案居住地址</div>\n              <div class=\"my-content-sm-black pb-1\">${props.個案居住地址 || props.address || 'N/A'}</div>\n            </div>\n          </div>`;\n      };\n\n      // =============================================================\n      // Computed Flags & Basic Utilities\n      // =============================================================\n      // 📊 計算屬性：檢查是否有任何圖層可見 (Computed Property: Check if Any Layer is Visible)\n      const isAnyLayerVisible = computed(\n        () => dataStore.getAllLayers().some((l) => l.visible && l.geoJsonData) // 檢查所有圖層中是否有可見且有資料的圖層\n      );\n\n      // 🏗️ 創建地圖實例函數 (Create Map Instance Function)\n      const createMap = () => {\n        console.log('[MapTab] createMap 被調用');\n\n        // 檢查地圖容器是否存在\n        if (!mapContainer.value) {\n          console.error('[MapTab] 地圖容器不存在，無法創建地圖');\n          return false;\n        }\n\n        // 檢查是否已經有地圖實例存在，避免重複創建\n        if (mapInstance) {\n          console.warn('[MapTab] 地圖實例已存在，跳過創建');\n          return true;\n        }\n\n        // 檢查容器尺寸是否有效\n        const rect = mapContainer.value.getBoundingClientRect(); // 獲取容器的邊界矩形\n        console.log('[MapTab] 容器尺寸:', {\n          width: rect.width,\n          height: rect.height,\n          top: rect.top,\n          left: rect.left,\n          containerId: mapContainer.value.id,\n          containerClasses: mapContainer.value.className,\n        });\n\n        // 如果寬度或高度為零，無法創建有效的地圖\n        if (rect.width === 0 || rect.height === 0) {\n          console.error('[MapTab] 容器尺寸無效，無法創建地圖', {\n            width: rect.width,\n            height: rect.height,\n          });\n          return false;\n        }\n\n        // 檢查 Leaflet 是否可用\n        if (typeof L === 'undefined') {\n          console.error('[MapTab] Leaflet 庫未載入');\n          return false;\n        }\n\n        try {\n          console.log('[MapTab] 開始創建 Leaflet 地圖實例');\n\n          // 創建 Leaflet 地圖實例，使用 mapStore 中保存的視圖狀態\n          mapInstance = L.map(mapContainer.value, {\n            center: mapStore.mapView.center, // 使用保存的地圖中心點\n            zoom: mapStore.mapView.zoom, // 使用保存的縮放等級\n            zoomControl: false, // 禁用預設縮放控制項\n            attributionControl: false, // 禁用預設版權資訊控制項\n            fadeAnimation: true, // 啟用淡入淡出動畫\n            zoomAnimation: true, // 啟用縮放動畫\n          });\n\n          console.log('[MapTab] Leaflet 地圖實例創建成功');\n\n          // 綁定地圖事件處理器\n          mapInstance.on('zoomend', handleZoomEnd); // 縮放結束事件\n          mapInstance.on('moveend', handleMoveEnd); // 移動結束事件\n\n          // 綁定地圖點擊事件 - 點擊空白處清除選取\n          mapInstance.on('click', function (e) {\n            if (!e.originalEvent.target.closest('.leaflet-interactive')) {\n              // 如果點擊的是地圖空白處，清除所有選取和高亮顯示\n              console.log('🎯 MapTab: 點擊空白處，清除選取和高亮顯示');\n              // 刪除地圖上的任何臨時標記\n              mapInstance.eachLayer((layer) => {\n                if (\n                  layer.options &&\n                  layer.options.icon &&\n                  (layer.options.icon.options?.className === 'first-service-point-marker' ||\n                    layer.options.icon.options?.className === 'highlight-service-point-marker')\n                ) {\n                  mapInstance.removeLayer(layer);\n                }\n              });\n              // 清除選中狀態和重設所有圖層樣式\n              dataStore.setSelectedFeature(null);\n              resetAllLayerStyles();\n            }\n          });\n\n          // 設定 popup 面板的 z-index\n          const popupPane = mapInstance.getPane('popupPane');\n          if (popupPane) {\n            popupPane.style.zIndex = 2200;\n          }\n\n          // 設定地圖準備就緒狀態\n          isMapReady.value = true; // 標記地圖已準備就緒\n\n          // 如果已經處於點擊模式，確保樣式正確應用\n          // 注意：路徑規劃點擊模式相關代碼已移除\n\n          console.log('[MapTab] 地圖創建成功，初始化完成'); // 輸出成功訊息\n          return true; // 返回成功狀態\n        } catch (error) {\n          console.error('[MapTab] 地圖創建失敗:', error);\n\n          // 清理失敗的地圖實例\n          if (mapInstance) {\n            try {\n              mapInstance.remove();\n            } catch (cleanupError) {\n              console.warn('[MapTab] 清理失敗的地圖實例時發生錯誤:', cleanupError);\n            }\n            mapInstance = null;\n          }\n\n          return false; // 返回失敗狀態\n        }\n      };\n\n      // 📡 地圖事件處理函數 (Map Event Handler Functions)\n\n      // 處理縮放結束事件\n      const handleZoomEnd = () => {\n        if (mapInstance) {\n          // 確保地圖實例存在\n          const zoom = mapInstance.getZoom();\n          const center = mapInstance.getCenter();\n          // 保存地圖視圖狀態到 mapStore\n          mapStore.setMapView([center.lat, center.lng], zoom);\n          emit('update:zoomLevel', zoom); // 發送縮放等級更新事件\n        }\n      };\n\n      // 處理移動結束事件\n      const handleMoveEnd = () => {\n        if (mapInstance) {\n          // 確保地圖實例存在\n          const center = mapInstance.getCenter();\n          const zoom = mapInstance.getZoom();\n          // 保存地圖視圖狀態到 mapStore\n          mapStore.setMapView([center.lat, center.lng], zoom);\n          emit('update:currentCoords', center); // 發送座標更新事件\n        }\n      };\n\n      // 🗺️ 設定底圖函數 (Set Basemap Function)\n      const setBasemap = () => {\n        // 檢查地圖實例和準備狀態\n        if (!mapInstance || !isMapReady.value) return;\n\n        // 步驟一：無論如何，都先移除舊的底圖圖層\n        // 這樣可以確保在切換到「無底圖」時，舊的地圖會被正確清除。\n        if (currentTileLayer) {\n          mapInstance.removeLayer(currentTileLayer);\n          currentTileLayer = null;\n        }\n\n        // 步驟二：查找新的底圖設定\n        const config = mapStore.basemaps.find((b) => b.value === mapStore.selectedBasemap);\n\n        // 步驟三：只有在找到設定檔(config)且 URL 不是空值(falsy)時，才加入新的圖層\n        // 由於空字串 '' 是 falsy 值，這個判斷式會自動過濾掉 url 為 '' 的情況。\n        if (config && config.url) {\n          currentTileLayer = L.tileLayer(config.url, { attribution: '' });\n          currentTileLayer.addTo(mapInstance);\n        }\n\n        // 動態設定地圖容器背景色\n        const mapContainerElement = mapContainer.value;\n        if (mapContainerElement) {\n          if (mapStore.selectedBasemap === 'blank') {\n            // 空白地圖時設為白色背景\n            mapContainerElement.style.backgroundColor = 'var(--my-color-white)';\n          } else if (mapStore.selectedBasemap === 'black') {\n            // 全黑底圖時設為黑色背景\n            mapContainerElement.style.backgroundColor = 'var(--my-color-gray-800)';\n          } else {\n            // 其他底圖時設為透明，讓底圖顯示\n            mapContainerElement.style.backgroundColor = 'transparent';\n          }\n        }\n      };\n\n      // 🎨 創建要素圖層函數 (Create Feature Layer Function)\n      const createFeatureLayer = (layer) => {\n        // 檢查圖層是否有資料\n        if (!layer.geoJsonData) return null;\n\n        // 解構圖層屬性\n        const { layerName, colorName, type } = layer; // 獲取圖層名稱、顏色和類型\n        const storeLayerId = layer.layerId; // 保存 store 圖層 ID 供事件處理使用\n        const storeLayerName = layer.layerName; // 保存 store 圖層名稱\n\n        // 創建 GeoJSON 圖層\n        const geoJsonLayer = L.geoJSON(layer.geoJsonData, {\n          // 點要素轉換函數\n          pointToLayer: (feature, latlng) => {\n            // 分析圖層的特殊處理\n            if (layer.isAnalysisLayer) {\n              if (feature.properties.type === 'point-analysis') {\n                // 分析點：綠色加號標記\n                const icon = L.divIcon({\n                  html: `\n                  <div class=\"d-flex align-items-center justify-content-center my-color-green my-font-size-sm\">\n                    <i class=\"fas fa-plus\"></i>\n                  </div>\n                  `,\n                  className: 'analysis-point-icon',\n                  iconSize: [16, 16],\n                  iconAnchor: [8, 8],\n                  popupAnchor: [0, -8],\n                });\n                const marker = L.marker(latlng, { icon });\n\n                return marker;\n              } else if (feature.properties.type === 'circle-analysis') {\n                // 分析圓圈：2公里半徑\n                const circle = L.circle(latlng, {\n                  radius: feature.properties.radius,\n                  color: 'var(--my-color-green)',\n                  weight: 1,\n                  opacity: 0.8,\n                  fillColor: 'var(--my-color-green)',\n                  fillOpacity: 0.2,\n                });\n\n                return circle;\n              }\n            } else if (layer.isRoutePlanningLayer) {\n              if (feature.properties.type === 'route-planning-point') {\n                // 路徑規劃點：橘色數字標記\n                const order = feature.properties.order || 1;\n                const isCompleted = feature.properties.status === 'completed';\n\n                // 根據完成狀態選擇不同的樣式\n                const backgroundColor = isCompleted\n                  ? 'var(--my-color-gray-500)'\n                  : 'var(--my-color-orange)';\n                const borderColor = isCompleted ? 'var(--my-color-gray-400)' : 'white';\n                const textColor = isCompleted\n                  ? 'var(--my-color-gray-200)'\n                  : 'var(--my-color-white)';\n\n                const icon = L.divIcon({\n                  html: `\n                  <div class=\"d-flex align-items-center justify-content-center my-font-size-xs fw-bold\"\n                       style=\"background: ${backgroundColor}; color: ${textColor}; border-radius: 50%; width: 20px; height: 20px; border: 2px solid ${borderColor}; box-shadow: 0 2px 4px rgba(0,0,0,0.3);\">\n                    ${order}\n                  </div>\n                  `,\n                  className: `route-planning-point-icon ${isCompleted ? 'completed' : 'active'}`,\n                  iconSize: [24, 24],\n                  iconAnchor: [12, 12],\n                  popupAnchor: [0, -12],\n                });\n                const marker = L.marker(latlng, { icon });\n\n                return marker;\n              }\n            } else if (layer.isRouteOptimizationLayer) {\n              if (feature.properties.type === 'optimization-point') {\n                // 路徑優化點：紫色數字標記\n                const order = feature.properties.order || 1;\n                const isCompleted = feature.properties.status === 'completed';\n\n                // 根據完成狀態選擇不同的樣式\n                const backgroundColor = isCompleted\n                  ? 'var(--my-color-gray-500)'\n                  : 'var(--my-color-purple)';\n                const borderColor = isCompleted ? 'var(--my-color-gray-400)' : 'white';\n                const textColor = isCompleted\n                  ? 'var(--my-color-gray-200)'\n                  : 'var(--my-color-white)';\n\n                const icon = L.divIcon({\n                  html: `\n                  <div class=\"d-flex align-items-center justify-content-center my-font-size-xs fw-bold\"\n                       style=\"background: ${backgroundColor}; color: ${textColor}; border-radius: 50%; width: 20px; height: 20px; border: 2px solid ${borderColor}; box-shadow: 0 2px 4px rgba(0,0,0,0.3);\">\n                    ${order}\n                  </div>\n                  `,\n                  className: `route-optimization-point-icon ${isCompleted ? 'completed' : 'active'}`,\n                  iconSize: [24, 24],\n                  iconAnchor: [12, 12],\n                  popupAnchor: [0, -12],\n                });\n                const marker = L.marker(latlng, { icon });\n\n                return marker;\n              }\n            } else if (type === 'point') {\n              // 一般點類型\n              // 檢查是否為路線中心點\n              if (feature.properties.type === 'route-center-point') {\n                // ============================================\n                // 路線中心點：星形標記，較小尺寸\n                // ============================================\n                // 優先使用feature.properties中的顏色，如果沒有則使用layer的colorName\n                let pointColor = `var(--my-color-${colorName})`; // 預設使用layer顏色\n\n                if (feature.properties.fillColor) {\n                  pointColor = `var(--my-color-${feature.properties.fillColor})`;\n                } else if (feature.properties.routeColor) {\n                  pointColor = `var(--my-color-${feature.properties.routeColor})`;\n                }\n\n                // 準備交通時間標籤（從屬性取得，若無則以分鐘轉換為 h/m）\n                const trafficTimeLabel = (() => {\n                  const label = feature.properties.traffic_time_label;\n                  if (label) return label;\n                  const minutes = feature.properties.traffic_time_minutes;\n                  if (typeof minutes === 'number' && !isNaN(minutes)) {\n                    const hours = Math.floor(minutes / 60);\n                    const mins = minutes % 60;\n                    return hours > 0 ? `${hours}h${mins}m` : `${mins}m`;\n                  }\n                  return 'N/A';\n                })();\n\n                const icon = L.divIcon({\n                  html: `\n                  <div style=\"transform: translate(-50%, -50%); background: ${pointColor}; color: #fff; display: inline-block; padding: 2px 6px; font-weight: 700; line-height: 1; white-space: nowrap; border-radius: 8px; font-size: 12px;\">\n                    ${trafficTimeLabel}\n                  </div>\n                  `,\n                  className: 'route-center-point-icon',\n                  iconAnchor: [0, 0],\n                  popupAnchor: [0, -10],\n                });\n\n                const marker = L.marker(latlng, { icon });\n\n                // 不綁定 hover tooltip（需求：不需要 hover 功能）\n\n                return marker;\n              } else if (feature.properties.routeOrder) {\n                // ============================================\n                // 新基準中央服務紀錄點位：根據 time_total 決定大小\n                // ============================================\n                const routeOrder = feature.properties.routeOrder; // 服務順序編號\n                const timeTotal = feature.properties.time_total || 0; // 服務總時間（分鐘）\n\n                // ============================================\n                // 圓面積計算邏輯：1小時 = 10px × 10px × π\n                // ============================================\n                // 數學原理：\n                // - 圓面積公式：A = π × r²\n                // - 半徑計算：r = √(A/π)\n                // - 直徑計算：d = 2r\n                // - 標準：1小時 = π × 10² = 314.16 平方像素\n                const timeInHours = timeTotal / 60; // 將分鐘轉換為小時\n                const areaPerHour = Math.PI * 10 * 10; // 每小時對應的標準面積\n                const totalArea = timeInHours * areaPerHour; // 總面積 = 時間 × 標準面積\n                const radius = Math.sqrt(totalArea / Math.PI); // 計算半徑\n                const size = Math.max(radius * 2, 20); // 直徑，最小 20px 確保可見性\n                const fontSize = 12; // 固定字體大小 12px，確保所有數字清晰可讀\n\n                // 調試信息\n                console.log(\n                  `🎯 Service Point ${routeOrder}: time_total=${timeTotal}min (${timeInHours.toFixed(2)}h), area=${totalArea.toFixed(1)}px², radius=${radius.toFixed(1)}px, size=${size.toFixed(1)}px`\n                );\n\n                // 優先使用feature.properties中的顏色，如果沒有則使用layer的colorName\n                let pointColor = `var(--my-color-${colorName})`; // 預設使用layer顏色\n\n                if (feature.properties.fillColor) {\n                  // 如果fillColor是顏色名稱，轉換為CSS變數\n                  pointColor = `var(--my-color-${feature.properties.fillColor})`;\n                } else if (feature.properties.routeColor) {\n                  // 如果有routeColor，使用它\n                  pointColor = `var(--my-color-${feature.properties.routeColor})`;\n                }\n\n                const icon = L.divIcon({\n                  html: `\n                  <div class=\"d-flex align-items-center justify-content-center fw-bold\"\n                       style=\"background: ${pointColor}; color: white; border-radius: 50%; width: ${size}px; height: ${size}px; font-size: ${fontSize}px; box-shadow: 0 2px 4px rgba(0,0,0,0.3);\">\n                    ${routeOrder}\n                  </div>\n                  `,\n                  className: 'service-route-point-icon',\n                  iconSize: [size, size],\n                  iconAnchor: [size / 2, size / 2],\n                  popupAnchor: [0, -size / 2],\n                });\n\n                const marker = L.marker(latlng, { icon });\n\n                // 移除 tooltip 功能（不需要 hover tooltip）\n\n                return marker;\n              } else {\n                // 一般點類型\n                // 優先使用feature.properties中的顏色，如果沒有則使用layer的colorName\n                let pointColor = `var(--my-color-${colorName})`; // 預設使用layer顏色\n\n                if (feature.properties.fillColor) {\n                  // 如果fillColor是顏色名稱，轉換為CSS變數\n                  pointColor = `var(--my-color-${feature.properties.fillColor})`;\n                } else if (feature.properties.routeColor) {\n                  // 如果有routeColor，使用它\n                  pointColor = `var(--my-color-${feature.properties.routeColor})`;\n                }\n                const icon = L.divIcon({\n                  html: `<div\n                  class=\"rounded-circle\"\n                  style=\"\n                     background-color: ${pointColor};\n                     width: 8px;\n                     height: 8px;\n                   \">\n                   </div>`, // HTML 內容：圓形標記\n                  className: '', // 移除不必要的 CSS 類名\n                  iconSize: [8, 8], // 圖標尺寸\n                  iconAnchor: [4, 4], // 圖標錨點\n                  popupAnchor: [0, -4], // 彈窗錨點\n                });\n                return L.marker(latlng, { icon }); // 返回標記實例\n              }\n            }\n            return null; // 非點類型返回 null\n          },\n          // 樣式設定函數\n          style: (feature) => {\n            // 新基準中央服務紀錄路線的特殊樣式處理\n            if (feature.properties.layerName && feature.properties.layerName.includes('路線')) {\n              // 優先使用routeColor，如果沒有則使用strokeColor（顏色名稱），否則使用預設色\n              let routeColor = 'var(--my-color-orange)'; // 預設顏色\n\n              if (feature.properties.routeColor) {\n                // 如果有routeColor（顏色名稱），轉換為CSS變數\n                routeColor = `var(--my-color-${feature.properties.routeColor})`;\n              } else if (feature.properties.strokeColor) {\n                // 如果有strokeColor（顏色名稱），轉換為CSS變數\n                routeColor = `var(--my-color-${feature.properties.strokeColor})`;\n              }\n\n              return {\n                color: routeColor,\n                weight: feature.properties.strokeWidth || 3, // 路線粗細\n                opacity: feature.properties.strokeOpacity || 0.8, // 路線透明度\n                lineCap: 'round', // 線條端點樣式\n                lineJoin: 'round', // 線條連接樣式\n                dashArray: null, // 實線\n              };\n            }\n            // 路徑規劃路線的特殊樣式處理\n            if (layer.isRoutePlanningLayer && feature.properties.type === 'route-line') {\n              // 使用圖層的顏色，如果沒有則使用預設色\n              const routeColor =\n                feature.properties.routeColor || feature.properties.strokeColor || 'orange';\n              return {\n                color: routeColor.startsWith('--my-color-')\n                  ? routeColor\n                  : `var(--my-color-${routeColor})`,\n                weight: 4, // 路線粗細\n                opacity: 0.8, // 路線透明度\n                lineCap: 'round', // 線條端點樣式\n                lineJoin: 'round', // 線條連接樣式\n                dashArray: null, // 實線\n              };\n            }\n            // 路徑優化路線的特殊樣式處理\n            if (\n              layer.isRouteOptimizationLayer &&\n              feature.properties.type === 'optimized-route-line'\n            ) {\n              // 使用與圖層相同的顏色系統\n              const routeColor = feature.properties.routeColor || 'purple'; // 預設使用 purple\n              return {\n                color: `var(--my-color-${routeColor})`, // 使用動態顏色\n                weight: 4, // 路線粗細\n                opacity: 0.8, // 路線透明度\n                lineCap: 'round', // 線條端點樣式\n                lineJoin: 'round', // 線條連接樣式\n                dashArray: null, // 實線\n              };\n            }\n            // 只有polygon返回預設樣式物件\n            if (layer.type == 'polygon') {\n              //if (feature.properties.fillColor) {\n              return {\n                fillColor: feature.properties.fillColor, // 填充顏色\n                weight: 1, // 邊框粗細\n                opacity: 1, // 邊框透明度\n                color: feature.properties.color || 'white', // 邊框顏色\n                fillOpacity: feature.properties.fillColor ? 0.6 : 0, // 填充透明度\n              };\n            }\n          },\n          // 每個要素的處理函數\n          onEachFeature: (feature, layer) => {\n            // 創建彈窗內容 HTML\n            // const properties = Object.entries(feature.properties.popupData) // 獲取彈窗資料項目\n            //   .map(\n            //     ([key, value]) =>\n            //       `<div class=\"pb-2\">\n            //          <div class=\"my-title-xs-gray pb-1\">${key}</div>\n            //          <div class=\"my-content-sm-black pb-1\">${value}</div>\n            //        </div>` // 格式化每個資料項目\n            //   )\n            //   .join(''); // 合併所有項目\n\n            // 綁定彈窗到圖層\n            // layer.bindPopup(`\n            //   <div class=\"p-2\">\n            //     <div class=\"my-title-sm-gray pb-2\">${layerName}</div>\n            //     ${properties}\n            //   </div>\n            // `);\n\n            // 為分析圖層設定特殊的 popup 配置\n            if (layer.isAnalysisLayer) {\n              layer.bindPopup(\n                `\n                <div class=\"\">\n                  <div class=\"my-title-xs-gray pb-2\">${layerName}</div>\n                  <div class=\"my-content-sm-black\">${feature.properties.name}</div>\n                </div>\n              `,\n                {\n                  className: 'analysis-popup',\n                  offset: [0, -5], // 調整偏移量\n                  closeButton: true,\n                  autoClose: false,\n                  closeOnClick: false,\n                }\n              );\n            } else if (\n              feature.properties.layerName &&\n              feature.properties.layerName.includes('路線')\n            ) {\n              // 新基準中央服務紀錄路線的彈出視窗\n              layer.bindPopup(\n                `\n                  <div class=\"\">\n                    <div class=\"my-title-xs-gray pb-2\">${feature.properties.layerName}</div>\n                    <div class=\"my-content-sm-black\">${feature.properties.name}</div>\n                    <div class=\"my-content-xs-gray pt-1\">服務人員: ${feature.properties.serviceProviderId}</div>\n                    <div class=\"my-content-xs-gray\">服務日期: ${dataStore.selectedServiceDate || '無資料'}</div>\n                    <div class=\"my-content-xs-gray\">服務點數: ${feature.properties.pointCount} 個</div>\n                  </div>\n                `,\n                {\n                  className: 'service-route-popup',\n                  offset: [0, -5],\n                  closeButton: true,\n                  autoClose: false,\n                  closeOnClick: false,\n                }\n              );\n            } else if (layer.isRoutePlanningLayer) {\n              // 根據要素類型設定不同的彈出視窗\n              if (feature.properties.type === 'route-planning-point') {\n                // 路徑規劃點的彈出視窗\n                const isCompleted = feature.properties.status === 'completed';\n                const popupContent = isCompleted\n                  ? `\n                  <div class=\"\">\n                    <div class=\"my-title-xs-gray pb-2\">${layerName}</div>\n                    <div class=\"my-content-sm-black\">${feature.properties.name}</div>\n                    <div class=\"my-content-xs-gray pt-1\">順序: ${feature.properties.order}</div>\n                    <div class=\"my-content-xs-gray\">所屬路線: 路線 ${feature.properties.routeNumber}</div>\n                    <div class=\"my-content-xs-gray\">狀態: 已完成</div>\n                  </div>\n                `\n                  : `\n                  <div class=\"\">\n                    <div class=\"my-title-xs-gray pb-2\">${layerName}</div>\n                    <div class=\"my-content-sm-black\">${feature.properties.name}</div>\n                    <div class=\"my-content-xs-gray pt-1\">順序: ${feature.properties.order}</div>\n                    <div class=\"my-content-xs-gray\">狀態: 規劃中</div>\n                  </div>\n                `;\n\n                layer.bindPopup(popupContent, {\n                  className: `route-planning-popup ${isCompleted ? 'completed' : 'active'}`,\n                  offset: [0, -5],\n                  closeButton: true,\n                  autoClose: false,\n                  closeOnClick: false,\n                });\n              } else if (feature.properties.type === 'route-line') {\n                // 路徑規劃路線的彈出視窗\n                layer.bindPopup(\n                  `\n                  <div class=\"\">\n                    <div class=\"my-title-xs-gray pb-2\">${layerName}</div>\n                    <div class=\"my-content-sm-black\">${feature.properties.name}</div>\n                    <div class=\"my-content-xs-gray pt-1\">總距離: ${feature.properties.distance} km</div>\n                    <div class=\"my-content-xs-gray\">預估時間: ${feature.properties.duration} m</div>\n                    <div class=\"my-content-xs-gray\">路徑點數: ${feature.properties.waypoints}</div>\n                  </div>\n                `,\n                  {\n                    className: 'route-planning-popup route-line-popup',\n                    offset: [0, -5],\n                    closeButton: true,\n                    autoClose: false,\n                    closeOnClick: false,\n                  }\n                );\n              }\n            } else {\n              // 檢查是否為新基準中央服務紀錄點位\n              if (feature.properties.routeOrder && feature.properties.propertyData) {\n                // 新基準中央服務紀錄點位的彈窗（使用簡化的服務點內容）\n                const popupContent = createServicePointContent(feature.properties);\n                layer.bindPopup(popupContent, {\n                  className: 'service-point-popup',\n                  offset: [0, -5],\n                  closeButton: true,\n                  autoClose: true,\n                  closeOnClick: true,\n                });\n              } else {\n                // 一般點類型的彈窗\n                layer.bindPopup(`\n                  <div class=\"\">\n                    <div class=\"my-title-xs-gray pb-2\">${layerName}</div>\n                    <div class=\"my-content-sm-black\">${feature.properties.name}</div>\n                  </div>\n                `);\n              }\n            }\n\n            // 只綁定點擊事件 - 移除所有 highlight 和 tooltip 功能\n            layer.on({\n              // 移除所有滑鼠懸停和離開事件 - 不需要任何 highlight 效果\n              // 點擊事件\n              click: function () {\n                // 注意：路徑規劃點擊模式相關代碼已移除\n\n                // 注意：路徑優化點擊模式相關代碼已移除\n\n                // 分析點不參與選擇，直接返回\n                if (\n                  (layer.isAnalysisLayer || feature.properties.layerId === 'analysis-layer') &&\n                  feature.properties.type === 'point-analysis'\n                ) {\n                  return;\n                }\n\n                // 服務點點擊：打開現有的 popup\n                if (feature.properties.routeOrder && feature.properties.propertyData) {\n                  // 首先關閉地圖上所有現有的 popup，確保同一時間只有一個popup\n                  mapInstance.closePopup();\n\n                  // 直接打開已經綁定的 popup\n                  if (this.openPopup) {\n                    this.openPopup();\n                  }\n                  return;\n                }\n\n                // 路線中心點簡單處理：顯示基本信息\n                if (feature.properties.type === 'route-center-point') {\n                  // 清除之前的選取\n                  dataStore.setSelectedFeature(null);\n                  resetAllLayerStyles();\n\n                  // 創建路線中心點特徵物件\n                  const routeCenterFeature = {\n                    type: 'Feature',\n                    properties: {\n                      ...feature.properties,\n                      type: 'route-center-point-selected',\n                    },\n                  };\n\n                  // 設置到dataStore中\n                  dataStore.setSelectedFeature(routeCenterFeature);\n\n                  // 移除縮放功能 - 不再自動縮放到點擊位置\n\n                  return;\n                }\n\n                // 檢查是否為服務人員圖層的點擊（以 feature.properties.layerId 為準）\n                const isServiceProviderLayer =\n                  storeLayerId && String(storeLayerId).startsWith('service-provider-');\n\n                // 檢查是否已絗選取了相同的要素\n                const isSameFeature =\n                  dataStore.selectedFeature &&\n                  dataStore.selectedFeature.properties &&\n                  dataStore.selectedFeature.properties.id === feature.properties.id;\n\n                if (isSameFeature) {\n                  // 如果點擊的是已經選取的要素，清除選取並回到預設視圖\n                  console.log('🎯 MapTab: 點擊已選取的要素，清除選取');\n                  dataStore.setSelectedFeature(null);\n                  resetAllLayerStyles();\n                  showFullCity();\n                  return;\n                }\n\n                if (\n                  isServiceProviderLayer ||\n                  (feature.properties?.service_items &&\n                    Array.isArray(feature.properties.service_items) &&\n                    feature.properties.service_items.length > 0)\n                ) {\n                  console.log('🎯 MapTab: 檢測到服務人員圖層點擊');\n                  console.log('🎯 MapTab: feature.properties:', feature.properties);\n                  console.log('🎯 MapTab: layer信息 (from store layer):', {\n                    layerId: storeLayerId,\n                    layerName: storeLayerName,\n                  });\n\n                  // 清除之前的選取，確保單一選擇\n                  dataStore.setSelectedFeature(null);\n                  resetAllLayerStyles();\n\n                  // 找到對應的圖層資訊\n                  const storeLayer = dataStore.findLayerById(storeLayerId) ||\n                    dataStore.findLayerById(feature.properties.layerId) || {\n                      layerId: storeLayerId,\n                      layerName: storeLayerName,\n                    };\n\n                  console.log('🎯 MapTab: storeLayer:', storeLayer);\n\n                  // 應用地圖上的高亮樣式\n                  this._originalStyle = {\n                    weight: this.options?.weight,\n                    color: this.options?.color,\n                    fillOpacity: this.options?.fillOpacity,\n                  };\n\n                  // 完全移除高亮顯示\n\n                  // 將圖層置於最前方\n                  if (this.bringToFront) {\n                    this.bringToFront();\n                  }\n\n                  // 使用共用的工具函數創建服務項目資料\n                  try {\n                    const { serviceItemsData } = dataStore.createServiceItemsData(\n                      feature,\n                      storeLayer\n                    );\n\n                    console.log('🎯 MapTab: 成功創建 serviceItemsData:', serviceItemsData);\n                    console.log(\n                      '🎯 MapTab: serviceItems數量:',\n                      serviceItemsData.serviceItems?.length || 0\n                    );\n\n                    // 創建完整的服務項目特徵物件，這將觸發右側面板顯示\n                    const serviceItemsFeature = {\n                      type: 'Feature',\n                      properties: {\n                        ...serviceItemsData.servicePoint,\n                        serviceItems: serviceItemsData.serviceItems,\n                        servicePointInfo: serviceItemsData.servicePointInfo,\n                        id: feature.properties.id,\n                        type: 'service-items', // 關鍵：設置類型為service-items\n                        layerId: storeLayerId,\n                        layerName: storeLayerName,\n                      },\n                    };\n\n                    console.log('🎯 MapTab: 創建 serviceItemsFeature:', serviceItemsFeature);\n\n                    // 設置到dataStore中，這會觸發右側面板更新\n                    dataStore.setSelectedFeature(serviceItemsFeature);\n                    console.log('🎯 MapTab: 已設置 selectedFeature 到 dataStore');\n\n                    // 同時發送事件到父組件，確保事件鏈完整\n                    emit('show-service-point-detail', serviceItemsData);\n                    console.log('🎯 MapTab: 已發送 show-service-point-detail 事件');\n\n                    // 移除縮放和 popup 功能 - 只保留選擇功能\n                    console.log('🎯 MapTab: 服務點已選擇，不再縮放或顯示 popup');\n                  } catch (error) {\n                    console.error('❌ MapTab: 創建服務項目資料時發生錯誤:', error);\n\n                    // 即使出錯也要保持基本的選擇功能\n                    const basicFeature = {\n                      type: 'Feature',\n                      properties: {\n                        ...feature.properties,\n                        layerId: layer.layerId,\n                        layerName: layer.layerName,\n                      },\n                    };\n                    dataStore.setSelectedFeature(basicFeature);\n                  }\n                } else {\n                  // 清除之前的選取，確保單一選擇\n                  dataStore.setSelectedFeature(null);\n                  resetAllLayerStyles();\n\n                  // 設定新的選取\n                  dataStore.setSelectedFeature(feature); // 設定選中的要素到資料存儲\n                  emit('feature-selected', feature); // 發送要素選中事件\n\n                  // 移除縮放功能 - 不再自動縮放到點擊位置\n                }\n              },\n              // 右鍵點擊事件\n              contextmenu: function (e) {\n                // 只有分析圖層的圓圈才顯示右鍵菜單\n                if (\n                  (layer.isAnalysisLayer || feature.properties.layerId === 'analysis-layer') &&\n                  feature.properties.type === 'circle-analysis'\n                ) {\n                  showAnalysisContextMenu(e.originalEvent, feature);\n                }\n              },\n            });\n          },\n        });\n\n        return geoJsonLayer; // 返回創建的 GeoJSON 圖層\n      };\n\n      // 🎯 保存當前視圖狀態函數 (Save Current View State Function)\n      const saveCurrentViewState = () => {\n        if (mapInstance) {\n          const center = mapInstance.getCenter();\n          const zoom = mapInstance.getZoom();\n          previousViewState = {\n            center: [center.lat, center.lng],\n            zoom: zoom,\n          };\n          console.log('🎯 保存當前視圖狀態:', previousViewState);\n        }\n      };\n\n      // 🎯 恢復之前的視圖狀態函數 (Restore Previous View State Function)\n      const restorePreviousViewState = () => {\n        if (mapInstance && previousViewState) {\n          console.log('🎯 恢復之前的視圖狀態:', previousViewState);\n          mapInstance.setView(previousViewState.center, previousViewState.zoom);\n          // 同時更新 mapStore 中的值，保持一致性\n          mapStore.setMapView(previousViewState.center, previousViewState.zoom);\n          previousViewState = null; // 清除保存的狀態\n        }\n      };\n\n      // 🔄 重設所有圖層樣式函數 (Reset All Layer Styles Function)\n      const resetAllLayerStyles = () => {\n        console.log('🔄 MapTab: 重設所有圖層樣式');\n\n        // 刪除地圖上的任何臨時標記\n        if (mapInstance) {\n          // 確保 mapInstance 存在\n          mapInstance.eachLayer((layer) => {\n            if (\n              layer.options &&\n              layer.options.icon &&\n              (layer.options.icon.options?.className === 'first-service-point-marker' ||\n                layer.options.icon.options?.className === 'highlight-service-point-marker')\n            ) {\n              mapInstance.removeLayer(layer);\n            }\n          });\n        }\n\n        // 重設圖層群組中的每個圖層\n        Object.values(layerGroups).forEach((layerGroup) => {\n          if (layerGroup) {\n            layerGroup.eachLayer((layer) => {\n              const feature = layer.feature;\n              if (feature) {\n                const layerData = dataStore.findLayerById(feature.properties.layerId);\n                const type = layerData?.type;\n\n                // 分析圖層的特殊處理\n                if (layerData?.isAnalysisLayer || feature.properties.layerId === 'analysis-layer') {\n                  if (feature.properties.type === 'point-analysis') {\n                    // 分析點不需要特殊處理\n                    return;\n                  } else if (feature.properties.type === 'circle-analysis') {\n                    // 分析圓圈重設\n                    if (layer._originalStyle) {\n                      layer.setStyle(layer._originalStyle);\n                    }\n                  }\n                } else if (type === 'point') {\n                  // 一般點類型不需要特殊處理，因為大小是固定的\n                } else if (type === 'polygon') {\n                  // 多邊形類型處理\n                  if (layer._originalStyle) {\n                    layer.setStyle(layer._originalStyle);\n                  } else if (layerGroup.resetStyle) {\n                    layerGroup.resetStyle(layer);\n                  }\n                }\n\n                // 關閉所有打開的彈出視窗和提示\n                if (layer.closePopup) {\n                  layer.closePopup();\n                }\n                // 移除 tooltip 相關功能\n              }\n            });\n          }\n        });\n      };\n\n      // 🔄 同步圖層函數 (Sync Layers Function)\n      const syncLayers = () => {\n        // 檢查地圖實例和準備狀態\n        if (!mapInstance || !isMapReady.value) return;\n\n        // 獲取資料存儲中的所有圖層\n        const storeLayers = dataStore.getAllLayers();\n        // 獲取當前地圖上的圖層 ID 列表\n        const currentLayerIds = Object.keys(layerGroups);\n        // 篩選出可見且有資料的圖層（分析圖層總是有空的 features 數組）\n        const visibleLayers = storeLayers.filter((l) => l.visible && l.geoJsonData);\n        const visibleLayerIds = visibleLayers.map((l) => l.layerId);\n\n        // 找出新增的圖層（不在當前地圖上但在可見列表中的圖層）\n        const newLayerIds = visibleLayerIds.filter((id) => !currentLayerIds.includes(id));\n        // 找出需要移除的圖層（在當前地圖上但不在可見列表中的圖層）\n        const layersToRemove = currentLayerIds.filter((id) => !visibleLayerIds.includes(id));\n\n        console.log(`🔄 圖層同步: 新增 ${newLayerIds.length} 個, 移除 ${layersToRemove.length} 個`);\n\n        // 只移除不可見的圖層，避免不必要的重新渲染\n        layersToRemove.forEach((layerId) => {\n          if (layerGroups[layerId]) {\n            mapInstance.removeLayer(layerGroups[layerId]);\n            delete layerGroups[layerId];\n            console.log(`🗺️ 移除圖層: ${layerId}`);\n          }\n        });\n\n        // 檢查是否有分析圖層需要更新\n        const hasAnalysisLayerUpdate = visibleLayers.some((layer) => layer.isAnalysisLayer);\n\n        // 如果有分析圖層更新，需要重新渲染所有圖層以保持正確順序\n        if (hasAnalysisLayerUpdate) {\n          // 移除所有現有圖層\n          Object.keys(layerGroups).forEach((layerId) => {\n            if (layerGroups[layerId]) {\n              mapInstance.removeLayer(layerGroups[layerId]);\n              delete layerGroups[layerId];\n            }\n          });\n        }\n\n        // 用於收集新添加的圖層，以便後續自動縮放\n        const newAddedLayers = [];\n\n        // 按照 layers 的反轉順序處理所有可見圖層（這樣第一個圖層會在最底層）\n        visibleLayers\n          .slice()\n          .reverse()\n          .forEach((layer) => {\n            const { layerId } = layer;\n\n            // 如果有分析圖層更新，所有圖層都需要重新創建\n            // 否則只有不存在的圖層才創建\n            const shouldCreateLayer = hasAnalysisLayerUpdate || !layerGroups[layerId];\n\n            if (!shouldCreateLayer) return;\n\n            try {\n              const newLayer = createFeatureLayer(layer);\n              if (newLayer) {\n                if (layer.isAnalysisLayer) {\n                  newLayer.isAnalysisLayer = true;\n                }\n                newLayer.addTo(mapInstance);\n                layerGroups[layerId] = newLayer;\n\n                // 如果是新添加的圖層，收集起來用於自動縮放（分析圖層不需要縮放）\n                if (newLayerIds.includes(layerId) && !layer.isAnalysisLayer) {\n                  newAddedLayers.push(newLayer);\n                }\n\n                console.log(`🗺️ 圖層 \"${layer.layerName}\" 已添加到地圖`);\n              }\n            } catch (error) {\n              console.error(`添加圖層 \"${layer.layerName}\" 時發生錯誤:`, error);\n            }\n          });\n\n        // 只有在有新添加的非分析圖層時才自動縮放\n        if (newAddedLayers.length > 0) {\n          const bounds = new L.LatLngBounds();\n          let hasValidBounds = false;\n\n          newAddedLayers.forEach((layer) => {\n            if (layer && layer.getBounds) {\n              const layerBounds = layer.getBounds();\n              if (layerBounds.isValid()) {\n                bounds.extend(layerBounds);\n                hasValidBounds = true;\n              }\n            }\n          });\n\n          if (hasValidBounds) {\n            setTimeout(() => {\n              mapInstance.fitBounds(bounds, { padding: [50, 50] });\n              console.log(`🎯 自動縮放到新添加的 ${newAddedLayers.length} 個圖層範圍`);\n            }, 200); // 稍微延遲確保圖層完全載入\n          }\n        }\n\n        // 計算並更新標記總數\n        const totalMarkers = Object.values(layerGroups).reduce(\n          (acc, layer) => acc + (layer.getLayers ? layer.getLayers().length : 0), // 累加每個圖層的要素數量\n          0 // 初始值為 0\n        );\n        emit('update:activeMarkers', totalMarkers); // 發送標記數量更新事件\n\n        console.log(`🗺️ 圖層同步完成，共 ${visibleLayers.length} 個可見圖層`); // 輸出同步完成訊息\n      };\n\n      // 🔍 顯示全部要素函數 (Show All Features Function) - 顯示圖面所有資料\n      const showAllFeatures = () => {\n        // 檢查地圖實例、準備狀態和圖層可見性\n        if (!mapInstance || !isMapReady.value || !isAnyLayerVisible.value) return;\n\n        // 創建邊界框物件用於計算所有要素的範圍\n        const bounds = new L.LatLngBounds(); // 初始化 Leaflet 邊界框\n        let hasValidBounds = false; // 標記是否有有效的邊界\n\n        // 遍歷所有圖層群組計算邊界\n        Object.values(layerGroups).forEach((layer) => {\n          if (layer && layer.getBounds) {\n            // 檢查圖層是否有 getBounds 方法\n            const layerBounds = layer.getBounds(); // 獲取圖層邊界\n            if (layerBounds.isValid()) {\n              // 檢查邊界是否有效\n              bounds.extend(layerBounds); // 擴展總邊界框\n              hasValidBounds = true; // 標記有有效邊界\n            }\n          }\n        });\n\n        // 如果有有效邊界，調整地圖視圖以包含所有要素\n        if (hasValidBounds) {\n          mapInstance.fitBounds(bounds, { padding: [50, 50] }); // 設定地圖視圖並添加內邊距\n        }\n      };\n\n      // 🌍 顯示全市函數 (Show Full City Function) - 回到預設地圖範圍\n      const showFullCity = () => {\n        // 檢查地圖實例和準備狀態\n        if (!mapInstance || !isMapReady.value) return;\n\n        // 使用固定的台中市預設範圍，不依賴當前存儲的值\n        const defaultCenter = [24.1477, 120.6736]; // 台中市政府\n        const defaultZoom = 11; // 適合台中市的縮放等級\n\n        console.log(`🌍 顯示全市: 中心點 ${defaultCenter}, 縮放等級 ${defaultZoom}`);\n\n        // 回到預設的地圖中心和縮放等級\n        mapInstance.setView(defaultCenter, defaultZoom);\n\n        // 同時更新 mapStore 中的值，保持一致性\n        mapStore.setMapView(defaultCenter, defaultZoom);\n      };\n\n      // 🎯 高亮顯示特定要素函數 (Highlight Specific Feature Function)\n      const highlightFeature = (highlightData) => {\n        console.log('🎯 MapTab: 開始高亮顯示要素:', highlightData); // 輸出開始高亮的訊息\n\n        // 檢查地圖是否準備就緒\n        if (!mapInstance || !isMapReady.value) {\n          console.warn('⚠️ 地圖尚未準備就緒，延遲執行高亮顯示'); // 輸出警告訊息\n          setTimeout(() => highlightFeature(highlightData), 200); // 延遲 200ms 後重試\n          return;\n        }\n\n        // 檢查是否有圖層群組\n        if (!layerGroups || Object.keys(layerGroups).length === 0) {\n          console.warn('⚠️ 圖層群組尚未載入，延遲執行高亮顯示'); // 輸出警告訊息\n          setTimeout(() => highlightFeature(highlightData), 200); // 延遲 200ms 後重試\n          return;\n        }\n\n        // 解析高亮資料\n        let targetLayerId, targetFeatureId; // 宣告目標圖層 ID 和要素 ID\n\n        // 檢查是否為服務人員高亮事件\n        if (highlightData.type === 'service-provider') {\n          console.log('🎯 處理服務人員高亮事件:', highlightData);\n\n          // 將地圖中心移動到第一個服務點\n          if (highlightData.firstServicePoint) {\n            const { lat, lon } = highlightData.firstServicePoint;\n\n            // 只有當有座標時才移動地圖和創建標記\n            if (lat && lon) {\n              mapInstance.setView([lat, lon], 15); // 縮放到 15 級別\n\n              // 清除所有現有樣式和標記\n              resetAllLayerStyles();\n\n              // 創建一個臨時的標記來標示第一個服務點\n              const firstPointMarker = L.marker([lat, lon], {\n                icon: L.divIcon({\n                  className: 'first-service-point-marker',\n                  html: '<div style=\"background-color: #ff6b6b; color: white; border-radius: 50%; width: 20px; height: 20px; display: flex; align-items: center; justify-content: center; font-size: 12px; font-weight: bold;\">1</div>',\n                  iconSize: [20, 20],\n                  iconAnchor: [10, 10],\n                }),\n              }).addTo(mapInstance);\n\n              // 添加彈出視窗\n              firstPointMarker\n                .bindPopup(\n                  `\n                <div style=\"font-size: 14px;\">\n                  <strong>第一個服務點</strong><br>\n                  姓名: ${highlightData.firstServicePoint.name}<br>\n                  地址: ${highlightData.firstServicePoint.address}<br>\n                  時間: ${highlightData.firstServicePoint.time}\n                </div>\n              `\n                )\n                .openPopup();\n            } else {\n              // 如果沒有座標，只顯示提示訊息\n              console.log('⚠️ 第一個服務點沒有座標，無法在地圖上顯示');\n            }\n\n            // 設置選中的特徵到資料存儲（用於右側面板顯示）\n            dataStore.setSelectedFeature({\n              type: 'Feature',\n              properties: {\n                type: 'service-provider',\n                serviceProviderId: highlightData.serviceProviderId,\n                layerId: highlightData.layerId,\n                layerName: highlightData.layerName,\n                allServicePoints: highlightData.allServicePoints,\n                firstServicePoint: highlightData.firstServicePoint,\n              },\n            });\n          }\n\n          console.log('✅ 服務人員高亮事件處理完成，退出函數');\n          return; // 確保退出函數\n        }\n\n        // 檢查是否為清除高亮事件\n        if (\n          typeof highlightData === 'object' &&\n          highlightData !== null &&\n          highlightData.id === null\n        ) {\n          console.log('🎯 MapTab: 接收到清除高亮事件');\n          // 清除所有圖層的樣式\n          resetAllLayerStyles();\n          // 回到預設視圖\n          showFullCity();\n          return;\n        }\n\n        // 檢查是否為服務項目高亮（從底部面板點擊）\n        if (highlightData.type === 'service-item-highlight') {\n          console.log('🎯 MapTab: 處理服務項目高亮事件:', highlightData);\n\n          // 清除所有圖層的樣式\n          resetAllLayerStyles();\n\n          // 關閉所有現有的 popup，確保同一時間只有一個popup\n          mapInstance.closePopup();\n\n          // 從座標信息獲取位置\n          const coordinates = highlightData.coordinates;\n          const lat = coordinates?.lat;\n          const lon = coordinates?.lon;\n\n          if (lat && lon) {\n            console.log('🎯 MapTab: 移動地圖到座標:', lat, lon);\n\n            // 移動地圖視圖到服務點位置（底部面板選擇時縮放到中心）\n            saveCurrentViewState();\n            mapInstance.setView([lat, lon], 16);\n\n            // 尋找現有的服務點標記並為其添加 popup\n            let foundAndHighlighted = false;\n            const targetLayerGroup = layerGroups[highlightData.layerId];\n\n            if (targetLayerGroup) {\n              console.log('🎯 MapTab: 在圖層中尋找對應的服務點');\n\n              targetLayerGroup.eachLayer((layer) => {\n                if (foundAndHighlighted) return; // 找到第一個就停止\n\n                const feature = layer.feature;\n                if (feature && feature.properties && feature.geometry) {\n                  // 使用緯度和經度來匹配對應的服務點\n                  const featureLat = feature.geometry.coordinates[1];\n                  const featureLon = feature.geometry.coordinates[0];\n\n                  // 檢查座標是否匹配（允許小數點差異）\n                  if (Math.abs(featureLat - lat) < 0.0001 && Math.abs(featureLon - lon) < 0.0001) {\n                    console.log('✅ 找到匹配的服務點，添加 popup');\n\n                    // 只添加 popup，不修改樣式\n                    const props = highlightData.item || {};\n                    const popupContent = createServicePointContent(props);\n\n                    // 顯示 popup（完整的 detail 內容）\n                    if (layer.bindPopup) {\n                      layer.bindPopup(popupContent, {\n                        closeButton: true,\n                        autoClose: true,\n                        closeOnClick: true,\n                        className: 'service-point-popup',\n                        opacity: 0.9,\n                      });\n                      layer.openPopup && layer.openPopup();\n                    }\n\n                    foundAndHighlighted = true;\n                    console.log('✅ popup 添加完成');\n                  }\n                }\n              });\n            }\n\n            // 如果沒有找到現有服務點，創建臨時 popup\n            if (!foundAndHighlighted) {\n              console.log('⚠️ 沒有找到現有服務點，創建臨時 popup');\n\n              // 創建一個不可見的臨時標記來承載 popup\n              const item = highlightData.item;\n              const tempMarker = L.marker([lat, lon], {\n                opacity: 0, // 完全透明，不影響地圖顯示\n                icon: L.divIcon({\n                  className: 'temp-popup-marker',\n                  html: '',\n                  iconSize: [1, 1],\n                  iconAnchor: [0, 0],\n                }),\n              }).addTo(mapInstance);\n\n              // 添加彈出視窗\n              const props = item;\n              const popupContent = createServicePointContent(props);\n              tempMarker\n                .bindPopup(popupContent, {\n                  closeButton: true,\n                  autoClose: true,\n                  closeOnClick: true,\n                  className: 'service-point-popup',\n                  opacity: 0.9,\n                })\n                .openPopup();\n            }\n\n            // 移除重複的 popup 創建邏輯\n\n            // 自動復原：若這只是高亮而非選取，短時間後恢復\n            setTimeout(() => {\n              if (!dataStore.selectedFeature) {\n                restorePreviousViewState();\n                // 移除臨時標記（不可見的 popup 承載標記）\n                mapInstance.eachLayer((layer) => {\n                  if (\n                    layer.options &&\n                    layer.options.icon &&\n                    (layer.options.icon.options.className === 'temp-popup-marker' ||\n                      layer.options.icon.options.className === 'highlight-service-point-marker')\n                  ) {\n                    mapInstance.removeLayer(layer);\n                  }\n                });\n              }\n            }, 1500);\n          } else {\n            console.warn('⚠️ MapTab: 服務項目沒有有效的座標信息');\n          }\n\n          return; // 完成高亮處理，退出函數\n        }\n\n        // 檢查高亮資料是否為物件格式\n        if (typeof highlightData === 'object' && highlightData !== null) {\n          targetLayerId = highlightData.layerId; // 從物件中獲取圖層 ID\n          targetFeatureId = highlightData.id; // 從物件中獲取要素 ID\n        } else {\n          targetFeatureId = highlightData; // 直接使用作為要素 ID\n        }\n\n        console.log(`🔍 尋找要素: layerId=\"${targetLayerId}\", featureId=\"${targetFeatureId}\"`); // 輸出搜尋資訊\n        console.log('🔍 可用的圖層群組:', Object.keys(layerGroups)); // 輸出可用圖層列表\n\n        // 執行高亮顯示的核心邏輯函數\n        const performHighlight = () => {\n          // 重置所有圖層樣式\n          resetAllLayerStyles();\n\n          // 初始化目標要素搜尋變數\n          let targetLayer = null; // 目標圖層實例\n          let targetFeature = null; // 目標要素物件\n\n          // 如果指定了圖層 ID，在特定圖層中搜尋\n          if (targetLayerId && layerGroups[targetLayerId]) {\n            console.log(`🔍 在指定圖層 \"${targetLayerId}\" 中尋找要素`); // 輸出搜尋訊息\n            const specificLayerGroup = layerGroups[targetLayerId]; // 獲取指定圖層群組\n\n            // 遍歷圖層中的每個要素\n            specificLayerGroup.eachLayer((layer) => {\n              const feature = layer.feature; // 獲取要素物件\n              if (feature && feature.properties) {\n                // 檢查要素是否有屬性\n                // 獲取要素 ID（與 DataTableTab.vue 中的邏輯保持一致）\n                const featureId =\n                  feature.properties.id || feature.properties['#'] || feature.properties.編號;\n\n                console.log(`🔍 檢查要素 ID: ${featureId} (目標: ${targetFeatureId})`); // 輸出檢查訊息\n\n                // 比較要素 ID（轉換為字串進行比較）\n                if (String(featureId) === String(targetFeatureId)) {\n                  targetLayer = layer; // 設定目標圖層\n                  targetFeature = feature; // 設定目標要素\n                  console.log(`✅ 在圖層 \"${targetLayerId}\" 中找到要素 \"${targetFeatureId}\"`); // 輸出找到訊息\n                  return;\n                }\n              }\n            });\n          } else {\n            console.log('🔍 在所有圖層中尋找要素'); // 輸出搜尋訊息\n            // 在所有圖層中尋找要素\n            for (const [layerId, layerGroup] of Object.entries(layerGroups)) {\n              console.log(`🔍 檢查圖層: ${layerId}`); // 輸出當前檢查的圖層\n              // 遍歷圖層中的每個要素\n              layerGroup.eachLayer((layer) => {\n                const feature = layer.feature; // 獲取要素物件\n                if (feature && feature.properties) {\n                  // 檢查要素是否有屬性\n                  // 獲取要素 ID（與 DataTableTab.vue 中的邏輯保持一致）\n                  const featureId =\n                    feature.properties.id || feature.properties['#'] || feature.properties.編號;\n\n                  console.log(`🔍 檢查要素 ID: ${featureId} (目標: ${targetFeatureId})`); // 輸出檢查訊息\n\n                  // 比較要素 ID（轉換為字串進行比較）\n                  if (String(featureId) === String(targetFeatureId)) {\n                    targetLayer = layer; // 設定目標圖層\n                    targetFeature = feature; // 設定目標要素\n                    targetLayerId = layerId; // 設定目標圖層 ID\n                    console.log(`✅ 在圖層 \"${layerId}\" 中找到要素 \"${targetFeatureId}\"`); // 輸出找到訊息\n                    return;\n                  }\n                }\n              });\n              if (targetLayer) break; // 如果找到目標圖層，跳出迴圈\n            }\n          }\n\n          // 如果找到目標圖層和要素，執行高亮顯示\n          if (targetLayer && targetFeature) {\n            // 僅做視覺高亮，不改變 store 選取狀態（避免非選取情境無法自動復原）\n\n            // 根據要素類型執行不同的高亮效果\n            if (targetLayer.feature?.geometry?.type === 'Point') {\n              // 點要素處理\n              const element = targetLayer.getElement(); // 獲取 DOM 元素\n              if (element) {\n                // 找到圖標內部的樣式 div\n                const innerIconDiv = element.querySelector('div');\n                if (innerIconDiv) {\n                  innerIconDiv.style.transition = 'transform 0.04s ease-in-out'; // 設定過渡動畫\n                  innerIconDiv.style.transform = 'scale(1.6)'; // 放大效果\n                }\n                // 設定最高層級確保圖標在最上方\n                element.style.zIndex = 1000;\n              }\n            } else {\n              // 面要素處理\n              // 面要素高亮 - 只對有 setStyle 方法的圖層調用\n              if (targetLayer.setStyle) {\n                if (targetLayer.feature?.properties?.fillColor) {\n                  targetLayer.setStyle({\n                    weight: 4, // 增加邊框粗細\n                    color: 'white', // 設定邊框顏色\n                    fillOpacity: 0.8, // 增加填充透明度\n                  });\n                } else {\n                  targetLayer.setStyle({\n                    weight: 4, // 增加邊框粗細\n                  });\n                }\n              }\n            }\n\n            // 將圖層置於最前方\n            if (targetLayer.bringToFront) {\n              // 檢查圖層是否有置前方法\n              targetLayer.bringToFront(); // 將圖層移到最前方\n            }\n\n            // 定位到要素位置\n            let bounds; // 宣告邊界變數\n            if (targetLayer.getBounds) {\n              // 如果圖層有 getBounds 方法（面要素）\n              bounds = targetLayer.getBounds(); // 獲取圖層邊界\n            } else if (targetLayer.getLatLng) {\n              // 如果圖層有 getLatLng 方法（點要素）\n              const latlng = targetLayer.getLatLng(); // 獲取點座標\n              bounds = L.latLngBounds([latlng, latlng]); // 創建點的邊界框\n            }\n\n            // 如果有有效邊界，調整地圖視圖\n            if (bounds && bounds.isValid()) {\n              // 在縮放前保存當前的視圖狀態\n              saveCurrentViewState();\n\n              mapInstance.fitBounds(bounds, {\n                maxZoom: 16, // 最大縮放等級限制\n                padding: [50, 50], // 邊界內邊距\n              });\n\n              // 延遲打開彈窗以確保地圖移動完成\n              setTimeout(() => {\n                if (targetLayer.openPopup) {\n                  targetLayer.openPopup();\n                }\n                // 移除 tooltip 功能，只保留 popup\n                const f = targetLayer.feature;\n                const hasDetail = f && f.properties && (f.properties.編號 || f.properties.name);\n                if (hasDetail && targetLayer.getLatLng) {\n                  const props = f.properties;\n                  // 顯示 popup（簡化的 detail 內容）\n                  const popupContent = createServicePointContent(props);\n                  targetLayer.bindPopup(popupContent, {\n                    closeButton: true,\n                    autoClose: true,\n                    closeOnClick: true,\n                    className: 'service-point-popup',\n                    opacity: 0.9,\n                  });\n                  targetLayer.openPopup();\n                }\n              }, 500); // 延遲 500ms\n\n              // 自動復原：若在短時間內沒有產生選取，回到先前視圖並清理高亮\n              setTimeout(() => {\n                if (!dataStore.selectedFeature) {\n                  resetAllLayerStyles();\n                  restorePreviousViewState();\n                }\n              }, 1500);\n            }\n\n            console.log('✅ 顯示位置功能完成'); // 輸出完成訊息\n            return true; // 返回成功狀態\n          } else {\n            // 如果未找到目標要素，輸出警告訊息\n            console.warn(\n              `❌ 找不到要素 \"${targetFeatureId}\"${targetLayerId ? ` 在圖層 \"${targetLayerId}\" 中` : ''}`\n            );\n            return false; // 返回失敗狀態\n          }\n        };\n\n        // 嘗試執行高亮顯示，如果失敗則重試\n        const success = performHighlight(); // 執行高亮顯示\n        if (!success) {\n          // 如果第一次失敗\n          console.log('🔄 第一次高亮顯示失敗，1秒後重試...'); // 輸出重試訊息\n          setTimeout(() => {\n            const retrySuccess = performHighlight(); // 重試執行高亮顯示\n            if (!retrySuccess) {\n              // 如果重試仍失敗\n              console.error('❌ 重試後仍無法高亮顯示要素'); // 輸出錯誤訊息\n            }\n          }, 1000); // 延遲 1 秒重試\n        }\n      };\n\n      // 🔄 刷新地圖尺寸函數 (Invalidate Map Size Function)\n      const invalidateSize = () => {\n        // 檢查地圖實例和準備狀態\n        if (mapInstance && isMapReady.value) {\n          nextTick(() => {\n            // 等待 DOM 更新完成\n            try {\n              // 檢查容器是否有效\n              if (mapContainer.value) {\n                const rect = mapContainer.value.getBoundingClientRect();\n                if (rect.width === 0 || rect.height === 0) {\n                  console.warn('🔄 地圖容器尺寸為零，延遲刷新地圖尺寸');\n                  // 如果容器尺寸為零，延遲刷新而不是重新初始化\n                  setTimeout(() => {\n                    if (mapContainer.value && mapInstance && isMapReady.value) {\n                      const newRect = mapContainer.value.getBoundingClientRect();\n                      if (newRect.width > 0 && newRect.height > 0) {\n                        mapInstance.invalidateSize();\n                        console.log('🗺️ 地圖尺寸已延遲刷新');\n                      }\n                    }\n                  }, 100);\n                  return;\n                }\n              }\n\n              mapInstance.invalidateSize(); // 刷新地圖尺寸\n              console.log('🗺️ 地圖尺寸已刷新'); // 輸出成功訊息\n            } catch (error) {\n              console.error('❌ 刷新地圖尺寸時發生錯誤:', error); // 輸出錯誤訊息\n            }\n          });\n        } else if (!mapInstance) {\n          console.warn('🔄 地圖實例不存在，等待初始化完成');\n          // 如果地圖實例不存在，不嘗試重新初始化，避免重複初始化\n          // 讓 initMap 函數自然完成初始化過程\n        }\n      };\n\n      // 開始點擊模式\n\n      // 注意：路徑規劃和路徑優化相關函數已移除\n\n      // 🗑️ 清除分析圖層 (Clear Analysis Layer)\n      const clearAnalysisLayer = () => {\n        // 調用 dataStore 的方法清除分析圖層\n        dataStore.clearAnalysisLayer();\n        console.log('🗑️ 清除分析圖層');\n      };\n\n      // 注意：路徑優化相關函數已移除\n\n      // 🖱️ 顯示右鍵菜單 (Show Context Menu)\n      const showAnalysisContextMenu = (event, feature) => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        selectedAnalysisFeature.value = feature;\n        contextMenuPosition.value = {\n          x: event.pageX || event.clientX,\n          y: event.pageY || event.clientY,\n        };\n        showContextMenu.value = true;\n\n        console.log('🖱️ 顯示分析要素右鍵菜單:', feature.properties.name);\n      };\n\n      // 🗑️ 刪除單個分析點 (Delete Single Analysis Point)\n      const deleteAnalysisPoint = () => {\n        if (!selectedAnalysisFeature.value) return;\n\n        const feature = selectedAnalysisFeature.value;\n        const layerId = feature.properties.layerId;\n\n        let pointId;\n        if (feature.properties.type === 'circle-analysis') {\n          pointId = feature.properties.id;\n        } else {\n          pointId = feature.properties.parentId;\n        }\n\n        if (!pointId) return;\n\n        // 根據圖層類型調用對應的刪除方法\n        if (layerId === 'analysis-layer') {\n          dataStore.deleteAnalysisPoint(pointId);\n          console.log('🗑️ 刪除分析點:', pointId);\n        }\n\n        // 隱藏右鍵菜單\n        hideContextMenu();\n      };\n\n      // 🚫 隱藏右鍵菜單 (Hide Context Menu)\n      const hideContextMenu = () => {\n        showContextMenu.value = false;\n        selectedAnalysisFeature.value = null;\n      };\n\n      // 📏 設置 ResizeObserver 監聽容器大小變化 (Setup ResizeObserver)\n      let resizeObserver = null; // 宣告 ResizeObserver 實例變數\n      let resizeTimeout = null; // 防抖計時器\n\n      const setupResizeObserver = () => {\n        // 檢查容器存在且瀏覽器支援 ResizeObserver\n        if (mapContainer.value && window.ResizeObserver) {\n          // 創建 ResizeObserver 實例\n          resizeObserver = new ResizeObserver((entries) => {\n            for (let entry of entries) {\n              // 遍歷所有變化的元素\n              console.log('🔄 地圖容器大小變化:', entry.contentRect); // 輸出容器尺寸變化資訊\n\n              // 使用防抖機制，避免短時間內多次觸發\n              if (resizeTimeout) {\n                clearTimeout(resizeTimeout);\n              }\n\n              resizeTimeout = setTimeout(() => {\n                if (mapInstance && isMapReady.value) {\n                  invalidateSize(); // 刷新地圖尺寸\n                }\n                resizeTimeout = null;\n              }, 150); // 延遲 150ms，與 UpperView 的延遲保持一致\n            }\n          });\n          resizeObserver.observe(mapContainer.value); // 開始觀察地圖容器\n          console.log('✅ ResizeObserver 已設置'); // 輸出設置成功訊息\n        }\n      };\n\n      // 🔄 切換底圖函數 (Change Basemap Function)\n      const changeBasemap = (basemapType) => {\n        mapStore.setSelectedBasemap(basemapType); // 使用 store action 更新底圖狀態\n        setBasemap(); // 應用底圖變更\n      };\n\n      // 🏷️ 獲取底圖標籤函數 (Get Basemap Label Function)\n      const getBasemapLabel = (value) => {\n        // 從 mapStore 中獲取底圖標籤\n        const basemap = mapStore.basemaps.find((b) => b.value === value);\n        return basemap ? basemap.label : value;\n      };\n\n      // 🚀 初始化地圖函數 (Initialize Map Function)\n      let isInitializing = false; // 防止重複初始化的標誌\n      let initTimeoutId = null; // 初始化超時計時器\n\n      const initMap = () => {\n        console.log('[MapTab] initMap 被調用，當前狀態:', {\n          mapInstance: !!mapInstance,\n          isMapReady: isMapReady.value,\n          isInitializing: isInitializing,\n          containerExists: !!mapContainer.value,\n        });\n\n        // 檢查是否已經有地圖實例存在，避免重複初始化\n        if (mapInstance && isMapReady.value) {\n          console.warn('[MapTab] 地圖已初始化，跳過重複初始化');\n          return;\n        }\n\n        // 檢查是否正在初始化中，避免重複初始化\n        if (isInitializing) {\n          console.warn('[MapTab] 地圖正在初始化中，跳過重複初始化');\n          return;\n        }\n\n        // 清除之前的超時計時器\n        if (initTimeoutId) {\n          clearTimeout(initTimeoutId);\n          initTimeoutId = null;\n        }\n\n        console.log('[MapTab] 開始初始化地圖');\n        isInitializing = true; // 設置初始化標誌\n        let attempts = 0; // 初始化嘗試次數計數器\n        const maxAttempts = 20; // 最大嘗試次數\n\n        // 檢查容器是否準備就緒的函數\n        const isContainerReady = () => {\n          if (!mapContainer.value) {\n            console.warn(`[MapTab] 嘗試 ${attempts}: 地圖容器不存在`);\n            return false;\n          }\n\n          const rect = mapContainer.value.getBoundingClientRect();\n          const computedStyle = window.getComputedStyle(mapContainer.value);\n\n          console.log(`[MapTab] 嘗試 ${attempts}: 容器狀態`, {\n            width: rect.width,\n            height: rect.height,\n            display: computedStyle.display,\n            visibility: computedStyle.visibility,\n            parentElement: mapContainer.value.parentElement?.tagName,\n            parentRect: mapContainer.value.parentElement?.getBoundingClientRect(),\n          });\n\n          // 檢查容器是否可見且有有效尺寸\n          if (rect.width === 0 || rect.height === 0) {\n            console.warn(`[MapTab] 嘗試 ${attempts}: 容器尺寸為零`);\n            return false;\n          }\n\n          if (computedStyle.display === 'none' || computedStyle.visibility === 'hidden') {\n            console.warn(`[MapTab] 嘗試 ${attempts}: 容器隱藏`);\n            return false;\n          }\n\n          // 檢查父元素鏈是否都可見\n          let parent = mapContainer.value.parentElement;\n          while (parent) {\n            const parentStyle = window.getComputedStyle(parent);\n            if (parentStyle.display === 'none' || parentStyle.visibility === 'hidden') {\n              console.warn(`[MapTab] 嘗試 ${attempts}: 父元素隱藏`, parent.tagName);\n              return false;\n            }\n            parent = parent.parentElement;\n          }\n\n          return true;\n        };\n\n        // 嘗試初始化函數\n        const tryInit = () => {\n          if (attempts >= maxAttempts) {\n            // 如果超過最大嘗試次數\n            console.error('[MapTab] 地圖初始化超時，已達最大嘗試次數', maxAttempts);\n            isInitializing = false; // 重置初始化標誌\n            return;\n          }\n\n          attempts++; // 增加嘗試次數\n\n          // 檢查容器是否準備就緒\n          if (!isContainerReady()) {\n            const delay = Math.min(200 * attempts, 1000); // 漸進式延遲，最多1秒\n            console.log(`[MapTab] 容器未準備就緒，${delay}ms 後重試 (${attempts}/${maxAttempts})`);\n            setTimeout(tryInit, delay);\n            return;\n          }\n\n          try {\n            console.log(`[MapTab] 容器準備就緒，嘗試創建地圖 (${attempts}/${maxAttempts})`);\n            if (createMap()) {\n              // 嘗試創建地圖\n              console.log('[MapTab] 地圖創建成功，設定底圖和同步圖層');\n              setBasemap(); // 設定底圖\n              syncLayers(); // 同步圖層\n              isInitializing = false; // 重置初始化標誌\n              console.log('[MapTab] 地圖初始化完成');\n            } else {\n              console.warn('[MapTab] 地圖創建失敗，繼續重試');\n              setTimeout(tryInit, 200); // 延遲 200ms 後重試\n            }\n          } catch (error) {\n            console.error('[MapTab] 地圖創建過程中發生錯誤:', error);\n            if (attempts < maxAttempts) {\n              setTimeout(tryInit, 200); // 延遲 200ms 後重試\n            } else {\n              console.error('[MapTab] 重試次數已達上限，初始化失敗');\n              isInitializing = false;\n            }\n          }\n        };\n\n        tryInit(); // 開始嘗試初始化\n\n        // 設定總體超時保護\n        initTimeoutId = setTimeout(() => {\n          if (isInitializing) {\n            console.error('[MapTab] 地圖初始化總體超時 (30秒)，強制終止');\n            isInitializing = false;\n          }\n        }, 30000); // 30秒總體超時\n      };\n\n      // 🔄 生命週期：組件掛載 (Lifecycle: Component Mounted)\n      onMounted(() => {\n        console.log('[MapTab] 組件已掛載，開始初始化流程');\n\n        nextTick(() => {\n          // 等待 DOM 更新完成\n          setTimeout(() => {\n            console.log('[MapTab] DOM 更新完成，開始地圖初始化');\n            // 延遲執行確保容器準備就緒\n            initMap(); // 初始化地圖\n\n            // 地圖初始化完成後設置 ResizeObserver\n            setTimeout(() => {\n              if (isMapReady.value) {\n                setupResizeObserver();\n              } else {\n                console.warn('[MapTab] 地圖尚未準備就緒，跳過 ResizeObserver 設置');\n              }\n            }, 500); // 延遲 500ms 設置尺寸觀察器\n          }, 100); // 延遲 100ms\n        });\n\n        // 🖱️ 添加全域點擊事件監聽器，用於隱藏右鍵菜單\n        document.addEventListener('click', hideContextMenu);\n      });\n\n      // 🧹 生命週期：組件卸載 (Lifecycle: Component Unmounted)\n      onUnmounted(() => {\n        console.log('[MapTab] 組件卸載，清理資源');\n\n        // 清理初始化相關計時器\n        if (initTimeoutId) {\n          clearTimeout(initTimeoutId);\n          initTimeoutId = null;\n          console.log('🧹 初始化超時計時器已清理');\n        }\n\n        if (isInitializing) {\n          console.warn('[MapTab] 組件卸載時初始化仍在進行中');\n          isInitializing = false;\n        }\n\n        // 清理 ResizeObserver 和相關計時器\n        if (resizeTimeout) {\n          clearTimeout(resizeTimeout);\n          resizeTimeout = null;\n        }\n\n        if (resizeObserver) {\n          // 如果 ResizeObserver 存在\n          resizeObserver.disconnect(); // 停止觀察\n          resizeObserver = null; // 清空引用\n          console.log('🧹 ResizeObserver 已清理'); // 輸出清理訊息\n        }\n\n        // 清理地圖事件和實例\n        if (mapInstance) {\n          // 如果地圖實例存在\n          mapInstance.off('zoomend', handleZoomEnd); // 移除縮放結束事件監聽器\n          mapInstance.off('moveend', handleMoveEnd); // 移除移動結束事件監聽器\n          mapInstance.remove(); // 移除地圖實例\n          mapInstance = null; // 清空引用\n          console.log('🧹 地圖實例已清理');\n        }\n\n        // 清理圖層相關變數\n        layerGroups = {}; // 清空圖層群組物件\n        currentTileLayer = null; // 清空當前底圖圖層引用\n        isMapReady.value = false; // 重設地圖準備狀態\n\n        // 🖱️ 移除全域點擊事件監聽器\n        document.removeEventListener('click', hideContextMenu);\n\n        console.log('[MapTab] 資源清理完成');\n      });\n\n      // 👀 監聽器：監聽資料存儲中的圖層變化 (Watcher: Watch Data Store Layers)\n      watch(() => dataStore.layers, syncLayers, { deep: true }); // 深度監聽圖層變化並同步\n\n      // 👀 監聽器：監聽底圖變化 (Watcher: Watch Basemap Changes)\n      watch(\n        () => mapStore.selectedBasemap,\n        () => {\n          if (isMapReady.value) {\n            setBasemap(); // 當底圖變化時重新設定\n          }\n        }\n      );\n\n      // 👀 監聽器：監聽選中要素變化 (Watcher: Watch Selected Feature Changes)\n      watch(\n        () => dataStore.selectedFeature,\n        (newFeature, oldFeature) => {\n          console.log('🎯 MapTab: selectedFeature 變化', { newFeature, oldFeature });\n\n          // 當有新的選擇時，確保只有一個物件被高亮顯示\n          if (newFeature) {\n            console.log('🎯 MapTab: 新的選擇，確保只有一個物件被高亮顯示');\n\n            // 如果是服務項目類型，不需要額外處理，因為已經在highlightFeature函數中處理\n            if (newFeature.properties?.type === 'service-items') {\n              // 不需要額外操作，讓專屬處理來管理\n            }\n          }\n\n          // 如果從有選中變為沒有選中，恢復預設視圖\n          if (oldFeature && !newFeature) {\n            console.log('🎯 MapTab: 清除選取，恢復預設視圖');\n            // 重置所有圖層樣式以確保沒有高亮顯示\n            resetAllLayerStyles();\n\n            // 檢查是否為點要素選取，如果是則恢復到預設視圖\n            if (\n              oldFeature.geometry?.type === 'Point' ||\n              oldFeature.properties?.type === 'service-items' ||\n              oldFeature.properties?.layerId?.startsWith('service-provider-')\n            ) {\n              showFullCity();\n            } else {\n              restorePreviousViewState();\n            }\n          }\n        },\n        { deep: true }\n      );\n\n      // 📤 返回組件公開的屬性和方法 (Return Component Public Properties and Methods)\n      return {\n        mapContainer, // 地圖容器 DOM 元素引用\n        mapContainerId, // 動態地圖容器 ID\n        selectedBasemap: computed(() => mapStore.selectedBasemap), // 選定的底圖類型響應式變數\n        changeBasemap, // 切換底圖函數\n        getBasemapLabel, // 獲取底圖標籤函數\n        showAllFeatures, // 顯示全部要素函數\n        showFullCity, // 顯示全市函數\n        isAnyLayerVisible, // 檢查是否有可見圖層的計算屬性\n        highlightFeature, // 高亮顯示特定要素函數\n        invalidateSize, // 刷新地圖尺寸函數\n\n        // 注意：路徑規劃和路徑優化相關函數已移除\n        clearAnalysisLayer, // 清除分析圖層函數\n        mapStore, // 定義存儲實例\n\n        // 右鍵菜單相關\n        contextMenu, // 右鍵菜單 DOM 引用\n        showContextMenu, // 是否顯示右鍵菜單\n        contextMenuPosition, // 右鍵菜單位置\n        selectedAnalysisFeature, // 選中的分析要素\n        deleteAnalysisPoint, // 刪除分析點函數\n        hideContextMenu, // 隱藏右鍵菜單函數\n        selectedServiceDate: computed(() => dataStore.selectedServiceDate), // 當前選中的服務日期\n      };\n    },\n  };\n</script>\n\n<template>\n  <!-- 🗺️ 地圖主容器 (Main Map Container) -->\n  <div\n    id=\"map-container\"\n    class=\"h-100 w-100 position-relative\"\n    :class=\"{\n      'route-planning-click-mode-active': isRoutePlanningClickMode,\n      'route-optimization-click-mode-active': isRouteOptimizationClickMode,\n    }\"\n    @highlight-on-map=\"highlightFeature\"\n  >\n    <!-- 🗺️ Leaflet 地圖容器 (Leaflet Map Container) -->\n    <!-- 這是 Leaflet 地圖實際渲染的 DOM 元素 -->\n    <div :id=\"mapContainerId\" ref=\"mapContainer\" class=\"h-100 w-100\"></div>\n\n    <!-- 🖱️ 右鍵菜單 (Context Menu) -->\n    <div\n      v-if=\"showContextMenu\"\n      ref=\"contextMenu\"\n      class=\"position-fixed rounded my-bgcolor-white my-font-size-sm shadow-sm\"\n      :style=\"{\n        left: contextMenuPosition.x + 'px',\n        top: contextMenuPosition.y + 'px',\n        zIndex: 10000,\n      }\"\n      @click.stop\n    >\n      <div\n        class=\"context-menu-item d-flex align-items-center my-bgcolor-white-hover my-title-sm-black px-3 py-2 my-2\"\n        @click=\"deleteAnalysisPoint\"\n      >\n        <span class=\"my-color-red\"><i class=\"fas fa-trash-alt me-2\"></i></span>\n        刪除此分析點\n      </div>\n    </div>\n\n    <!-- 🚫 點擊遮罩，用於隱藏右鍵菜單 (Click Overlay to Hide Context Menu) -->\n    <div\n      v-if=\"showContextMenu\"\n      class=\"context-menu-overlay position-fixed w-100 h-100\"\n      style=\"top: 0; left: 0; z-index: 9999\"\n      @click=\"hideContextMenu\"\n    ></div>\n\n    <!-- 地圖底部控制項區域 -->\n    <div\n      class=\"position-absolute map-bottom-controls d-flex align-items-center rounded-pill shadow my-blur gap-2 p-2 mb-3\"\n    >\n      <div class=\"d-flex align-items-center\">\n        <div class=\"dropdown dropup\">\n          <button\n            class=\"btn rounded-pill border-0 my-btn-transparent my-font-size-xs text-nowrap\"\n            type=\"button\"\n            data-bs-toggle=\"dropdown\"\n            aria-expanded=\"false\"\n          >\n            {{ getBasemapLabel(selectedBasemap) }}\n          </button>\n          <ul class=\"dropdown-menu\">\n            <li v-for=\"basemap in mapStore.basemaps\" :key=\"basemap.value\">\n              <a\n                class=\"dropdown-item my-content-xs-black py-1\"\n                href=\"#\"\n                @click.prevent=\"changeBasemap(basemap.value)\"\n              >\n                {{ basemap.label }}\n              </a>\n            </li>\n          </ul>\n        </div>\n      </div>\n\n      <!-- 顯示全部 -->\n      <button\n        class=\"btn rounded-pill border-0 my-btn-transparent my-font-size-xs text-nowrap my-cursor-pointer\"\n        @click=\"showAllFeatures\"\n        :disabled=\"!isAnyLayerVisible\"\n        title=\"顯示圖面所有資料範圍\"\n      >\n        顯示全部\n      </button>\n\n      <!-- 顯示全市 -->\n      <button\n        class=\"btn rounded-pill border-0 my-btn-transparent my-font-size-xs text-nowrap my-cursor-pointer\"\n        @click=\"showFullCity\"\n        title=\"回到預設地圖範圍\"\n      >\n        顯示全市\n      </button>\n\n      <!-- 注意：路徑規劃和路徑優化相關按鈕已移除 -->\n    </div>\n  </div>\n</template>\n\n<style scoped>\n  /* 🗺️ 地圖容器樣式 (Map Container Styles) */\n  #map-container {\n    background-color: transparent; /* 預設透明，讓底圖顯示，空白地圖時由 JS 動態設定為白色 */\n    z-index: 0; /* 確保地圖在左側面板陰影下方 */\n  }\n\n  /* 🗺️ Leaflet 地圖容器樣式 (Leaflet Map Container Styles) */\n  [id^='leaflet-map'] {\n    width: 100% !important;\n    height: 100% !important;\n  }\n\n  /* ✨ 地圖底部控制項樣式 (Map Bottom Controls Styles) */\n  .map-bottom-controls {\n    bottom: 0px;\n    left: 50%;\n    transform: translateX(-50%);\n    z-index: 2000;\n  }\n\n  /* 🎯 分析點圖標樣式 (Analysis Point Icon Styles) */\n  :deep(.analysis-point-icon) {\n    background: transparent !important;\n    border: none !important;\n  }\n\n  /* 🗺️ 路徑規劃點圖標樣式 (Route Planning Point Icon Styles) */\n  :deep(.route-planning-point-icon) {\n    background: transparent !important;\n    border: none !important;\n  }\n\n  /* 🖱️ 點擊模式樣式 (Click Mode Styles) */\n  .click-mode-active,\n  .click-mode-active * {\n    cursor: crosshair !important;\n  }\n\n  /* 🗺️ 路徑規劃點擊模式樣式 (Route Planning Click Mode Styles) */\n  .route-planning-click-mode-active,\n  .route-planning-click-mode-active * {\n    cursor: crosshair !important;\n  }\n\n  /* 🗺️ 路徑優化按鈕樣式 (Route Optimization Button Styles) */\n  .my-btn-purple {\n    background-color: var(--my-color-purple, #9c27b0);\n    border-color: var(--my-color-purple, #9c27b0);\n    color: white;\n  }\n\n  .my-btn-purple:hover {\n    background-color: var(--my-color-purple-hover, #7b1fa2);\n    border-color: var(--my-color-purple-hover, #7b1fa2);\n    color: white;\n  }\n\n  /* 🗺️ 路徑優化點擊模式樣式 (Route Optimization Click Mode Styles) */\n  .route-optimization-click-mode-active,\n  .route-optimization-click-mode-active * {\n    cursor: crosshair !important;\n  }\n\n  /* 🗺️ 移除 tooltip 樣式 - 不再使用 tooltip */\n</style>\n","import { defineStore } from 'pinia';\n\nexport const useDefineStore = defineStore('define', {\n  state: () => ({\n    selectedBasemap: 'carto_light_labels', // 當前選中的底圖\n    // 地圖視圖狀態\n    mapView: {\n      center: [24.1477, 120.6736], // 地圖中心點 [緯度, 經度] - 台中市政府\n      zoom: 11, // 縮放等級\n    },\n    basemaps: [\n      {\n        label: 'OpenStreetMap',\n        value: 'osm',\n        url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\n      },\n      {\n        label: 'Esri Street',\n        value: 'esri_street',\n        url: 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}',\n      },\n      {\n        label: 'Esri Topo',\n        value: 'esri_topo',\n        url: 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Topo_Map/MapServer/tile/{z}/{y}/{x}',\n      },\n      {\n        label: 'Esri World Imagery',\n        value: 'esri_imagery',\n        url: 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',\n      },\n      {\n        label: 'Google Maps 街道',\n        value: 'google_road',\n        url: 'https://mt1.google.com/vt/lyrs=m&x={x}&y={y}&z={z}',\n      },\n      {\n        label: 'Google Maps 衛星',\n        value: 'google_satellite',\n        url: 'https://mt1.google.com/vt/lyrs=s&x={x}&y={y}&z={z}',\n      },\n      {\n        label: '國土規劃中心電子地圖',\n        value: 'nlsc_emap',\n        url: 'https://wmts.nlsc.gov.tw/wmts/EMAP/default/GoogleMapsCompatible/{z}/{y}/{x}',\n      },\n      {\n        label: '國土規劃中心正射影像',\n        value: 'nlsc_photo',\n        url: 'https://wmts.nlsc.gov.tw/wmts/PHOTO2/default/GoogleMapsCompatible/{z}/{y}/{x}',\n      },\n      {\n        label: '地形圖',\n        value: 'terrain',\n        url: 'https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png',\n      },\n      {\n        label: 'Carto Light',\n        value: 'carto_light_labels',\n        url: 'https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png',\n      },\n      {\n        label: 'Carto Dark',\n        value: 'carto_dark_labels',\n        url: 'https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}{r}.png',\n      },\n      {\n        label: 'Carto Voyager',\n        value: 'carto_voyager',\n        url: 'https://{s}.basemaps.cartocdn.com/rastertiles/voyager/{z}/{x}/{y}{r}.png',\n      },\n      {\n        label: '白色地圖',\n        value: 'blank',\n        url: '',\n      },\n      {\n        label: '黑色底圖',\n        value: 'black',\n        url: '',\n      },\n    ],\n  }),\n  actions: {\n    setSelectedBasemap(value) {\n      this.selectedBasemap = value;\n    },\n    setMapView(center, zoom) {\n      this.mapView.center = center;\n      this.mapView.zoom = zoom;\n    },\n  },\n});\n","import { render } from \"./MapTab.vue?vue&type=template&id=5781ec08&scoped=true\"\nimport script from \"./MapTab.vue?vue&type=script&lang=js\"\nexport * from \"./MapTab.vue?vue&type=script&lang=js\"\n\nimport \"./MapTab.vue?vue&type=style&index=0&id=5781ec08&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-5781ec08\"]])\n\nexport default __exports__","<script setup>\n  import { ref, computed, watch, onMounted, nextTick, onUnmounted } from 'vue';\n  import { useDataStore } from '@/stores/dataStore.js';\n  import * as d3 from 'd3';\n\n  const dataStore = useDataStore();\n\n  const activeLayerTab = ref(null); /** 📑 當前作用中的圖層分頁 */\n  const chartContainer = ref(null); /** 📊 圖表容器參考 */\n\n  // 獲取所有開啟且有資料的圖層\n  const visibleLayers = computed(() => {\n    const allLayers = dataStore.getAllLayers();\n    return allLayers.filter((layer) => layer.visible);\n  });\n\n  /**\n   * 📑 設定作用中圖層分頁 (Set Active Layer Tab)\n   * @param {string} layerId - 圖層 ID\n   */\n  const setActiveLayerTab = (layerId) => {\n    activeLayerTab.value = layerId;\n  };\n\n  /**\n   * 📊 當前圖層摘要 (Current Layer Summary)\n   */\n  const currentLayerSummary = computed(() => {\n    if (!activeLayerTab.value) return null;\n    const layer = visibleLayers.value.find((l) => l.layerId === activeLayerTab.value);\n    return layer ? layer.summaryData || null : null;\n  });\n\n  /**\n   * 📊 取得當前選中圖層名稱 (Get Current Selected Layer Name)\n   */\n  const currentLayerName = computed(() => {\n    if (!activeLayerTab.value) return '無開啟圖層';\n    const layer = visibleLayers.value.find((l) => l.layerId === activeLayerTab.value);\n    return layer ? layer.layerName || '未知圖層' : '無開啟圖層';\n  });\n\n  /**\n   * 📊 繪製橫向長條圖 (Draw Horizontal Bar Chart)\n   * @param {Array} districtCount - 行政區統計數據\n   */\n  const drawHorizontalBarChart = (districtCount) => {\n    if (!chartContainer.value || !districtCount || districtCount.length === 0) {\n      return;\n    }\n\n    // 驗證資料，過濾掉無效的資料\n    const validDistrictCount = districtCount.filter(\n      (d) =>\n        d && typeof d.count === 'number' && d.count >= 0 && d.name && typeof d.name === 'string'\n    );\n\n    if (validDistrictCount.length === 0) {\n      console.warn('[DashboardTab] 沒有有效的行政區資料可以繪製圖表');\n      return;\n    }\n\n    // 清除之前的圖表\n    d3.select(chartContainer.value).selectAll('*').remove();\n\n    // 設定圖表尺寸和邊距\n    const margin = { top: 0, right: 48, bottom: 16, left: 48 };\n    const containerWidth = chartContainer.value.clientWidth;\n    const width = containerWidth - margin.left - margin.right;\n    const barHeight = 8;\n    const barSpacing = 24;\n    const height = validDistrictCount.length * barSpacing;\n\n    // 檢查容器寬度是否有效\n    if (width <= 0) {\n      console.warn('[DashboardTab] 圖表容器寬度無效，跳過繪製');\n      return;\n    }\n\n    // 創建 SVG\n    const svg = d3\n      .select(chartContainer.value)\n      .append('svg')\n      .attr('width', containerWidth)\n      .attr('height', height + margin.top + margin.bottom);\n\n    const g = svg.append('g').attr('transform', `translate(${margin.left},${margin.top})`);\n\n    // 設定比例尺\n    const maxCount = d3.max(validDistrictCount, (d) => d.count);\n\n    // 確保 maxCount 是正數\n    if (!maxCount || maxCount <= 0) {\n      console.warn('[DashboardTab] 最大計數值無效，跳過繪製');\n      return;\n    }\n\n    const xScale = d3.scaleLinear().domain([0, maxCount]).range([0, width]);\n\n    /**\n     * 計算刻度系統 - 所有刻度都是5的倍數，且等間隔分布，最多5個刻度\n     */\n    const calculateTickSystem = (dataMaxValue) => {\n      // Step 1: 決定刻度間隔（必須是5的倍數），確保刻度數量不超過5個\n      let interval;\n\n      // 計算需要的間隔，使刻度數量不超過5個（包含0）\n      const maxTicks = 5;\n      const minInterval = Math.ceil(dataMaxValue / (maxTicks - 1));\n\n      // 找到最小的5的倍數間隔\n      if (minInterval <= 5) {\n        interval = 5;\n      } else if (minInterval <= 10) {\n        interval = 10;\n      } else if (minInterval <= 20) {\n        interval = 20;\n      } else if (minInterval <= 50) {\n        interval = 50;\n      } else if (minInterval <= 100) {\n        interval = 100;\n      } else {\n        // 對於更大的數值，找到最接近的5的倍數\n        interval = Math.ceil(minInterval / 5) * 5;\n      }\n\n      // Step 2: 計算圖表的最大刻度值\n      const chartMaxValue = Math.ceil(dataMaxValue / interval) * interval;\n\n      // Step 3: 生成刻度點，確保不超過5個\n      const ticks = [];\n      for (let i = 0; i <= chartMaxValue && ticks.length < maxTicks; i += interval) {\n        ticks.push(i);\n      }\n\n      return {\n        ticks: ticks, // 刻度陣列 [0, 5, 10, 15...]，最多5個\n        maxValue: chartMaxValue, // 圖表最大值\n        interval: interval, // 刻度間隔\n      };\n    };\n\n    // 計算刻度系統\n    const tickSystem = calculateTickSystem(maxCount);\n    const tickValues = tickSystem.ticks;\n\n    // 更新 X 軸比例尺的範圍\n    xScale.domain([0, tickSystem.maxValue]);\n\n    g.selectAll('.grid-line')\n      .data(tickValues)\n      .enter()\n      .append('line')\n      .attr('class', 'grid-line')\n      .attr('x1', (d) => xScale(d))\n      .attr('x2', (d) => xScale(d))\n      .attr('y1', 0)\n      .attr('y2', height)\n      .attr('stroke', 'var(--my-color-gray-400)')\n      .attr('stroke-dasharray', '2,2')\n      .attr('stroke-width', 1);\n\n    // 添加長條\n    g.selectAll('.bar')\n      .data(validDistrictCount)\n      .enter()\n      .append('rect')\n      .attr('class', 'bar')\n      .attr('x', 0)\n      .attr('y', (d, i) => i * barSpacing + (barSpacing - barHeight) / 2)\n      .attr('width', (d) => Math.max(0, xScale(d.count))) // 確保寬度不會是負數\n      .attr('height', barHeight)\n      .attr('fill', 'var(--my-color-blue)');\n\n    // 添加數值標籤\n    g.selectAll('.label')\n      .data(validDistrictCount)\n      .enter()\n      .append('text')\n      .attr('class', 'label my-font-size-xs')\n      .attr('x', (d) => Math.max(0, xScale(d.count)) + 5)\n      .attr('y', (d, i) => i * barSpacing + barSpacing / 2)\n      .attr('dy', '0.35em')\n      .attr('fill', 'var(--my-color-black)')\n      .text((d) => d.count);\n\n    // 添加區域名稱標籤\n    g.selectAll('.district-label')\n      .data(validDistrictCount)\n      .enter()\n      .append('text')\n      .attr('class', 'district-label my-font-size-xs')\n      .attr('x', -5)\n      .attr('y', (d, i) => i * barSpacing + barSpacing / 2)\n      .attr('dy', '0.35em')\n      .attr('fill', 'var(--my-color-black)')\n      .style('text-anchor', 'end')\n      .text((d) => d.name);\n\n    // 添加 X 軸數字標籤\n    g.selectAll('.x-axis-label')\n      .data(tickValues)\n      .enter()\n      .append('text')\n      .attr('class', 'x-axis-label my-font-size-xs')\n      .attr('x', (d) => xScale(d))\n      .attr('y', height + 15)\n      .attr('fill', 'var(--my-color-gray-600)')\n      .style('text-anchor', 'middle')\n      .text((d) => d);\n  };\n\n  // 記錄上一次的圖層列表用於比較\n  const previousLayers = ref([]);\n\n  /**\n   * 👀 監聽可見圖層變化，自動切換到新開啟的圖層分頁\n   */\n  watch(\n    () => visibleLayers.value,\n    (newLayers) => {\n      // 如果沒有可見圖層，清除選中的分頁\n      if (newLayers.length === 0) {\n        activeLayerTab.value = null;\n        previousLayers.value = [];\n        return;\n      }\n\n      // 找出新增的圖層（比較新舊圖層列表）\n      const previousLayerIds = previousLayers.value.map((layer) => layer.layerId);\n      const newLayerIds = newLayers.map((layer) => layer.layerId);\n      const addedLayerIds = newLayerIds.filter((id) => !previousLayerIds.includes(id));\n\n      // 如果有新增的圖層，自動切換到最新新增的圖層\n      if (addedLayerIds.length > 0) {\n        const newestAddedLayerId = addedLayerIds[addedLayerIds.length - 1];\n        activeLayerTab.value = newestAddedLayerId;\n        console.log(\n          `🔄 自動切換到新開啟的圖層: ${newLayers.find((layer) => layer.layerId === newestAddedLayerId)?.layerName}`\n        );\n      }\n      // 如果當前沒有選中分頁，或選中的分頁不在可見列表中，選中第一個\n      else if (\n        !activeLayerTab.value ||\n        !newLayers.find((layer) => layer.layerId === activeLayerTab.value)\n      ) {\n        activeLayerTab.value = newLayers[0].layerId;\n      }\n\n      // 更新記錄的圖層列表\n      previousLayers.value = [...newLayers];\n    },\n    { deep: true, immediate: true }\n  );\n\n  /**\n   * 👀 監聽當前圖層摘要變化，更新圖表\n   */\n  watch(\n    () => currentLayerSummary.value,\n    (newSummary) => {\n      if (newSummary && newSummary.districtCount) {\n        nextTick(() => {\n          drawHorizontalBarChart(newSummary.districtCount);\n        });\n      }\n    },\n    { immediate: true }\n  );\n\n  /**\n   * 🚀 組件掛載事件 (Component Mounted Event)\n   */\n  onMounted(() => {\n    console.log('[DashboardTab] Component Mounted');\n\n    // 初始化第一個可見圖層為作用中分頁\n    if (visibleLayers.value.length > 0 && !activeLayerTab.value) {\n      activeLayerTab.value = visibleLayers.value[0].layerId;\n    }\n  });\n\n  // 監聽窗口大小變化，重新繪製圖表\n  const handleResize = () => {\n    if (currentLayerSummary.value && currentLayerSummary.value.districtCount) {\n      nextTick(() => {\n        drawHorizontalBarChart(currentLayerSummary.value.districtCount);\n      });\n    }\n  };\n\n  onMounted(() => {\n    window.addEventListener('resize', handleResize);\n  });\n\n  // 組件卸載時移除事件監聽\n  onUnmounted(() => {\n    window.removeEventListener('resize', handleResize);\n  });\n</script>\n\n<template>\n  <!-- 📊 多圖層資料儀表板視圖組件 -->\n  <div class=\"d-flex flex-column my-bgcolor-gray-200 h-100\">\n    <!-- 📑 圖層分頁導航 -->\n    <div v-if=\"visibleLayers.length > 0\" class=\"\">\n      <ul class=\"nav nav-tabs nav-fill\">\n        <li\n          v-for=\"layer in visibleLayers\"\n          :key=\"layer.layerId\"\n          class=\"nav-item d-flex flex-column align-items-center\"\n        >\n          <!-- tab按鈕 -->\n          <div\n            class=\"btn nav-link rounded-0 border-0 position-relative d-flex align-items-center justify-content-center my-bgcolor-gray-200\"\n            :class=\"{\n              active: activeLayerTab === layer.layerId,\n            }\"\n            @click=\"setActiveLayerTab(layer.layerId)\"\n          >\n            <span class=\"my-title-sm-black\">{{ layer.layerName }}</span>\n          </div>\n          <div class=\"w-100\" :class=\"`my-bgcolor-${layer.colorName}`\" style=\"min-height: 4px\"></div>\n        </li>\n      </ul>\n    </div>\n\n    <!-- 有開啟圖層時的內容 -->\n    <div v-if=\"visibleLayers.length > 0\" class=\"flex-grow-1 overflow-auto my-bgcolor-white p-3\">\n      <!-- 📊 當前圖層資訊 -->\n      <div class=\"mb-4\">\n        <h5 class=\"my-title-md-black\">{{ currentLayerName }}</h5>\n      </div>\n\n      <!-- 📊 圖層摘要資料 -->\n      <div v-if=\"currentLayerSummary\">\n        <div class=\"row\">\n          <!-- 基本統計信息 -->\n          <div class=\"col-12 col-xl-6\">\n            <div class=\"rounded-4 my-bgcolor-gray-100 p-4 mb-3\">\n              <h6 class=\"mb-3\">基本統計</h6>\n              <div class=\"row\">\n                <div class=\"col-6\">\n                  <div class=\"text-center\">\n                    <div class=\"my-title-xl-black\">{{ currentLayerSummary.totalCount }}</div>\n                    <div class=\"my-title-sm-gray\">總數量</div>\n                  </div>\n                </div>\n                <div class=\"col-6\" v-if=\"currentLayerSummary.districtCount\">\n                  <div class=\"text-center\">\n                    <div class=\"my-title-xl-black\">\n                      {{ currentLayerSummary.districtCount.length }}\n                    </div>\n                    <div class=\"my-title-sm-gray\">行政區數量</div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- 行政區分布圖表 -->\n          <div\n            class=\"col-12 col-xl-6\"\n            v-if=\"currentLayerSummary.districtCount && currentLayerSummary.districtCount.length > 0\"\n          >\n            <div class=\"rounded-4 my-bgcolor-gray-100 p-4 mb-3\">\n              <h6 class=\"mb-3\">行政區分布</h6>\n              <div ref=\"chartContainer\" class=\"w-100\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div v-else class=\"text-center py-5\">\n        <div class=\"my-title-md-gray\">此圖層沒有可用的摘要資訊</div>\n      </div>\n    </div>\n\n    <!-- 沒有開啟圖層時的空狀態 -->\n    <div v-else class=\"flex-grow-1 d-flex align-items-center justify-content-center\">\n      <div class=\"text-center\">\n        <div class=\"my-title-md-gray p-3\">沒有開啟的圖層</div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style scoped></style>\n","import script from \"./DashboardTab.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DashboardTab.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { render } from \"./UpperView.vue?vue&type=template&id=7b3eab8d\"\nimport script from \"./UpperView.vue?vue&type=script&lang=js\"\nexport * from \"./UpperView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<script>\n  import { ref, watch, nextTick } from 'vue';\n  import DataTableTab from '../tabs/DataTableTab.vue';\n\n  export default {\n    name: 'BottomView',\n\n    /**\n     * 🧩 組件註冊 (Component Registration)\n     * 註冊底部面板內使用的子組件\n     */\n    components: {\n      DataTableTab, // 資料表格分頁組件\n    },\n\n    /**\n     * 🔧 組件屬性定義 (Component Props)\n     * 接收來自父組件的配置和狀態數據\n     */\n    props: {\n      activeBottomTab: { type: String, default: 'table' },\n      bottomViewHeight: { type: Number, default: 300 },\n      isPanelDragging: { type: Boolean, default: false },\n    },\n\n    /**\n     * 📡 組件事件定義 (Component Events)\n     * 定義向父組件發送的事件類型\n     */\n    emits: [\n      'update:activeBottomTab', // 更新作用中底部分頁\n      'highlight-on-map', // 在地圖上高亮顯示\n      'show-service-point-detail', // 顯示服務點詳細資訊\n      'reset-view', // 重設視圖\n    ],\n\n    /**\n     * 🔧 組件設定函數 (Component Setup)\n     * 使用 Composition API 設定組件邏輯\n     */\n    setup(props) {\n      // 建立一個 ref 來引用模板中的底部分頁內容 DOM 元素\n      const bottomTabContentRef = ref(null);\n\n      /**\n       * 👀 監聽作用中底部分頁的變化\n       * 當分頁切換時，確保 DOM 更新完成\n       */\n      watch(\n        () => props.activeBottomTab,\n        () => {\n          // 使用 nextTick 確保 DOM 更新完成後再進行任何後續操作\n          nextTick(() => {\n            // 這裡可以添加分頁切換後的特殊處理邏輯\n            console.log(`✅ 底部分頁已切換至: ${props.activeBottomTab}`);\n          });\n        }\n      );\n\n      // 📤 將需要暴露給 <template> 使用的數據和方法返回\n      return {\n        bottomTabContentRef,\n      };\n    },\n  };\n</script>\n\n<template>\n  <!-- 📋 底部面板組件 (Bottom Panel Component) -->\n  <!-- 提供資料表格顯示功能 -->\n  <div class=\"d-flex flex-column\" :style=\"{ height: bottomViewHeight + 'px' }\">\n    <!-- 📄 底部分頁內容區域 (Bottom Tab Content Area) -->\n    <!-- 顯示資料表格內容組件 -->\n    <div ref=\"bottomTabContentRef\" class=\"flex-grow-1 h-100 overflow-auto\">\n      <!-- 📊 資料表格分頁內容 (Data Table Tab Content) -->\n      <!-- 顯示載入的地理資料，支援搜尋、排序、高亮等功能 -->\n      <div class=\"h-100\">\n        <DataTableTab\n          @highlight-on-map=\"$emit('highlight-on-map', $event)\"\n          @show-service-point-detail=\"$emit('show-service-point-detail', $event)\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<style scoped></style>\n","<script setup>\n  /**\n   * DataTableTab.vue\n   *\n   * Purpose:\n   * - Displays per-layer tabbed data tables with sorting and highlight interactions.\n   * - Mirrors layer colors consistent with the map rendering.\n   *\n   * Notes:\n   * - Non-functional refactor: documentation only; behavior and UI unchanged.\n   */\n  import { ref, computed, defineEmits, onMounted, watch } from 'vue';\n  import { useDataStore } from '@/stores/dataStore.js';\n\n  const emit = defineEmits(['highlight-on-map', 'show-service-point-detail']);\n\n  const dataStore = useDataStore();\n\n  const activeLayerTab = ref(null); /** 📑 當前作用中的圖層分頁 */\n  const layerSortStates = ref({}); /** 📊 每個圖層的排序狀態 */\n\n  // 獲取所有開啟且有資料的圖層\n  const visibleLayers = computed(() => {\n    const allLayers = dataStore.getAllLayers();\n    return allLayers.filter((layer) => layer.visible);\n  });\n\n  /**\n   * 📑 設定作用中圖層分頁 (Set Active Layer Tab)\n   * @param {string} layerId - 圖層 ID\n   */\n  const setActiveLayerTab = (layerId) => {\n    activeLayerTab.value = layerId;\n  };\n\n  /**\n   * 根據圖層類型返回固定的欄位名稱（簡化顯示）\n   * @param {object} layer - 圖層物件\n   * @returns {string[]} - 固定的欄位名稱陣列\n   */\n  const getLayerColumns = (layer) => {\n    // 檢查是否為服務人員圖層（新基準中央服務紀錄）\n    const isServiceLayer =\n      layer.layerId &&\n      (layer.layerId.startsWith('service-provider-') || layer.layerId.startsWith('service-date-'));\n\n    if (isServiceLayer) {\n      // 服務人員圖層只顯示指定的欄位（合併起始/結束為「服務時間」，姓名與性別合併為姓名一欄並以顏色表示）\n      return ['#', '編號', '姓名', '個案居住地址', '服務時間', '總時間', '交通時間', '服務數量'];\n    }\n\n    // 其他圖層使用原來的動態欄位邏輯\n    const data = getSortedData(layer);\n\n    // 如果沒有資料或資料為空，返回一個空陣列\n    if (!data || data.length === 0) {\n      return [];\n    }\n\n    // 取第一筆資料作為樣本\n    const sampleItem = data[0];\n\n    // 使用 Object.keys 獲取所有屬性名稱 (key)\n    // 並過濾掉不適合直接顯示在表格中的複雜物件 (例如 geometry)\n    return Object.keys(sampleItem).filter((key) => {\n      const value = sampleItem[key];\n      // 只保留值不是物件，或值雖是物件但為 null 的鍵\n      return typeof value !== 'object' || value === null;\n    });\n  };\n\n  /**\n   * 📊 取得圖層資料數量 (Get Layer Data Count)\n   * @param {Object} layer - 圖層物件\n   * @returns {number} 資料數量\n   */\n  const getLayerDataCount = (layer) => {\n    return layer.tableData?.length || 0;\n  };\n\n  /**\n   * 📊 取得排序後的資料 (Get Sorted Data)\n   * @param {Object} layer - 圖層物件\n   * @returns {Array} 排序後的資料陣列\n   */\n  const getSortedData = (layer) => {\n    console.log('🔍 getSortedData 被調用:', layer.layerId, layer.tableData);\n\n    if (!layer.tableData) {\n      console.log('⚠️ 沒有 tableData');\n      return [];\n    }\n\n    const sortState = layerSortStates.value[layer.layerId];\n    if (!sortState || !sortState.key) {\n      console.log('📊 返回原始 tableData:', layer.tableData.length, '筆資料');\n      return layer.tableData;\n    }\n\n    return [...layer.tableData].sort((a, b) => {\n      const aValue = a[sortState.key];\n      const bValue = b[sortState.key];\n\n      // 字串類型的比較\n      if (typeof aValue === 'string' && typeof bValue === 'string') {\n        return sortState.order === 'asc'\n          ? aValue.localeCompare(bValue)\n          : bValue.localeCompare(aValue);\n      }\n\n      // 數值類型的比較\n      return sortState.order === 'asc' ? aValue - bValue : bValue - aValue;\n    });\n  };\n\n  /**\n   * 📊 處理排序點擊 (Handle Sort Click)\n   * @param {string} layerId - 圖層 ID\n   * @param {string} key - 排序欄位\n   */\n  const handleSort = (layerId, key) => {\n    if (!layerSortStates.value[layerId]) {\n      layerSortStates.value[layerId] = { key: null, order: 'asc' };\n    }\n\n    const sortState = layerSortStates.value[layerId];\n\n    if (sortState.key === key) {\n      // 切換排序方向\n      sortState.order = sortState.order === 'asc' ? 'desc' : 'asc';\n    } else {\n      // 設定新的排序欄位\n      sortState.key = key;\n      sortState.order = 'asc';\n    }\n  };\n\n  /**\n   * 🎨 取得排序圖示 (Get Sort Icon)\n   * @param {string} layerId - 圖層 ID\n   * @param {string} key - 欄位名稱\n   * @returns {string} FontAwesome 圖示類別\n   */\n  const getSortIcon = (layerId, key) => {\n    const sortState = layerSortStates.value[layerId];\n    if (!sortState || sortState.key !== key) {\n      return 'fas fa-sort';\n    }\n    return sortState.order === 'asc' ? 'fas fa-sort-up' : 'fas fa-sort-down';\n  };\n\n  /**\n   * 🎨 獲取圖層顏色 (Get Layer Color)\n   * 確保與地圖上顯示的顏色一致\n   * @param {Object} layer - 圖層物件\n   * @returns {string} CSS 顏色值\n   */\n  const getLayerColor = (layer) => {\n    // 如果是服務人員圖層，從 GeoJSON features 中獲取實際使用的顏色\n    if (\n      layer.layerId &&\n      (layer.layerId.startsWith('service-provider-') ||\n        layer.layerId.startsWith('service-date-')) &&\n      layer.geoJsonData\n    ) {\n      const features = layer.geoJsonData.features || [];\n      if (features.length > 0) {\n        // 優先使用 fillColor，如果沒有則使用 routeColor\n        const firstFeature = features[0];\n        if (firstFeature.properties) {\n          if (firstFeature.properties.fillColor) {\n            return `var(--my-color-${firstFeature.properties.fillColor})`;\n          } else if (firstFeature.properties.routeColor) {\n            return `var(--my-color-${firstFeature.properties.routeColor})`;\n          }\n        }\n      }\n    }\n\n    // 回退到使用 layer.colorName\n    return layer.colorName ? `var(--my-color-${layer.colorName})` : 'var(--my-color-gray-300)';\n  };\n\n  /**\n   * 📊 獲取欄位顯示值 (Get Column Display Value)\n   * @param {Object} item - 資料項目\n   * @param {string} column - 欄位名稱\n   * @param {Object} layer - 圖層物件\n   * @param {number} index - 項目在列表中的索引\n   * @returns {string} 顯示值\n   */\n  const getColumnDisplayValue = (item, column, layer, index = 0) => {\n    // 檢查是否為服務人員圖層\n    const isServiceLayer =\n      layer.layerId &&\n      (layer.layerId.startsWith('service-provider-') || layer.layerId.startsWith('service-date-'));\n\n    if (isServiceLayer) {\n      // 服務人員圖層的欄位映射\n      switch (column) {\n        case '#':\n          // # 欄位應該顯示序號，如果沒有則根據索引生成（從1開始）\n          return item['#'] || (index + 1).toString();\n        case '編號':\n          return item.編號 || 'N/A';\n        case '姓名': {\n          const name = item.姓名 || 'N/A';\n          const gender = item.性別 || '';\n          const colorClass =\n            gender === '男性' ? 'my-color-blue' : gender === '女性' ? 'my-color-red' : '';\n          const abbr = gender === '男性' ? 'M' : gender === '女性' ? 'F' : '';\n          // 顯示 姓名 (M/F)，並以顏色標示性別\n          return `<span class=\"${colorClass}\">${name}${abbr ? ` (${abbr})` : ''}</span>`;\n        }\n        case '個案居住地址':\n          return item.個案居住地址 || 'N/A';\n        case '服務時間': {\n          // 組合「起始時間 - 結束時間」\n          const start = (() => {\n            if (item.時間) return item.時間; // 若時間已包含起始，仍優先使用\n            if (item.起始時間) return item.起始時間;\n            if (item.hour_start !== undefined && item.min_start !== undefined) {\n              return `${item.hour_start}:${String(item.min_start).padStart(2, '0')}`;\n            }\n            return 'N/A';\n          })();\n\n          const end = (() => {\n            if (item.結束時間) return item.結束時間;\n            if (item.hour_end !== undefined && item.min_end !== undefined) {\n              return `${item.hour_end}:${String(item.min_end).padStart(2, '0')}`;\n            }\n            return 'N/A';\n          })();\n\n          return `${start} - ${end}`;\n        }\n        case '總時間':\n          // 優先使用已計算的總時間，否則從時間差計算\n          if (item.總時間) {\n            return item.總時間;\n          } else if (\n            item.hour_start !== undefined &&\n            item.min_start !== undefined &&\n            item.hour_end !== undefined &&\n            item.min_end !== undefined\n          ) {\n            const startMinutes = item.hour_start * 60 + item.min_start;\n            const endMinutes = item.hour_end * 60 + item.min_end;\n            const totalMinutes = endMinutes - startMinutes;\n            if (totalMinutes > 0) {\n              const hours = Math.floor(totalMinutes / 60);\n              const minutes = totalMinutes % 60;\n              return hours > 0 ? `${hours}h${minutes}m` : `${minutes}m`;\n            }\n          }\n          return 'N/A';\n        case '交通時間':\n          // 優先使用已格式化的交通時間\n          if (item.交通時間) {\n            return item.交通時間;\n          } else if (item.hour_traffic !== undefined && item.min_traffic !== undefined) {\n            const hours = item.hour_traffic || 0;\n            const minutes = item.min_traffic || 0;\n            if (hours > 0 || minutes > 0) {\n              return hours > 0 ? `${hours}h${minutes}m` : `${minutes}m`;\n            }\n          }\n          return '0m';\n        case '服務數量':\n          return (\n            item.service_items_count ??\n            (Array.isArray(item.service_items) ? item.service_items.length : null) ??\n            item.服務數量 ??\n            0\n          ).toString();\n        default:\n          return item[column] || 'N/A';\n      }\n    }\n\n    // 其他圖層使用原始值\n    return item[column] || 'N/A';\n  };\n\n  /**\n   * 🎯 處理地圖高亮顯示 (Handle Map Highlighting)\n   * @param {Object} item - 要高亮的項目\n   * @param {Object} layer - 圖層物件\n   */\n  const handleHighlight = (item, layer, rowIndex = 0) => {\n    console.log('🎯 DataTableTab: 準備高亮顯示:', { item, layer: layer.layerName });\n\n    // 檢查是否已經選取了相同的要素\n    const itemId = item.id || item['#'] || item.編號;\n    const isSameFeature =\n      dataStore.selectedFeature &&\n      dataStore.selectedFeature.properties &&\n      dataStore.selectedFeature.properties.id === itemId;\n\n    if (isSameFeature) {\n      // 如果點擊的是已經選取的要素，清除選取\n      console.log('🎯 DataTableTab: 點擊已選取的要素，清除選取');\n      dataStore.setSelectedFeature(null);\n\n      // 發送地圖高亮清除事件\n      const clearHighlightData = {\n        id: null, // 清除高亮\n        layerId: layer.layerId,\n        layerName: layer.layerName,\n      };\n\n      setTimeout(() => {\n        emit('highlight-on-map', clearHighlightData);\n      }, 50);\n      return;\n    }\n\n    // 檢查是否為服務人員圖層\n    const isServiceLayer =\n      layer.layerId &&\n      (layer.layerId.startsWith('service-provider-') || layer.layerId.startsWith('service-date-'));\n\n    if (isServiceLayer) {\n      console.log('🎯 DataTableTab: 處理服務人員圖層點擊:', item);\n\n      // 先清除之前的選取\n      dataStore.setSelectedFeature(null);\n\n      // 使用共用的工具函數創建服務項目資料\n      const { serviceItemsData } = dataStore.createServiceItemsData(item, layer);\n\n      console.log('🎯 DataTableTab: 創建的服務項目資料:', serviceItemsData);\n\n      // 發送服務項目列表到父組件，觸發右側面板顯示\n      emit('show-service-point-detail', serviceItemsData);\n\n      // 發送特殊的地圖高亮事件，專門用於服務項目高亮\n      const serviceHighlightData = {\n        type: 'service-item-highlight',\n        layerId: layer.layerId,\n        layerName: layer.layerName,\n        item: item,\n        rowIndex: rowIndex,\n        serviceProviderId: layer.serviceProviderId,\n        serviceDate: layer.serviceDate,\n        coordinates: {\n          lat: item.緯度 || item.lat,\n          lon: item.經度 || item.lon,\n        },\n      };\n\n      console.log('🎯 DataTableTab: 發送服務項目高亮事件:', serviceHighlightData);\n\n      setTimeout(() => {\n        emit('highlight-on-map', serviceHighlightData);\n      }, 100);\n    } else {\n      // 其他圖層的原有邏輯\n      const highlightData = {\n        id: item.id || item['#'] || item.編號,\n        layerId: layer.layerId,\n        layerName: layer.layerName,\n        item: item,\n      };\n\n      console.log('🎯 DataTableTab: 發送一般高亮事件:', highlightData);\n\n      // 添加小延遲，確保地圖已準備就緒\n      setTimeout(() => {\n        emit('highlight-on-map', highlightData);\n      }, 50);\n    }\n  };\n\n  // 記錄上一次的圖層列表用於比較\n  const previousLayers = ref([]);\n\n  /**\n   * 👀 監聽可見圖層變化，自動切換到新開啟的圖層分頁\n   */\n  watch(\n    () => visibleLayers.value,\n    (newLayers) => {\n      // 如果沒有可見圖層，清除選中的分頁\n      if (newLayers.length === 0) {\n        activeLayerTab.value = null;\n        previousLayers.value = [];\n        return;\n      }\n\n      // 找出新增的圖層（比較新舊圖層列表）\n      const previousLayerIds = previousLayers.value.map((layer) => layer.layerId);\n      const newLayerIds = newLayers.map((layer) => layer.layerId);\n      const addedLayerIds = newLayerIds.filter((id) => !previousLayerIds.includes(id));\n\n      // 如果有新增的圖層，自動切換到最新新增的圖層\n      if (addedLayerIds.length > 0) {\n        const newestAddedLayerId = addedLayerIds[addedLayerIds.length - 1];\n        activeLayerTab.value = newestAddedLayerId;\n        console.log(\n          `🔄 自動切換到新開啟的圖層: ${newLayers.find((layer) => layer.layerId === newestAddedLayerId)?.layerName}`\n        );\n      }\n      // 如果當前沒有選中分頁，或選中的分頁不在可見列表中，選中第一個\n      else if (\n        !activeLayerTab.value ||\n        !newLayers.find((layer) => layer.layerId === activeLayerTab.value)\n      ) {\n        activeLayerTab.value = newLayers[0].layerId;\n      }\n\n      // 更新記錄的圖層列表\n      previousLayers.value = [...newLayers];\n    },\n    { deep: true, immediate: true }\n  );\n\n  /**\n   * 🚀 組件掛載事件 (Component Mounted Event)\n   */\n  onMounted(() => {\n    console.log('[MultiLayerDataTableTab] Component Mounted');\n\n    // 初始化第一個可見圖層為作用中分頁\n    if (visibleLayers.value.length > 0 && !activeLayerTab.value) {\n      activeLayerTab.value = visibleLayers.value[0].layerId;\n    }\n  });\n</script>\n\n<template>\n  <!-- 📊 多圖層資料表格分頁組件 -->\n  <div class=\"d-flex flex-column my-bgcolor-gray-200 h-100\">\n    <!-- 📑 圖層分頁導航 -->\n    <div v-if=\"visibleLayers.length > 0\" class=\"\">\n      <ul class=\"nav nav-tabs nav-fill\">\n        <li\n          v-for=\"layer in visibleLayers\"\n          :key=\"layer.layerId\"\n          class=\"nav-item d-flex flex-column align-items-center\"\n        >\n          <!-- tab按鈕 -->\n          <div\n            class=\"btn nav-link rounded-0 border-0 position-relative d-flex align-items-center justify-content-center my-bgcolor-gray-200\"\n            :class=\"{\n              active: activeLayerTab === layer.layerId,\n            }\"\n            @click=\"setActiveLayerTab(layer.layerId)\"\n          >\n            <span class=\"my-title-sm-black\"\n              >{{ layer.layerName }}\n              <span class=\"my-content-xs-gray ms-2\" v-if=\"getLayerDataCount(layer)\">\n                {{ getLayerDataCount(layer) }}\n              </span>\n            </span>\n          </div>\n          <div\n            class=\"w-100\"\n            :style=\"{\n              backgroundColor: getLayerColor(layer),\n              minHeight: '4px',\n            }\"\n          ></div>\n        </li>\n      </ul>\n    </div>\n\n    <!-- 📋 圖層表格內容區域 -->\n    <div v-if=\"visibleLayers.length > 0\" class=\"flex-grow-1 overflow-hidden\">\n      <div\n        v-for=\"layer in visibleLayers\"\n        :key=\"layer.layerId\"\n        v-show=\"activeLayerTab === layer.layerId\"\n        class=\"h-100\"\n      >\n        <div class=\"h-100 d-flex flex-column\">\n          <div class=\"flex-grow-1 overflow-auto\">\n            <table class=\"table w-100 mb-0\">\n              <thead class=\"sticky-top my-table-thead\">\n                <tr class=\"text-center text-nowrap\">\n                  <template v-for=\"column in getLayerColumns(layer)\" :key=\"column\">\n                    <th\n                      v-if=\"column !== 'color'\"\n                      @click=\"handleSort(layer.layerId, column)\"\n                      class=\"my-bgcolor-white-hover p-1 my-cursor-pointer\"\n                    >\n                      <span class=\"my-title-xs-gray text-nowrap\">\n                        {{ column }}\n                      </span>\n                      <span class=\"my-title-xs-gray text-nowrap ms-2\">\n                        <i :class=\"getSortIcon(layer.layerId, column)\"></i>\n                      </span>\n                    </th>\n                  </template>\n                </tr>\n              </thead>\n              <tbody>\n                <tr\n                  v-for=\"(item, rowIndex) in getSortedData(layer)\"\n                  :key=\"item.id\"\n                  class=\"my-table-tr-hover text-center text-nowrap border-bottom my-cursor-pointer\"\n                  @click=\"\n                    () => {\n                      console.log('🔥 表格行被點擊了!', item, layer, rowIndex);\n                      handleHighlight(item, layer, rowIndex);\n                    }\n                  \"\n                >\n                  <template v-for=\"column in getLayerColumns(layer)\" :key=\"column\">\n                    <td\n                      v-if=\"column !== 'color'\"\n                      class=\"border-0 text-nowrap text-truncate p-0\"\n                      style=\"max-width: 80px\"\n                    >\n                      <div v-if=\"column === '#'\" class=\"d-flex p-0\">\n                        <div\n                          style=\"min-width: 6px\"\n                          :style=\"{\n                            backgroundColor: getLayerColor(layer),\n                          }\"\n                        ></div>\n                        <div class=\"my-content-xs-black w-100 px-3 py-2\">\n                          {{ getColumnDisplayValue(item, column, layer, rowIndex) }}\n                        </div>\n                      </div>\n                      <div v-else class=\"my-content-xs-black px-3 py-2\">\n                        <template\n                          v-if=\"\n                            column === '交通時間' &&\n                            (layer.layerId.startsWith('service-provider-') ||\n                              layer.layerId.startsWith('service-date-')) &&\n                            rowIndex === 0\n                          \"\n                          >-</template\n                        >\n                        <template v-else>\n                          <span\n                            v-if=\"column === '姓名'\"\n                            v-html=\"getColumnDisplayValue(item, column, layer, rowIndex)\"\n                          ></span>\n                          <span v-else>{{\n                            getColumnDisplayValue(item, column, layer, rowIndex)\n                          }}</span>\n                        </template>\n                      </div>\n                    </td>\n                  </template>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- 📭 無開啟圖層的空狀態 -->\n    <div v-else class=\"flex-grow-1 d-flex align-items-center justify-content-center\">\n      <div class=\"text-center\">\n        <div class=\"my-title-md-gray p-3\">沒有開啟的圖層</div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n  .my-table-thead {\n    border-bottom: 2px solid var(--my-color-gray-300) !important;\n  }\n</style>\n","import script from \"./DataTableTab.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DataTableTab.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./DataTableTab.vue?vue&type=style&index=0&id=5802bfdc&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-5802bfdc\"]])\n\nexport default __exports__","import { render } from \"./BottomView.vue?vue&type=template&id=3ee085fb\"\nimport script from \"./BottomView.vue?vue&type=script&lang=js\"\nexport * from \"./BottomView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<script setup>\n  import {\n    ref,\n    computed,\n    onMounted,\n    onUnmounted,\n    defineProps,\n    defineEmits,\n    defineExpose,\n    watch,\n  } from 'vue';\n\n  // 🧩 組件引入\n  import UpperView from './UpperView.vue';\n  import BottomView from './BottomView.vue';\n\n  // --- 📥 組件屬性定義 (Component Props) ---\n  /**\n   * 📋 接收來自父組件 (HomeView) 的所有必要數據和狀態\n   * 包含面板尺寸、分頁狀態、地圖設定、資料等\n   */\n  const props = defineProps({\n    // 🎛️ 分頁和面板設定 (Tab and Panel Settings)\n    activeUpperTab: { type: String, default: 'map' },\n    activeBottomTab: { type: String, default: 'table' },\n    mainPanelWidth: { type: Number, default: 60 },\n    dynamicMainAreaHeight: { type: Number, default: 500 },\n\n    // 🗺️ 圖層和地圖設定 (Layer and Map Settings)\n    showTainanLayer: { type: Boolean, default: false },\n    selectedFilter: { type: String, default: '' },\n\n    // 🔧 其他設定 (Other Settings)\n    zoomLevel: { type: Number, default: 11 },\n    currentCoords: { type: Object, default: () => ({ lat: 25.033, lng: 121.5654 }) },\n    activeMarkers: { type: Number, default: 0 },\n    isSidePanelDragging: { type: Boolean, default: false },\n  });\n\n  // --- 📤 組件事件定義 (Component Events) ---\n  /**\n   * 📡 定義向父組件 (HomeView) 發送的所有事件\n   * 採用事件轉發模式，確保資料流向清晰\n   */\n  defineEmits([\n    // 📊 分頁更新事件 (Tab Update Events)\n    'update:activeUpperTab', // 更新主要分頁\n    'update:activeBottomTab', // 更新底部分頁\n\n    // 🗺️ 地圖狀態更新事件 (Map State Update Events)\n    'update:zoomLevel', // 更新縮放等級\n    'update:currentCoords', // 更新目前座標\n    'update:activeMarkers', // 更新作用中標記數\n\n    // 📊 表格相關事件\n    'update:tableSearchQuery', // 更新搜尋查詢\n    'sort-table', // 表格排序\n    'highlight-on-map', // 在地圖上高亮顯示\n    'show-service-point-detail', // 顯示服務點詳細資訊\n\n    // 🔄 操作相關事件\n    'reset-view', // 重設視圖\n  ]);\n\n  // --- 📚 內部組件引用 (Internal Component References) ---\n  /** 📊 主內容面板引用 (用於呼叫 UpperView 的方法如 highlightFeature) */\n  const mainContentRef = ref(null);\n\n  // --- 🔧 內部垂直拖曳調整邏輯 (Internal Vertical Resizing Logic) ---\n\n  /** 📏 底部面板高度百分比 (預設 30%，可透過拖曳調整) */\n  const bottomViewHeightPercent = ref(30);\n\n  /** 🖱️ 是否正在進行垂直拖曳 (追蹤垂直拖曳狀態) */\n  const isVerticalDragging = ref(false);\n\n  /**\n   * 🖱️ 計算是否有任何拖曳正在進行 (影響滑鼠指標事件)\n   * 結合側邊面板拖曳和垂直拖曳狀態，用於禁用指標事件\n   */\n  const isOverallDragging = computed(() => {\n    return props.isSidePanelDragging || isVerticalDragging.value;\n  });\n\n  /**\n   * 📏 中間區域總高度計算 (Computing Total Middle Section Height)\n   * 從父組件傳入的動態高度，確保不為負數\n   */\n  const middleSectionTotalHeight = computed(() => {\n    const totalHeight = props.dynamicMainAreaHeight;\n    console.log(`🔧 MiddleView: middleSectionTotalHeight (from prop): ${totalHeight}`);\n    return Math.max(totalHeight, 0); // 確保不為負數，避免佈局錯誤\n  });\n\n  /**\n   * 📏 底部面板實際像素高度計算 (Computing Actual Bottom View Pixel Height)\n   * 根據百分比和總高度計算實際像素值\n   */\n  const actualBottomViewPixelHeight = computed(() => {\n    const pixelHeight = (bottomViewHeightPercent.value / 100) * middleSectionTotalHeight.value;\n    console.log(\n      `🔧 MiddleView: actualBottomViewPixelHeight calculated: ${pixelHeight} (percent: ${bottomViewHeightPercent.value}%, totalMiddle: ${middleSectionTotalHeight.value})`\n    );\n    return pixelHeight;\n  });\n\n  /**\n   * 📏 主內容區域高度計算 (Computing Main Content Area Height)\n   * 總高度減去底部面板高度，得到上部區域可用高度\n   */\n  const contentHeight = computed(() => {\n    const mainContentH = middleSectionTotalHeight.value - actualBottomViewPixelHeight.value;\n    console.log(\n      `🔧 MiddleView: contentHeight (for MainContent) calculated: ${mainContentH}, totalMiddle: ${middleSectionTotalHeight.value}, bottomViewPx: ${actualBottomViewPixelHeight.value}`\n    );\n    return mainContentH;\n  });\n\n  /**\n   * 🖱️ 開始垂直拖曳調整 (Start Vertical Resize)\n   * 處理滑鼠按下事件，開始垂直面板大小調整\n   *\n   * @param {MouseEvent} event - 滑鼠按下事件\n   */\n  const startVerticalResize = (event) => {\n    // 阻止預設行為和事件冒泡，避免干擾其他元素\n    event.preventDefault();\n    event.stopPropagation();\n\n    // 設定拖曳狀態和視覺回饋\n    isVerticalDragging.value = true;\n    document.body.classList.add('my-no-select'); // 防止文字選取，提升拖曳體驗\n\n    // 記錄初始位置和狀態，用於計算拖曳變化量\n    const startY = event.clientY;\n    const startBottomPercent = bottomViewHeightPercent.value;\n    const currentMiddleSectionHeight = middleSectionTotalHeight.value;\n\n    /**\n     * 🖱️ 處理滑鼠移動事件 (Handle Mouse Move)\n     * 計算拖曳距離並更新面板高度比例\n     *\n     * @param {MouseEvent} moveEvent - 滑鼠移動事件\n     */\n    const handleMouseMove = (moveEvent) => {\n      moveEvent.preventDefault();\n      const deltaY = moveEvent.clientY - startY;\n\n      // 防止除零錯誤\n      if (currentMiddleSectionHeight === 0) return;\n\n      // 計算百分比變化 (Y座標變化轉換為高度百分比變化)\n      const deltaPercent = (deltaY / currentMiddleSectionHeight) * 100;\n\n      // 向上拖曳 (deltaY < 0) 增加底部面板高度百分比\n      // 向下拖曳 (deltaY > 0) 減少底部面板高度百分比\n      let newPercent = startBottomPercent - deltaPercent;\n\n      // 限制在合理範圍 (0-100%)，確保佈局穩定\n      newPercent = Math.max(0, Math.min(100, newPercent));\n\n      // 四捨五入到小數點後一位，避免精度問題\n      bottomViewHeightPercent.value = Math.round(newPercent * 10) / 10;\n    };\n\n    /**\n     * 🖱️ 處理滑鼠放開事件 (Handle Mouse Up)\n     * 清理拖曳狀態，移除事件監聽器\n     */\n    const handleMouseUp = () => {\n      // 清除拖曳狀態和視覺回饋\n      isVerticalDragging.value = false;\n      document.body.classList.remove('my-no-select');\n\n      // 移除臨時事件監聽器，避免記憶體洩漏\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    };\n\n    // 註冊全域事件監聽器，確保拖曳行為在整個頁面範圍內有效\n    document.addEventListener('mousemove', handleMouseMove);\n    document.addEventListener('mouseup', handleMouseUp);\n  };\n\n  /**\n   * 👀 監聽 activeUpperTab 變化 (Watch activeUpperTab Changes)\n   * 當分頁切換時記錄日誌，用於除錯和狀態追蹤\n   */\n  watch(\n    () => props.activeUpperTab,\n    (newTab, oldTab) => {\n      console.log(\n        `🔧 MiddleView Watcher: activeUpperTab changed from \"${oldTab}\" to \"${newTab}\". Current bottomViewHeightPercent: ${bottomViewHeightPercent.value}%`\n      );\n    }\n  );\n\n  /**\n   * 🚀 組件掛載時初始化 (Component Mounted Initialization)\n   * 組件載入完成後的初始化工作\n   */\n  onMounted(() => {\n    // 初始計算將依賴從 HomeView 傳遞的正確 prop\n    console.log('🚀 MiddleView mounted');\n  });\n\n  /**\n   * 🗑️ 組件卸載時清理 (Component Unmounted Cleanup)\n   * 組件銷毀前的清理工作，確保沒有記憶體洩漏\n   */\n  onUnmounted(() => {\n    console.log('🗑️ MiddleView unmounted');\n  });\n\n  // --- 🔧 可從父組件呼叫的方法 (Methods Callable from Parent) ---\n\n  /**\n   * 🎯 高亮顯示特徵 (Highlight Feature)\n   * 透過 mainContentRef 呼叫主內容面板的高亮功能\n   * 用於從表格或其他來源觸發地圖上的要素高亮\n   *\n   * @param {Object} highlightData - 包含 layerId 和 id 的高亮數據物件\n   */\n  const highlightFeature = (highlightData) => {\n    if (!mainContentRef.value) {\n      console.warn('⚠️ 無法高亮顯示：mainContentRef 未定義');\n      return;\n    }\n    console.log('🎯 MiddleView: 呼叫 highlightFeature', highlightData);\n    mainContentRef.value.highlightFeature(highlightData);\n  };\n\n  /**\n   * 🗺️ 適應台南邊界 (Fit to Tainan Bounds)\n   * 透過 mainContentRef 呼叫地圖適應邊界功能\n   * 將地圖視圖調整到顯示完整的台南市範圍\n   */\n  const fitToTainanBounds = () => {\n    if (mainContentRef.value) {\n      console.log('🗺️ MiddleView: 呼叫 fitToTainanBounds');\n      mainContentRef.value.fitToTainanBounds();\n    }\n  };\n\n  /**\n   * 🔄 重設地圖視圖 (Reset Map View)\n   * 透過 mainContentRef 呼叫地圖重設功能\n   * 將地圖恢復到預設的縮放等級和中心位置\n   */\n  const resetMapTab = () => {\n    if (mainContentRef.value) {\n      console.log('🔄 MiddleView: 呼叫 resetMapTab');\n      mainContentRef.value.resetView(); // 假設 UpperView 有 resetView 方法\n    }\n  };\n\n  /**\n   * 📏 刷新地圖尺寸 (Invalidate Map Size)\n   * 透過 mainContentRef 呼叫地圖尺寸重新計算功能\n   * 當容器大小變化但自動偵測失效時使用\n   */\n  const invalidateMapSize = () => {\n    if (mainContentRef.value) {\n      console.log('📏 MiddleView: 呼叫地圖尺寸刷新');\n      mainContentRef.value.invalidateMapSize();\n    }\n  };\n\n  /**\n   * 🔄 重試地圖初始化 (Retry Map Initialization)\n   * 透過 mainContentRef 呼叫地圖重試初始化功能\n   */\n  const retryMapInitialization = () => {\n    if (mainContentRef.value) {\n      console.log('🔄 MiddleView: 呼叫地圖重試初始化');\n      mainContentRef.value.retryMapInitialization();\n    }\n  };\n\n  /**\n   * 📊 獲取地圖初始化狀態 (Get Map Initialization Status)\n   * 透過 mainContentRef 獲取地圖初始化狀態\n   */\n  const getMapInitStatus = () => {\n    if (mainContentRef.value) {\n      return mainContentRef.value.getMapInitStatus();\n    }\n    return 'not-applicable';\n  };\n\n  /**\n   * 🛑 停止地圖點擊模式 (Stop Map Click Mode)\n   * 透過 mainContentRef 呼叫停止地圖點擊功能\n   */\n  const stopMapClickMode = () => {\n    if (mainContentRef.value) {\n      console.log('🛑 MiddleView: 停止地圖點擊模式');\n      mainContentRef.value.stopMapClickMode();\n    }\n  };\n\n  /**\n   * 📤 暴露方法給父組件使用 (Expose Methods to Parent Component)\n   * 讓 HomeView 可以直接呼叫這些方法，實現組件間的方法調用\n   */\n  defineExpose({\n    highlightFeature, // 高亮顯示功能\n    fitToTainanBounds, // 地圖邊界適應\n    resetMapTab, // 地圖視圖重設\n    invalidateMapSize, // 地圖尺寸刷新\n    retryMapInitialization, // 重試地圖初始化\n    getMapInitStatus, // 獲取地圖初始化狀態\n    stopMapClickMode, // 停止地圖點擊模式\n    // 如果 HomeView 需要直接存取子組件，可以暴露 mainContentRef 和 bottomViewRef\n    // mainContentRef,    // 主內容組件引用\n    // bottomViewRef      // 底部視圖組件引用\n  });\n</script>\n\n<template>\n  <!-- 🎛️ 中間面板組件 (Middle Panel Component) -->\n  <!-- 負責管理上下兩個面板的佈局和垂直拖曳調整功能 -->\n  <!-- 這是一個佈局容器，使用 flexbox 垂直排列，填滿可用空間 -->\n  <div class=\"d-flex flex-column overflow-hidden h-100\">\n    <!-- 📊 上半部內容區域 (Upper Content Area) -->\n    <!-- 包含地圖、儀表板等主要顯示內容 -->\n    <!-- 動態高度根據 contentHeight 計算，拖曳時禁用指標事件避免干擾 -->\n    <div\n      :style=\"{\n        pointerEvents: isOverallDragging ? 'none' : 'auto',\n        height: contentHeight + 'px',\n        overflow: 'hidden',\n      }\"\n    >\n      <!-- 🗺️ 上層視圖組件 (Upper View Component) -->\n      <!-- 傳遞所有必要的 props 給 UpperView，包含地圖狀態、資料、樣式設定等 -->\n      <UpperView\n        ref=\"mainContentRef\"\n        :activeUpperTab=\"activeUpperTab\"\n        :mainPanelWidth=\"mainPanelWidth\"\n        :contentHeight=\"contentHeight\"\n        :showTainanLayer=\"showTainanLayer\"\n        :selectedFilter=\"selectedFilter\"\n        :zoomLevel=\"zoomLevel\"\n        :isPanelDragging=\"isOverallDragging\"\n        :activeMarkers=\"activeMarkers\"\n        @update:activeUpperTab=\"$emit('update:activeUpperTab', $event)\"\n        @update:zoomLevel=\"$emit('update:zoomLevel', $event)\"\n        @update:currentCoords=\"$emit('update:currentCoords', $event)\"\n        @update:activeMarkers=\"$emit('update:activeMarkers', $event)\"\n        @show-service-point-detail=\"$emit('show-service-point-detail', $event)\"\n      />\n    </div>\n\n    <!-- 🔧 水平拖曳調整器 (Horizontal Resizer) -->\n    <!-- 用於調整上下面板的高度比例 -->\n    <!-- 監聽 mousedown 事件開始拖曳，動態顯示拖曳狀態的樣式 -->\n    <div\n      class=\"my-resizer my-resizer-horizontal my-resizer-middle\"\n      :class=\"{ 'my-dragging': isVerticalDragging }\"\n      @mousedown=\"startVerticalResize\"\n      title=\"拖曳調整底部面板高度\"\n    ></div>\n\n    <!-- 📋 下半部內容區域 (Bottom Content Area) -->\n    <!-- 包含資料表格、控制項等輔助顯示內容 -->\n    <!-- 動態高度根據 actualBottomViewPixelHeight 計算 -->\n    <div\n      class=\"overflow-hidden\"\n      :style=\"{\n        pointerEvents: isOverallDragging ? 'none' : 'auto',\n        height: actualBottomViewPixelHeight + 'px',\n      }\"\n    >\n      <!-- 📊 底部視圖組件 (Bottom View Component) -->\n      <!-- 傳遞表格資料、樣式設定、面板狀態等 props -->\n      <BottomView\n        :activeBottomTab=\"activeBottomTab\"\n        :bottomViewHeight=\"actualBottomViewPixelHeight\"\n        :isPanelDragging=\"isOverallDragging\"\n        @update:activeBottomTab=\"$emit('update:activeBottomTab', $event)\"\n        @highlight-on-map=\"$emit('highlight-on-map', $event)\"\n        @show-service-point-detail=\"$emit('show-service-point-detail', $event)\"\n        @reset-view=\"$emit('reset-view')\"\n      />\n    </div>\n  </div>\n</template>\n\n<style scoped></style>\n","import script from \"./MiddleView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./MiddleView.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script>\n  import { computed, ref, onMounted, onUnmounted } from 'vue';\n  import DateLayersTab from '../tabs/DateLayersTab.vue';\n  import DataTableTab from '../tabs/DataTableTab.vue';\n  import PropertiesTab from '../tabs/PropertiesTab.vue';\n\n  export default {\n    name: 'ResponsiveLowerView',\n\n    /**\n     * 🧩 組件註冊 (Component Registration)\n     * 註冊響應式下半部面板內使用的子組件\n     */\n    components: {\n      DateLayersTab, // 日期圖層分頁組件\n      DataTableTab, // 資料表格分頁組件\n      PropertiesTab, // 物件屬性分頁組件\n    },\n\n    /**\n     * 🔧 組件屬性定義 (Component Props)\n     * 接收來自父組件的配置和狀態數據\n     */\n    props: {\n      activeTab: { type: String, default: 'layers' },\n      activeRightTab: { type: String, default: 'properties' },\n      activeBottomTab: { type: String, default: 'table' },\n    },\n\n    /**\n     * 📡 組件事件定義 (Component Events)\n     * 定義向父組件發送的事件類型\n     */\n    emits: [\n      'update:activeTab', // 更新作用中分頁\n      'update:activeRightTab', // 更新右側分頁\n      'update:activeBottomTab', // 更新底部分頁\n      'highlight-on-map', // 在地圖上高亮顯示\n      'highlight-feature', // 高亮顯示特徵\n      'show-service-point-detail', // 顯示服務點詳細資訊\n    ],\n\n    /**\n     * 🔧 組件設定函數 (Component Setup)\n     * 使用 Composition API 設定組件邏輯\n     */\n    setup(props, { emit }) {\n      // 📱 動態視窗高度偵測 (Dynamic Viewport Height Detection)\n      const bottomSafeArea = ref(0);\n\n      /**\n       * 📊 計算可用的分頁列表 (Compute Available Tabs)\n       * 根據需求顯示不同的分頁選項\n       */\n      const availableTabs = computed(() => [\n        { id: 'layers', name: '圖層', icon: 'fas fa-layer-group' },\n        { id: 'table', name: '資料表', icon: 'fas fa-table' },\n        { id: 'properties', name: '屬性', icon: 'fa-solid fa-location-dot' },\n      ]);\n\n      /**\n       * 📱 計算底部安全區域 (Calculate Bottom Safe Area)\n       * 動態計算瀏覽器界面佔用的空間\n       */\n      const calculateBottomSafeArea = () => {\n        const windowHeight = window.innerHeight;\n        const visualHeight = window.visualViewport?.height || windowHeight;\n        const heightDiff = windowHeight - visualHeight;\n\n        // 如果可視高度小於視窗高度，說明有瀏覽器界面佔用空間\n        bottomSafeArea.value = heightDiff > 0 ? heightDiff : 0;\n      };\n\n      /**\n       * 🎨 動態底部導航樣式 (Dynamic Bottom Navigation Style)\n       * 根據瀏覽器界面動態調整高度和位置\n       */\n      const getBottomNavStyle = computed(() => {\n        const baseHeight = 60;\n        const extraPadding = bottomSafeArea.value > 0 ? bottomSafeArea.value + 10 : 10;\n\n        return {\n          'min-height': `${baseHeight}px`,\n          height: `${baseHeight + extraPadding}px`,\n          padding: `8px 4px ${extraPadding}px 4px`,\n        };\n      });\n\n      /**\n       * 🔘 切換分頁 (Switch Tab)\n       * @param {string} tabId - 分頁 ID\n       */\n      const switchTab = (tabId) => {\n        emit('update:activeTab', tabId);\n      };\n\n      /**\n       * 🚀 組件掛載時初始化 (Component Mounted Initialization)\n       */\n      onMounted(() => {\n        // 初始計算\n        calculateBottomSafeArea();\n\n        // 監聽視窗大小變化\n        window.addEventListener('resize', calculateBottomSafeArea);\n\n        // 監聽 Visual Viewport API（支援的瀏覽器）\n        if (window.visualViewport) {\n          window.visualViewport.addEventListener('resize', calculateBottomSafeArea);\n          window.visualViewport.addEventListener('scroll', calculateBottomSafeArea);\n        }\n\n        // 監聽方向變化\n        window.addEventListener('orientationchange', () => {\n          // 延遲執行，等待瀏覽器完成方向變化\n          setTimeout(calculateBottomSafeArea, 300);\n        });\n      });\n\n      /**\n       * 🗑️ 組件卸載時清理 (Component Unmounted Cleanup)\n       */\n      onUnmounted(() => {\n        window.removeEventListener('resize', calculateBottomSafeArea);\n\n        if (window.visualViewport) {\n          window.visualViewport.removeEventListener('resize', calculateBottomSafeArea);\n          window.visualViewport.removeEventListener('scroll', calculateBottomSafeArea);\n        }\n\n        window.removeEventListener('orientationchange', calculateBottomSafeArea);\n      });\n\n      // 📤 返回響應式數據和函數給模板使用\n      return {\n        availableTabs,\n        switchTab,\n        getBottomNavStyle,\n        bottomSafeArea,\n      };\n    },\n  };\n</script>\n\n<template>\n  <!-- 📱 響應式下半部面板組件 (Responsive Lower Panel Component) -->\n  <div class=\"d-flex flex-column h-100 my-bgcolor-gray-200\">\n    <!-- 📄 分頁內容區域 (Tab Content Area) -->\n    <div\n      class=\"flex-grow-1 overflow-hidden\"\n      :style=\"{\n        'padding-bottom': `70px`,\n      }\"\n    >\n      <!-- 📋 圖層分頁內容 -->\n      <div v-show=\"activeTab === 'layers'\" class=\"h-100\">\n        <DateLayersTab />\n      </div>\n\n      <!-- 📊 資料表格分頁內容 -->\n      <div v-show=\"activeTab === 'table'\" class=\"h-100\">\n        <DataTableTab\n          @highlight-on-map=\"$emit('highlight-on-map', $event)\"\n          @show-service-point-detail=\"$emit('show-service-point-detail', $event)\"\n        />\n      </div>\n\n      <!-- 📈 物件屬性分頁內容 -->\n      <div v-show=\"activeTab === 'properties'\" class=\"h-100\">\n        <PropertiesTab @highlight-feature=\"$emit('highlight-feature', $event)\" />\n      </div>\n    </div>\n\n    <!-- 📑 分頁導航 (Tab Navigation) - 固定在底部，動態適應瀏覽器界面 -->\n    <div\n      class=\"position-fixed bottom-0 start-0 end-0 d-flex align-items-center justify-content-between my-bgcolor-gray-200 border-top z-100 w-100\"\n      :style=\"getBottomNavStyle\"\n    >\n      <button\n        v-for=\"tab in availableTabs\"\n        :key=\"tab.id\"\n        class=\"d-flex rounded-3 border-0 flex-grow-1 py-2 mx-1\"\n        :class=\"{\n          'my-btn-transparent': activeTab !== tab.id,\n          'my-btn-blue': activeTab === tab.id,\n        }\"\n        :style=\"{\n          'min-height': '44px',\n          'touch-action': 'manipulation',\n          '-webkit-appearance': 'none !important',\n        }\"\n        @click=\"switchTab(tab.id)\"\n      >\n        <div class=\"d-flex flex-column align-items-center justify-content-center w-100\">\n          <span class=\"my-font-size-sm\"><i :class=\"tab.icon\" class=\"mb-1\"></i></span>\n          <span class=\"my-font-size-xs\">{{ tab.name }}</span>\n        </div>\n      </button>\n    </div>\n  </div>\n</template>\n\n<style scoped></style>\n","import { render } from \"./ResponsiveLowerView.vue?vue&type=template&id=191f95c6\"\nimport script from \"./ResponsiveLowerView.vue?vue&type=script&lang=js\"\nexport * from \"./ResponsiveLowerView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./HomeView.vue?vue&type=template&id=f5c16aaa\"\nimport script from \"./HomeView.vue?vue&type=script&lang=js\"\nexport * from \"./HomeView.vue?vue&type=script&lang=js\"\n\nimport \"./HomeView.vue?vue&type=style&index=0&id=f5c16aaa&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","/**\n * 🚀 Vue Router 路由配置\n *\n * 長照空間分析系統的路由管理\n * 使用 Vue Router 4 進行單頁應用程式路由控制\n *\n * @author 長照空間分析團隊\n * @version 1.0.0\n */\n\nimport { createRouter, createWebHistory } from 'vue-router';\nimport HomeView from '../views/HomeView.vue';\n\n/**\n * 📍 路由配置陣列\n * 定義應用程式的所有路由規則\n */\nconst routes = [\n  {\n    path: '/', // 🏠 根路徑\n    name: 'Home', // 路由名稱\n    component: HomeView, // 對應的 Vue 組件\n  },\n];\n\n/**\n * 🛣️ 路由器實例創建\n *\n * 配置說明：\n * - history: 使用 HTML5 History API 模式\n * - base: 設定應用程式的基礎路徑為 '/long-term-care-web-taichung/'\n * - routes: 路由配置陣列\n */\nconst router = createRouter({\n  history: createWebHistory('/long-term-care-web-taichung/'),\n  routes,\n});\n\nexport default router;\n","/**\n * 🚀 應用程式主入口文件 (Main Application Entry Point)\n *\n * 功能說明：\n * 1. 🎨 引入 Bootstrap 和自定義主題樣式系統\n * 2. 🧩 初始化 Vue 3 應用程式和全域組件\n * 3. 🗺️ 設定 Vue Router 路由導航系統\n * 4. 📦 配置 Pinia 狀態管理系統\n * 5. 🌍 掛載應用程式到 DOM 容器中\n * 6. 🔧 整合第三方庫（Leaflet、Font Awesome、Bootstrap）\n *\n * 技術棧：\n * - Vue 3 (Composition API)\n * - Vue Router 4\n * - Pinia (狀態管理)\n * - Bootstrap 5 (UI 框架)\n * - Leaflet (地圖庫)\n * - Font Awesome (圖示庫)\n */\n\n// 🔧 Vue 核心模組引入 (Vue Core Module Imports)\nimport { createApp } from 'vue';\nimport { createPinia } from 'pinia';\n\n// 🧩 應用程式組件引入 (Application Component Imports)\nimport App from './App.vue';\nimport router from './router';\n\n// 🎨 引入第三方樣式文件 (Import Third-Party Style Files)\nimport 'bootstrap/dist/css/bootstrap.min.css'; // Bootstrap 5 CSS 框架\nimport 'leaflet/dist/leaflet.css'; // Leaflet 地圖核心樣式\nimport '@fortawesome/fontawesome-free/css/all.min.css'; // Font Awesome 圖示庫\n\n// 🎨 引入自定義樣式文件 (Import Custom Style Files)\nimport './assets/css/common.css'; // 共用樣式（已包含變數和主題配置）\n\n// ⚙️ 引入第三方 JavaScript 文件 (Import Third-Party JavaScript Files)\nimport 'bootstrap/dist/js/bootstrap.bundle.min.js'; // Bootstrap JS（含 Popper.js）\n// 提供下拉選單、模態框、工具提示等互動功能\n\n// 🐛 調試資訊輸出 (Debug Information Output)\nconsole.log('🎨 樣式文件載入完成');\n\n// 🚀 創建並配置 Vue 應用程式實例 (Create and Configure Vue Application Instance)\nconst app = createApp(App);\n\n// 📦 創建 Pinia 狀態管理實例 (Create Pinia State Management Instance)\nconst pinia = createPinia();\n\n// 🗺️ 註冊 Vue Router 路由系統 (Register Vue Router Navigation System)\napp.use(router);\n\n// 📦 註冊 Pinia 狀態管理系統 (Register Pinia State Management System)\napp.use(pinia);\n\n// 🌍 掛載應用程式到 DOM 元素 (Mount Application to DOM Element)\n// 將 Vue 應用程式掛載到 index.html 中 id=\"app\" 的元素上\napp.mount('#app');\n\n// 🐛 應用程式啟動完成的調試資訊 (Application Startup Debug Information)\nconsole.log('🚀 空間分析視覺化平台已啟動');\nconsole.log('📦 Pinia 狀態管理已初始化');\nconsole.log('🗺️ Vue Router 路由系統已就緒');\nconsole.log('🎨 Bootstrap 5 UI 框架已載入');\nconsole.log('🗺️ Leaflet 地圖庫已準備就緒');\nconsole.log('🔤 Font Awesome 圖示庫已載入');\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunklong_term_care_web_taichung\"] = self[\"webpackChunklong_term_care_web_taichung\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(4434); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["id","class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createVNode","_component_router_view","name","components","setup","isLoading","ref","loadingText","loadingProgress","showLoadingProgress","loadingSubText","__exports__","render","_component_LoadingOverlay","isVisible","$setup","isAnyLayerLoading","progress","showProgress","subText","_ctx","$route","path","_hoisted_3","_hoisted_4","_hoisted_5","leftViewWidth","style","_normalizeStyle","width","leftViewWidthPx","_component_LeftView","selectedServicePoint","onClearServicePointDetail","handleClearServicePointDetail","_normalizeClass","isSidePanelDragging","onMousedown","_cache","$event","startResize","title","_component_MiddleView","mainPanelWidthPx","dynamicMainAreaHeight","calculatedMiddleViewHeight","activeUpperTab","activeBottomTab","mainPanelWidth","showTainanLayer","selectedFilter","zoomLevel","currentCoords","activeMarkers","isLoadingData","onResetView","resetView","onHighlightOnMap","handleHighlight","onHighlightFeature","onShowServicePointDetail","handleShowServicePointDetail","rightViewWidth","rightViewWidthPx","_component_RightView","activeRightTab","_hoisted_6","mobileBottomViewHeight","height","_createBlock","_component_UpperView","key","mobileMapKey","contentHeight","windowHeight","isPanelDragging","isVerticalDragging","args","startVerticalResize","onTouchstart","_component_ResponsiveLowerView","activeTab","activeLowerTab","_hoisted_7","async","loadNewStandardCentralServiceData","layer","dateFilter","layerId","filePath","fileName","response","fetch","ok","console","error","status","statusText","url","Error","jsonData","json","log","serviceProviderLayers","Map","allGeoJsonData","type","features","serviceProviderData","forEach","serviceProvider","filterValue","parseInt","serviceDate","serviceDateType","matches","serviceProviderId","服務人員身分證","unifiedColor","has","set","service_points","Array","isArray","service_points_routes","routeCollection","routeFeature","geometry","routeFeatureData","properties","layerName","strokeColor","routeColor","strokeWidth","strokeOpacity","pointCount","coordinates","length","distance","summary","duration","segments","get","push","service_points_routes_center","routeTimesArray","service_points_routes_time","centerCoords","index","lng","lat","isNaN","timeEntry","timeMinutes","time_interval","h","hour_interval","m","min_interval","timeLabel","hours","Math","floor","minutes","routeCenterFeatureData","fillColor","centerIndex","緯度","經度","traffic_time_minutes","undefined","traffic_time_label","warn","servicePoints","filter","record","detail","sort","a","b","timeA","hour_start","min_start","timeB","serviceRecord","Lat","Lon","parseFloat","lon","pointFeatureData","姓名","routeOrder","serviceTime","toString","padStart","address","個案居住地址","service_items","service_items_count","編號","性別","個案戶籍縣市","鄉鎮區","里別","個案戶籍地址","個案居住縣市","hour_end","min_end","time_total","hour_traffic","min_traffic","time_traffic","propertyData","firstService","lastService","firstPointWithCoords","find","point","size","color","getComputedStyle","document","documentElement","getPropertyValue","trim","服務日期","服務點位數","service_points_count","開始時間","結束時間","總服務時間","hour_total","min_total","總時間分鐘","交通時間","totalTrafficMinutes","reduce","total","交通時間分鐘","服務數量","第一個服務點","最後一個服務點","firstServicePoint","time","allServicePoints","map","順序","地址","時間","身分證字號","總服務時間分鐘","tableData","from","values","districtCounts","validPointCount","feature","district","Object","keys","districtCount","entries","count","max","item","summaryData","totalCount","f","routeCount","serviceProviderLayersArray","geoJsonData","serviceProviderInfo","servicePointsTableData","serviceItems","servicePointFeature","服務項目代碼","originalServiceProvider","sp","servicePointsCount","useDataStore","defineStore","COLOR_PALETTE","freeze","DEFAULT_LAYER_GROUPS","groupName","groupLayers","description","icon","layers","findLayerById","group","value","foundLayer","getAllLayers","allLayers","concat","toggleLayerVisibility","visible","hideAllLayersOnMap","toggleGroupVisibility","g","hasVisibleLayers","some","newVisibility","isGroupVisible","selectedFeature","selectedServiceDate","isDateFilterActive","selectedServiceProvider","isServiceProviderFilterActive","availableServiceProviders","activeLeftTab","setActiveLeftTab","tabName","setSelectedFeature","clearSelectedFeature","setServiceDateFilter","dateStr","clearServiceDateFilter","loadServiceProviderLayers","serviceRecordGroup","loadingLayer","isLoaded","isAnalysisLayer","isIsochroneAnalysisLayer","legendData","colorName","shape","result","serviceProviderIds","serviceLayer","colorIndex","assignedColor","serviceLayerId","serviceLayerObj","loader","clearServiceProviderLayers","loadAvailableServiceProviders","uniqueProviderIds","Set","providersWithStats","providerId","providerRecords","uniqueDates","dateCount","totalRecords","setServiceProviderFilter","clearServiceProviderFilter","loadServiceProviderDateLayers","dateGroups","date","sortedDates","dateData","processedData","processServiceProviderData","起始時間","layerObj","lineCount","clearServiceProviderDateLayers","providerGroup","dayRecords","providerIndex","route","matchesDateFilter","data","dataDate","calculateDistance","lat1","lng1","lat2","lng2","R","dLat","PI","dLng","sin","cos","c","atan2","sqrt","calculatePointsInRange","centerLat","centerLng","radiusMeters","pointsInRange","visiblePointLayers","l","enhancedFeature","round","calculatePolygonInRange","polygonInRange","visiblePolygonLayers","hasOverlap","checkPolygonCircleOverlap","overlapType","polygon","ring","visibleLayers","computed","loadingLayers","createServiceItemsData","itemOrFeature","isFeature","serviceItemsData","servicePoint","servicePointInfo","serviceType","order","persist","_Transition","$props","role","getLoadingDescription","onClick","_withModifiers","themeClass","spinnerStyle","_toDisplayString","shouldShowProgress","_hoisted_8","_hoisted_9","_hoisted_10","formattedProgress","getProgressAriaLabel","progressBarClass","_hoisted_12","props","Boolean","default","required","validator","String","Number","theme","includes","spinnerSizes","sm","md","lg","min","switchLeftTab","_component_DateLayersTab","_component_ServerLayersTab","_hoisted_11","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","toFixed","_hoisted_24","clearServicePointDetail","_component_DatePicker","placeholder","onDateSelected","handleDateSelected","_Fragment","_renderList","checked","onChange","toggleGroup","for","toggleLayer","getLayerColor","disabled","label","ICONS","add","zh","en","category","edit","delete","save","cancel","confirm","search","refresh","upload","download","import","export","folder","folder_open","file","home","back","forward","up","down","success","warning","info","loading","view","hide","expand","collapse","hidden","table","location","zoom_in","zoom_out","center","chart","statistics","dashboard","analysis","hospital","clinic","pharmacy","elderly_care","medical","population","demographics","community","income","tax","drag","move_up","move_down","reset","settings","sort_up","sort_down","menu","close","getIcon","iconKey","lang","iconInfo","text","currentYear","currentMonth","day","calendarDays","isCurrentMonth","isSelected","selectDate","modelValue","emits","emit","isOpen","selectedDate","year","month","firstDay","Date","getDay","daysInMonth","getDate","days","i","formatDateTo7Digits","republicanYear","monthStr","dayStr","parse7DigitsDate","substring","toggleCalendar","parsed","previousMonth","nextMonth","closeCalendar","event","target","closest","watch","newValue","onMounted","addEventListener","onUnmounted","removeEventListener","DatePicker","dataStore","layerListRef","startsWith","replace","firstFeature","_component_ServiceProviderPicker","onProviderSelected","handleProviderSelected","loadProviders","selectedProvider","availableProviders","provider","err","ServiceProviderPicker","providers","firstProvider","DateLayersTab","ServerLayersTab","_component_PropertiesTab","$emit","selectedLayer","selectedLayerColor","_component_DetailItem","firstLabel","firstValue","secondLabel","secondValue","hasProperties","$options","formatLabel","formatValue","isAnalysisObject","isServiceProviderObject","serviceProviderLabel","serviceDateLabel","selectServicePoint","isServiceItemsObject","_hoisted_25","_hoisted_26","_hoisted_27","row_id","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","單價","unitPrice","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","isRouteCenterPointObject","_hoisted_37","DetailItem","ff","selectedFeatureProps","serviceItemsLength","allObjectsInRange","points","obj","objectType","polygons","layerStats","polygonStats","combinedStats","combined","formatDateTime","isoString","toLocaleString","methods","labelMap","PTVNAME","中位數","area","density","分析點名稱","分析範圍名稱","中心緯度","中心經度","分析半徑","建立時間","關聯分析點","PropertiesTab","analysisList","selectedAnalysisId","getActiveAnalysisCount","newFeature","store","immediate","selectedFeatureComputed","_component_MapTab","maxCount","_component_DashboardTab","containerHeight","isRoutePlanningClickMode","isRouteOptimizationClickMode","highlightFeature","mapContainerId","showContextMenu","contextMenuPosition","x","y","deleteAnalysisPoint","hideContextMenu","getBasemapLabel","selectedBasemap","mapStore","basemaps","basemap","href","changeBasemap","showAllFeatures","isAnyLayerVisible","showFullCity","useDefineStore","state","mapView","zoom","actions","setSelectedBasemap","this","setMapView","L","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconRetina","iconUrl","shadowUrl","iconShadow","mapContainer","mapInstance","currentTileLayer","layerGroups","contextMenu","selectedAnalysisFeature","isMapReady","random","substr","previousViewState","createServicePointContent","gender","genderInitial","colorClass","nameWithGender","createMap","rect","getBoundingClientRect","top","left","containerId","containerClasses","className","zoomControl","attributionControl","fadeAnimation","zoomAnimation","on","handleZoomEnd","handleMoveEnd","e","originalEvent","eachLayer","options","removeLayer","resetAllLayerStyles","popupPane","getPane","zIndex","remove","cleanupError","getZoom","getCenter","setBasemap","config","attribution","addTo","mapContainerElement","backgroundColor","createFeatureLayer","storeLayerId","storeLayerName","geoJsonLayer","pointToLayer","latlng","html","iconSize","iconAnchor","popupAnchor","marker","circle","radius","weight","opacity","fillOpacity","isRoutePlanningLayer","isCompleted","borderColor","textColor","isRouteOptimizationLayer","pointColor","trafficTimeLabel","mins","timeTotal","timeInHours","areaPerHour","totalArea","fontSize","lineCap","lineJoin","dashArray","onEachFeature","bindPopup","offset","closeButton","autoClose","closeOnClick","popupContent","routeNumber","waypoints","click","closePopup","openPopup","routeCenterFeature","isServiceProviderLayer","isSameFeature","storeLayer","_originalStyle","bringToFront","serviceItemsFeature","basicFeature","contextmenu","showAnalysisContextMenu","saveCurrentViewState","restorePreviousViewState","setView","layerGroup","layerData","setStyle","resetStyle","syncLayers","storeLayers","currentLayerIds","visibleLayerIds","newLayerIds","layersToRemove","hasAnalysisLayerUpdate","newAddedLayers","slice","reverse","shouldCreateLayer","newLayer","bounds","hasValidBounds","getBounds","layerBounds","isValid","extend","setTimeout","fitBounds","padding","totalMarkers","acc","getLayers","defaultCenter","defaultZoom","highlightData","targetLayerId","targetFeatureId","firstPointMarker","foundAndHighlighted","targetLayerGroup","featureLat","featureLon","abs","tempMarker","performHighlight","targetLayer","targetFeature","specificLayerGroup","featureId","element","getElement","innerIconDiv","querySelector","transition","transform","getLatLng","maxZoom","hasDetail","retrySuccess","invalidateSize","nextTick","newRect","clearAnalysisLayer","preventDefault","stopPropagation","pageX","clientX","pageY","clientY","pointId","parentId","resizeObserver","resizeTimeout","setupResizeObserver","window","ResizeObserver","entry","contentRect","clearTimeout","observe","basemapType","isInitializing","initTimeoutId","initMap","containerExists","attempts","maxAttempts","isContainerReady","computedStyle","display","visibility","parentElement","tagName","parentRect","parent","parentStyle","tryInit","delay","disconnect","off","deep","oldFeature","activeLayerTab","chartContainer","setActiveLayerTab","currentLayerSummary","currentLayerName","drawHorizontalBarChart","validDistrictCount","d","d3","selectAll","margin","right","bottom","containerWidth","clientWidth","barHeight","barSpacing","svg","append","attr","xScale","domain","range","calculateTickSystem","dataMaxValue","interval","maxTicks","minInterval","ceil","chartMaxValue","ticks","maxValue","tickSystem","tickValues","enter","previousLayers","newLayers","previousLayerIds","addedLayerIds","newestAddedLayerId","newSummary","handleResize","MapTab","DashboardTab","dashboardContainerRef","dragging","tab","pointerEvents","newTab","oldTab","fitToTainanBounds","invalidateMapSize","retryMapInitialization","getMapInitStatus","mapInitStatus","bottomViewHeight","_component_DataTableTab","__emit","layerSortStates","getLayerColumns","isServiceLayer","getSortedData","sampleItem","getLayerDataCount","sortState","aValue","bValue","localeCompare","handleSort","getSortIcon","getColumnDisplayValue","column","abbr","start","end","總時間","startMinutes","endMinutes","totalMinutes","rowIndex","itemId","clearHighlightData","serviceHighlightData","innerHTML","DataTableTab","bottomTabContentRef","__props","mainContentRef","bottomViewHeightPercent","isOverallDragging","middleSectionTotalHeight","totalHeight","actualBottomViewPixelHeight","pixelHeight","mainContentH","body","classList","startY","startBottomPercent","currentMiddleSectionHeight","handleMouseMove","moveEvent","deltaY","deltaPercent","newPercent","handleMouseUp","resetMapTab","stopMapClickMode","__expose","UpperView","BottomView","getBottomNavStyle","availableTabs","switchTab","bottomSafeArea","calculateBottomSafeArea","innerHeight","visualHeight","visualViewport","heightDiff","baseHeight","extraPadding","tabId","LoadingOverlay","LeftView","RightView","MiddleView","ResponsiveLowerView","middlePanelRef","mobileUpperViewRef","appFooterRef","MIN_LEFT_PANEL_WIDTH_PERCENT","windowWidth","innerWidth","footerHeight","direction","startX","startLeftWidth","startRightWidth","currentWindowWidth","leftWidth","rightWidth","deltaX","deltaXPercent","newWidth","validatePanelSizes","mainWidth","prevWidth","prevIsDesktop","currentIsDesktop","handleScreenSizeChange","offsetHeight","minHeight","calculateMinBottomHeight","screenSizeObserver","isXlAndAbove","wasXlAndAbove","contains","toggle","updateActiveMarkers","isDesktop","servicePointData","minNavigationHeight","currentWindowHeight","isTouch","touches","startBottomHeight","handleMove","currentY","newHeight","minHeightPercent","handleEnd","finalHeight","passive","Event","dispatchEvent","routes","component","HomeView","router","createRouter","history","createWebHistory","app","createApp","App","pinia","createPinia","use","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","splice","r","n","getter","__esModule","definition","o","defineProperty","enumerable","globalThis","Function","prop","hasOwnProperty","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}